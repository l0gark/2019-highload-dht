<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (52,213 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (968 samples, 1.85%)</title><rect x="10.0" y="915.0" width="21.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="13.0" y="926.0">/..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (895 samples, 1.71%)</title><rect x="11.6" y="899.0" width="20.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="14.6" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (842 samples, 1.61%)</title><rect x="12.8" y="883.0" width="19.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="15.8" y="894.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (795 samples, 1.52%)</title><rect x="13.5" y="867.0" width="17.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="16.5" y="878.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (426 samples, 0.82%)</title><rect x="19.4" y="851.0" width="9.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="22.4" y="862.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (131 samples, 0.25%)</title><rect x="25.8" y="835.0" width="3.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="28.8" y="846.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (68 samples, 0.13%)</title><rect x="27.2" y="819.0" width="1.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="30.2" y="830.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (54 samples, 0.10%)</title><rect x="27.5" y="803.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="30.5" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (39 samples, 0.07%)</title><rect x="27.9" y="787.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="30.9" y="798.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (33 samples, 0.06%)</title><rect x="28.0" y="771.0" width="0.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="31.0" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (15 samples, 0.03%)</title><rect x="28.4" y="755.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="31.4" y="766.0"></text>
</g>
<g>
<title>__lll_unlock_wake (40 samples, 0.08%)</title><rect x="29.1" y="851.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="32.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.05%)</title><rect x="29.4" y="835.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="32.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.05%)</title><rect x="29.4" y="819.0" width="0.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="32.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.02%)</title><rect x="29.7" y="803.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="32.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.02%)</title><rect x="29.7" y="787.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="32.7" y="798.0"></text>
</g>
<g>
<title>__memset_avx2_erms (54 samples, 0.10%)</title><rect x="30.0" y="851.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="33.0" y="862.0"></text>
</g>
<g>
<title>__tls_get_addr (19 samples, 0.04%)</title><rect x="31.4" y="867.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="34.4" y="878.0"></text>
</g>
<g>
<title>[not_walkable] (90 samples, 0.17%)</title><rect x="32.1" y="915.0" width="2.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="35.1" y="926.0"></text>
</g>
<g>
<title>[not_walkable_Java] (104 samples, 0.20%)</title><rect x="34.1" y="915.0" width="2.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="37.1" y="926.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (104 samples, 0.20%)</title><rect x="34.1" y="899.0" width="2.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="37.1" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (70 samples, 0.13%)</title><rect x="34.8" y="883.0" width="1.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="37.8" y="894.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (57 samples, 0.11%)</title><rect x="35.1" y="867.0" width="1.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="38.1" y="878.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (49 samples, 0.09%)</title><rect x="35.2" y="851.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="38.2" y="862.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (22 samples, 0.04%)</title><rect x="35.9" y="835.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="38.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.05%)</title><rect x="36.5" y="915.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="39.5" y="926.0"></text>
</g>
<g>
<title>[unknown_Java] (4,262 samples, 8.16%)</title><rect x="37.0" y="915.0" width="96.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="40.0" y="926.0">[unknown_Ja..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (12 samples, 0.02%)</title><rect x="130.3" y="899.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="133.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.12%)</title><rect x="130.5" y="899.0" width="1.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="133.5" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (14 samples, 0.03%)</title><rect x="130.5" y="883.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="133.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.09%)</title><rect x="130.8" y="883.0" width="1.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="133.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.09%)</title><rect x="130.8" y="867.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="133.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.07%)</title><rect x="131.0" y="851.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="134.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.07%)</title><rect x="131.0" y="835.0" width="0.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="134.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.07%)</title><rect x="131.0" y="819.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="134.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.07%)</title><rect x="131.1" y="803.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="134.1" y="814.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (62 samples, 0.12%)</title><rect x="131.9" y="899.0" width="1.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="134.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 0.11%)</title><rect x="132.1" y="883.0" width="1.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="135.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 0.11%)</title><rect x="132.1" y="867.0" width="1.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="135.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.10%)</title><rect x="132.2" y="851.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="135.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.10%)</title><rect x="132.2" y="835.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="135.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.10%)</title><rect x="132.2" y="819.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="135.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.09%)</title><rect x="132.2" y="803.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="135.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.09%)</title><rect x="132.3" y="787.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="135.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.09%)</title><rect x="132.3" y="771.0" width="1.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="135.3" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (56 samples, 0.11%)</title><rect x="133.6" y="915.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="136.6" y="926.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.08%)</title><rect x="133.9" y="899.0" width="0.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="136.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.08%)</title><rect x="133.9" y="883.0" width="0.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="136.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.07%)</title><rect x="134.0" y="867.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="137.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.06%)</title><rect x="134.1" y="851.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="137.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.05%)</title><rect x="134.2" y="835.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="137.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.04%)</title><rect x="134.3" y="819.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="137.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.03%)</title><rect x="134.4" y="803.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="137.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.02%)</title><rect x="134.5" y="787.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="137.5" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.run (23,381 samples, 44.78%)</title><rect x="135.1" y="915.0" width="528.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="138.1" y="926.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (23,381 samples, 44.78%)</title><rect x="135.1" y="899.0" width="528.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.1" y="910.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (23,376 samples, 44.77%)</title><rect x="135.1" y="883.0" width="528.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="138.1" y="894.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (12 samples, 0.02%)</title><rect x="135.2" y="867.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="138.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (12 samples, 0.02%)</title><rect x="135.2" y="851.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="138.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (12 samples, 0.02%)</title><rect x="135.2" y="835.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="138.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (12 samples, 0.02%)</title><rect x="135.2" y="819.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="138.2" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (12 samples, 0.02%)</title><rect x="135.2" y="803.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="138.2" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (12 samples, 0.02%)</title><rect x="135.2" y="787.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="138.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (52 samples, 0.10%)</title><rect x="135.5" y="867.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="138.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (52 samples, 0.10%)</title><rect x="135.5" y="851.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="138.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (29 samples, 0.06%)</title><rect x="136.0" y="835.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="139.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (29 samples, 0.06%)</title><rect x="136.0" y="819.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="139.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3,509 samples, 6.72%)</title><rect x="136.7" y="867.0" width="79.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="139.7" y="878.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (3,421 samples, 6.55%)</title><rect x="138.3" y="851.0" width="77.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="141.3" y="862.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2,424 samples, 4.64%)</title><rect x="138.8" y="835.0" width="54.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="141.8" y="846.0">java/..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (18 samples, 0.03%)</title><rect x="139.9" y="819.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="142.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (21 samples, 0.04%)</title><rect x="140.4" y="819.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="143.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (91 samples, 0.17%)</title><rect x="140.9" y="819.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="143.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (16 samples, 0.03%)</title><rect x="141.3" y="803.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="144.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (56 samples, 0.11%)</title><rect x="141.6" y="803.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="144.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (56 samples, 0.11%)</title><rect x="141.6" y="787.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="144.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (16 samples, 0.03%)</title><rect x="142.5" y="771.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.5" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (16 samples, 0.03%)</title><rect x="142.5" y="755.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="145.5" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (16 samples, 0.03%)</title><rect x="142.5" y="739.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="145.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (276 samples, 0.53%)</title><rect x="142.9" y="819.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="145.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (276 samples, 0.53%)</title><rect x="142.9" y="803.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="145.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (266 samples, 0.51%)</title><rect x="142.9" y="787.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (262 samples, 0.50%)</title><rect x="143.0" y="771.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (262 samples, 0.50%)</title><rect x="143.0" y="755.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="146.0" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (40 samples, 0.08%)</title><rect x="143.0" y="739.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="146.0" y="750.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (26 samples, 0.05%)</title><rect x="143.1" y="723.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="146.1" y="734.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (222 samples, 0.43%)</title><rect x="143.9" y="739.0" width="5.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="146.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (177 samples, 0.34%)</title><rect x="144.9" y="723.0" width="4.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="147.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (177 samples, 0.34%)</title><rect x="144.9" y="707.0" width="4.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="147.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (162 samples, 0.31%)</title><rect x="145.3" y="691.0" width="3.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="148.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (162 samples, 0.31%)</title><rect x="145.3" y="675.0" width="3.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="148.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (160 samples, 0.31%)</title><rect x="145.3" y="659.0" width="3.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="148.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (154 samples, 0.29%)</title><rect x="145.4" y="643.0" width="3.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="148.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (146 samples, 0.28%)</title><rect x="145.6" y="627.0" width="3.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="148.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (137 samples, 0.26%)</title><rect x="145.8" y="611.0" width="3.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="148.8" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1,964 samples, 3.76%)</title><rect x="149.2" y="819.0" width="44.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="152.2" y="830.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1,961 samples, 3.76%)</title><rect x="149.3" y="803.0" width="44.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="152.3" y="814.0">jdk/..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (936 samples, 1.79%)</title><rect x="149.5" y="787.0" width="21.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="152.5" y="798.0">/..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (254 samples, 0.49%)</title><rect x="151.0" y="771.0" width="5.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="154.0" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (63 samples, 0.12%)</title><rect x="154.9" y="755.0" width="1.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="157.9" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (16 samples, 0.03%)</title><rect x="156.4" y="755.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="159.4" y="766.0"></text>
</g>
<g>
<title>__lll_unlock_wake (512 samples, 0.98%)</title><rect x="156.7" y="771.0" width="11.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="159.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (318 samples, 0.61%)</title><rect x="161.1" y="755.0" width="7.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="164.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (318 samples, 0.61%)</title><rect x="161.1" y="739.0" width="7.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="164.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (117 samples, 0.22%)</title><rect x="165.7" y="723.0" width="2.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="168.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (104 samples, 0.20%)</title><rect x="166.0" y="707.0" width="2.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="169.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (94 samples, 0.18%)</title><rect x="166.2" y="691.0" width="2.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="169.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.07%)</title><rect x="167.5" y="675.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="170.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.04%)</title><rect x="167.9" y="659.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="170.9" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_wait (17 samples, 0.03%)</title><rect x="168.3" y="771.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="171.3" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (27 samples, 0.05%)</title><rect x="168.7" y="771.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="171.7" y="782.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (54 samples, 0.10%)</title><rect x="169.4" y="771.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="172.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (1,015 samples, 1.94%)</title><rect x="170.6" y="787.0" width="23.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="173.6" y="798.0">[..</text>
</g>
<g>
<title>__pthread_cleanup_pop (40 samples, 0.08%)</title><rect x="170.7" y="771.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="173.7" y="782.0"></text>
</g>
<g>
<title>__pthread_cond_wait (827 samples, 1.58%)</title><rect x="171.7" y="771.0" width="18.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="174.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (369 samples, 0.71%)</title><rect x="182.1" y="755.0" width="8.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="185.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (369 samples, 0.71%)</title><rect x="182.1" y="739.0" width="8.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="185.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (268 samples, 0.51%)</title><rect x="184.4" y="723.0" width="6.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="187.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (257 samples, 0.49%)</title><rect x="184.6" y="707.0" width="5.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="187.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (239 samples, 0.46%)</title><rect x="185.0" y="691.0" width="5.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="188.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (221 samples, 0.42%)</title><rect x="185.4" y="675.0" width="5.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="188.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (130 samples, 0.25%)</title><rect x="187.5" y="659.0" width="2.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="190.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.11%)</title><rect x="189.1" y="643.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="192.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.05%)</title><rect x="189.8" y="627.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="192.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.03%)</title><rect x="190.0" y="611.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="193.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.03%)</title><rect x="190.0" y="595.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="193.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.03%)</title><rect x="190.0" y="579.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="193.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.03%)</title><rect x="190.1" y="563.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="193.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.03%)</title><rect x="190.1" y="547.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="193.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.03%)</title><rect x="190.1" y="531.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="193.1" y="542.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.03%)</title><rect x="190.1" y="515.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="193.1" y="526.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (73 samples, 0.14%)</title><rect x="190.4" y="771.0" width="1.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="193.4" y="782.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (13 samples, 0.02%)</title><rect x="192.1" y="771.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="195.1" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (21 samples, 0.04%)</title><rect x="192.4" y="771.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="195.4" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (14 samples, 0.03%)</title><rect x="192.9" y="771.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="195.9" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (18 samples, 0.03%)</title><rect x="193.2" y="771.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="196.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (413 samples, 0.79%)</title><rect x="193.6" y="835.0" width="9.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="196.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (411 samples, 0.79%)</title><rect x="193.6" y="819.0" width="9.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="196.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (324 samples, 0.62%)</title><rect x="194.8" y="803.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="197.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (152 samples, 0.29%)</title><rect x="195.4" y="787.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.4" y="798.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (23 samples, 0.04%)</title><rect x="195.6" y="771.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="198.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (122 samples, 0.23%)</title><rect x="196.1" y="771.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="199.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (64 samples, 0.12%)</title><rect x="196.1" y="755.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="199.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (57 samples, 0.11%)</title><rect x="197.6" y="755.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="200.6" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (31 samples, 0.06%)</title><rect x="197.6" y="739.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="200.6" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (17 samples, 0.03%)</title><rect x="197.7" y="723.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="200.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.02%)</title><rect x="197.8" y="707.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="200.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.02%)</title><rect x="197.8" y="691.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="200.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.05%)</title><rect x="198.3" y="739.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="201.3" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (21 samples, 0.04%)</title><rect x="198.3" y="723.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="201.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (30 samples, 0.06%)</title><rect x="198.8" y="787.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="201.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (99 samples, 0.19%)</title><rect x="199.5" y="787.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="202.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (99 samples, 0.19%)</title><rect x="199.5" y="771.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="202.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (55 samples, 0.11%)</title><rect x="199.9" y="755.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="202.9" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (13 samples, 0.02%)</title><rect x="200.8" y="739.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="203.8" y="750.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (13 samples, 0.02%)</title><rect x="200.8" y="723.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="203.8" y="734.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (13 samples, 0.02%)</title><rect x="200.8" y="707.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="203.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (27 samples, 0.05%)</title><rect x="201.1" y="755.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="204.1" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (27 samples, 0.05%)</title><rect x="201.1" y="739.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="204.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (25 samples, 0.05%)</title><rect x="201.2" y="723.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="204.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (14 samples, 0.03%)</title><rect x="201.8" y="787.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="204.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (37 samples, 0.07%)</title><rect x="202.1" y="803.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="205.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (37 samples, 0.07%)</title><rect x="202.1" y="787.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="205.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.getExclusiveOwnerThread (26 samples, 0.05%)</title><rect x="202.2" y="771.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="205.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (561 samples, 1.07%)</title><rect x="202.9" y="835.0" width="12.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="205.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (561 samples, 1.07%)</title><rect x="202.9" y="819.0" width="12.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="205.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (561 samples, 1.07%)</title><rect x="202.9" y="803.0" width="12.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="205.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (561 samples, 1.07%)</title><rect x="202.9" y="787.0" width="12.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="205.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (561 samples, 1.07%)</title><rect x="202.9" y="771.0" width="12.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="205.9" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (63 samples, 0.12%)</title><rect x="202.9" y="755.0" width="1.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="205.9" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (36 samples, 0.07%)</title><rect x="203.2" y="739.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="206.2" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (13 samples, 0.02%)</title><rect x="204.0" y="739.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="207.0" y="750.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (496 samples, 0.95%)</title><rect x="204.4" y="755.0" width="11.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="207.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (409 samples, 0.78%)</title><rect x="206.3" y="739.0" width="9.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="209.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (409 samples, 0.78%)</title><rect x="206.3" y="723.0" width="9.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="209.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (387 samples, 0.74%)</title><rect x="206.8" y="707.0" width="8.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="209.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (386 samples, 0.74%)</title><rect x="206.9" y="691.0" width="8.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="209.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (381 samples, 0.73%)</title><rect x="207.0" y="675.0" width="8.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="210.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (360 samples, 0.69%)</title><rect x="207.5" y="659.0" width="8.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="210.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (342 samples, 0.66%)</title><rect x="207.9" y="643.0" width="7.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="210.9" y="654.0"></text>
</g>
<g>
<title>[unknown] (326 samples, 0.62%)</title><rect x="208.2" y="627.0" width="7.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="211.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/service/SimpleServer$$Lambda$67/1693143379.run (19,791 samples, 37.90%)</title><rect x="216.1" y="867.0" width="447.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="219.1" y="878.0">ru/mail/polis/service/SimpleServer$$Lambda$67/1693143379.run</text>
</g>
<g>
<title>ru/mail/polis/service/SimpleServer.lambda$executeAsync$4 (19,781 samples, 37.89%)</title><rect x="216.3" y="851.0" width="447.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="219.3" y="862.0">ru/mail/polis/service/SimpleServer.lambda$executeAsync$4</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (12 samples, 0.02%)</title><rect x="216.6" y="835.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="219.6" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/SimpleServer$$Lambda$64/1424917803.act (2,057 samples, 3.94%)</title><rect x="216.9" y="835.0" width="46.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="219.9" y="846.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/SimpleServer.lambda$daoMethods$2 (2,054 samples, 3.93%)</title><rect x="217.0" y="819.0" width="46.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="220.0" y="830.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/SimpleServer.putMethod (2,054 samples, 3.93%)</title><rect x="217.0" y="803.0" width="46.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="220.0" y="814.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (161 samples, 0.31%)</title><rect x="217.1" y="787.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="220.1" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (161 samples, 0.31%)</title><rect x="217.1" y="771.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="220.1" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (161 samples, 0.31%)</title><rect x="217.1" y="755.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="220.1" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (160 samples, 0.31%)</title><rect x="217.1" y="739.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="220.1" y="750.0"></text>
</g>
<g>
<title>itable stub (30 samples, 0.06%)</title><rect x="218.8" y="723.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="221.8" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (12 samples, 0.02%)</title><rect x="219.5" y="723.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="222.5" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (32 samples, 0.06%)</title><rect x="219.8" y="723.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="222.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/persistence/LSMDao.upsert (1,870 samples, 3.58%)</title><rect x="221.1" y="787.0" width="42.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="224.1" y="798.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/persistence/MemoryTablePool.upsert (1,869 samples, 3.58%)</title><rect x="221.1" y="771.0" width="42.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="224.1" y="782.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.get (25 samples, 0.05%)</title><rect x="221.2" y="755.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="224.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/persistence/MemTable.upsert (1,838 samples, 3.52%)</title><rect x="221.7" y="755.0" width="41.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="224.7" y="766.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (1,682 samples, 3.22%)</title><rect x="223.2" y="739.0" width="38.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="226.2" y="750.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1,682 samples, 3.22%)</title><rect x="223.2" y="723.0" width="38.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="226.2" y="734.0">jav..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (174 samples, 0.33%)</title><rect x="235.0" y="707.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="238.0" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (145 samples, 0.28%)</title><rect x="235.6" y="691.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="238.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (216 samples, 0.41%)</title><rect x="238.9" y="707.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="241.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (159 samples, 0.30%)</title><rect x="243.8" y="707.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="246.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (50 samples, 0.10%)</title><rect x="247.4" y="707.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="250.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (24 samples, 0.05%)</title><rect x="247.6" y="691.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="250.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (16 samples, 0.03%)</title><rect x="248.2" y="691.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="251.2" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.03%)</title><rect x="248.2" y="675.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="251.2" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.02%)</title><rect x="248.2" y="659.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="251.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (555 samples, 1.06%)</title><rect x="248.5" y="707.0" width="12.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="251.5" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (530 samples, 1.02%)</title><rect x="249.1" y="691.0" width="12.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="252.1" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (526 samples, 1.01%)</title><rect x="249.2" y="675.0" width="11.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="252.2" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (163 samples, 0.31%)</title><rect x="249.7" y="659.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="252.7" y="670.0"></text>
</g>
<g>
<title>vectorizedMismatch (146 samples, 0.28%)</title><rect x="250.1" y="643.0" width="3.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="253.1" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (22 samples, 0.04%)</title><rect x="253.4" y="659.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="256.4" y="670.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (280 samples, 0.54%)</title><rect x="253.9" y="659.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="256.9" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (102 samples, 0.20%)</title><rect x="257.9" y="643.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="260.9" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (39 samples, 0.07%)</title><rect x="259.0" y="627.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="262.0" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (16 samples, 0.03%)</title><rect x="259.8" y="627.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="262.8" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (39 samples, 0.07%)</title><rect x="260.2" y="659.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="263.2" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (20 samples, 0.04%)</title><rect x="260.5" y="643.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="263.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/persistence/Value.of (82 samples, 0.16%)</title><rect x="261.4" y="739.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="264.4" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (25 samples, 0.05%)</title><rect x="261.4" y="723.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="264.4" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (23 samples, 0.04%)</title><rect x="261.5" y="707.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="264.5" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (23 samples, 0.04%)</title><rect x="261.5" y="691.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="264.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/persistence/Value.getMoment (56 samples, 0.11%)</title><rect x="262.0" y="723.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="265.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (28 samples, 0.05%)</title><rect x="262.1" y="707.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="265.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.incrementAndGet (23 samples, 0.04%)</title><rect x="262.7" y="707.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="265.7" y="718.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (18 samples, 0.03%)</title><rect x="262.7" y="691.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="265.7" y="702.0"></text>
</g>
<g>
<title>gettimeofday (17 samples, 0.03%)</title><rect x="262.8" y="675.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="265.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/SimpleServer$$Lambda$65/1271384834.act (7,022 samples, 13.45%)</title><rect x="263.4" y="835.0" width="158.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="266.4" y="846.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru/mail/polis/service/SimpleServer.lambda$daoMethods$0 (7,022 samples, 13.45%)</title><rect x="263.4" y="819.0" width="158.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="266.4" y="830.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru/mail/polis/service/SimpleServer.proxy (7,022 samples, 13.45%)</title><rect x="263.4" y="803.0" width="158.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="266.4" y="814.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>java/util/HashMap.get (17 samples, 0.03%)</title><rect x="263.9" y="787.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="266.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (6,981 samples, 13.37%)</title><rect x="264.3" y="787.0" width="157.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="267.3" y="798.0">one/nio/http/HttpCli..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (6,977 samples, 13.36%)</title><rect x="264.4" y="771.0" width="157.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="267.4" y="782.0">one/nio/http/HttpCli..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (1,777 samples, 3.40%)</title><rect x="265.2" y="755.0" width="40.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="268.2" y="766.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1,528 samples, 2.93%)</title><rect x="270.8" y="739.0" width="34.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="273.8" y="750.0">on..</text>
</g>
<g>
<title>[unknown] (183 samples, 0.35%)</title><rect x="271.8" y="723.0" width="4.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="274.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (183 samples, 0.35%)</title><rect x="271.8" y="707.0" width="4.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="274.8" y="718.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (143 samples, 0.27%)</title><rect x="272.0" y="691.0" width="3.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="275.0" y="702.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (115 samples, 0.22%)</title><rect x="272.5" y="675.0" width="2.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="275.5" y="686.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (72 samples, 0.14%)</title><rect x="273.4" y="659.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="276.4" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (12 samples, 0.02%)</title><rect x="274.7" y="643.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="277.7" y="654.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (29 samples, 0.06%)</title><rect x="275.3" y="691.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="278.3" y="702.0"></text>
</g>
<g>
<title>__GI___recv (1,284 samples, 2.46%)</title><rect x="276.0" y="723.0" width="29.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="279.0" y="734.0">__..</text>
</g>
<g>
<title>[unknown] (1,066 samples, 2.04%)</title><rect x="280.9" y="707.0" width="24.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="283.9" y="718.0">[..</text>
</g>
<g>
<title>[unknown] (1,066 samples, 2.04%)</title><rect x="280.9" y="691.0" width="24.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="283.9" y="702.0">[..</text>
</g>
<g>
<title>[unknown] (972 samples, 1.86%)</title><rect x="283.0" y="675.0" width="22.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="286.0" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (964 samples, 1.85%)</title><rect x="283.2" y="659.0" width="21.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="286.2" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (945 samples, 1.81%)</title><rect x="283.6" y="643.0" width="21.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="286.6" y="654.0">[..</text>
</g>
<g>
<title>[unknown] (911 samples, 1.74%)</title><rect x="284.4" y="627.0" width="20.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="287.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (875 samples, 1.68%)</title><rect x="285.2" y="611.0" width="19.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="288.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (743 samples, 1.42%)</title><rect x="288.2" y="595.0" width="16.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="291.2" y="606.0"></text>
</g>
<g>
<title>[unknown] (609 samples, 1.17%)</title><rect x="291.2" y="579.0" width="13.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="294.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (526 samples, 1.01%)</title><rect x="293.1" y="563.0" width="11.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="296.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (357 samples, 0.68%)</title><rect x="296.9" y="547.0" width="8.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="299.9" y="558.0"></text>
</g>
<g>
<title>[unknown] (188 samples, 0.36%)</title><rect x="300.7" y="531.0" width="4.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="303.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.05%)</title><rect x="304.3" y="515.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="307.3" y="526.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.04%)</title><rect x="304.5" y="499.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="307.5" y="510.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.04%)</title><rect x="304.5" y="483.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="307.5" y="494.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.03%)</title><rect x="304.6" y="467.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="307.6" y="478.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.03%)</title><rect x="304.6" y="451.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="307.6" y="462.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.03%)</title><rect x="304.6" y="435.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="307.6" y="446.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.02%)</title><rect x="304.7" y="419.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="307.7" y="430.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (16 samples, 0.03%)</title><rect x="305.0" y="723.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="308.0" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (389 samples, 0.75%)</title><rect x="305.3" y="755.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="308.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (77 samples, 0.15%)</title><rect x="305.8" y="739.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="308.8" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (59 samples, 0.11%)</title><rect x="306.2" y="723.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="309.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (22 samples, 0.04%)</title><rect x="306.5" y="707.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="309.5" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (21 samples, 0.04%)</title><rect x="307.0" y="707.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="310.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (171 samples, 0.33%)</title><rect x="307.7" y="739.0" width="3.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="310.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (136 samples, 0.26%)</title><rect x="308.5" y="723.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="311.5" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (126 samples, 0.24%)</title><rect x="308.7" y="707.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="311.7" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (45 samples, 0.09%)</title><rect x="311.6" y="739.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="314.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (47 samples, 0.09%)</title><rect x="312.7" y="739.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="315.7" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (35 samples, 0.07%)</title><rect x="312.9" y="723.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="315.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (32 samples, 0.06%)</title><rect x="313.0" y="707.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="316.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (15 samples, 0.03%)</title><rect x="313.8" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="316.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (15 samples, 0.03%)</title><rect x="313.8" y="723.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="316.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (327 samples, 0.63%)</title><rect x="314.1" y="755.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="317.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (38 samples, 0.07%)</title><rect x="315.3" y="739.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="318.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (214 samples, 0.41%)</title><rect x="316.2" y="739.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="319.2" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (32 samples, 0.06%)</title><rect x="316.8" y="723.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="319.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (17 samples, 0.03%)</title><rect x="317.2" y="707.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="320.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (56 samples, 0.11%)</title><rect x="317.5" y="723.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="320.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (46 samples, 0.09%)</title><rect x="317.7" y="707.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="320.7" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (16 samples, 0.03%)</title><rect x="318.4" y="691.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="321.4" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (97 samples, 0.19%)</title><rect x="318.8" y="723.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="321.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (88 samples, 0.17%)</title><rect x="319.0" y="707.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="322.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (40 samples, 0.08%)</title><rect x="320.0" y="691.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="323.0" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (24 samples, 0.05%)</title><rect x="321.0" y="739.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="324.0" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (64 samples, 0.12%)</title><rect x="321.5" y="755.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="324.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.length (14 samples, 0.03%)</title><rect x="321.6" y="739.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="324.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (38 samples, 0.07%)</title><rect x="321.9" y="739.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="324.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (36 samples, 0.07%)</title><rect x="322.0" y="723.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="325.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (872 samples, 1.67%)</title><rect x="323.0" y="755.0" width="19.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="326.0" y="766.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (23 samples, 0.04%)</title><rect x="323.4" y="739.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="326.4" y="750.0"></text>
</g>
<g>
<title>__GI___setsockopt (826 samples, 1.58%)</title><rect x="324.0" y="739.0" width="18.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="327.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (508 samples, 0.97%)</title><rect x="331.2" y="723.0" width="11.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="334.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (508 samples, 0.97%)</title><rect x="331.2" y="707.0" width="11.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="334.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (336 samples, 0.64%)</title><rect x="335.1" y="691.0" width="7.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="338.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (331 samples, 0.63%)</title><rect x="335.2" y="675.0" width="7.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="338.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (307 samples, 0.59%)</title><rect x="335.7" y="659.0" width="7.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="338.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (223 samples, 0.43%)</title><rect x="337.6" y="643.0" width="5.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="340.6" y="654.0"></text>
</g>
<g>
<title>[unknown] (173 samples, 0.33%)</title><rect x="338.8" y="627.0" width="3.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="341.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 0.16%)</title><rect x="340.8" y="611.0" width="1.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="343.8" y="622.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (3,323 samples, 6.36%)</title><rect x="342.7" y="755.0" width="75.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="345.7" y="766.0">one/nio/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (93 samples, 0.18%)</title><rect x="344.0" y="739.0" width="2.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="347.0" y="750.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (55 samples, 0.11%)</title><rect x="344.6" y="723.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="347.6" y="734.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (31 samples, 0.06%)</title><rect x="345.2" y="707.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="348.2" y="718.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (12 samples, 0.02%)</title><rect x="345.9" y="723.0" width="0.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="348.9" y="734.0"></text>
</g>
<g>
<title>__send (3,149 samples, 6.03%)</title><rect x="346.5" y="739.0" width="71.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="349.5" y="750.0">__send</text>
</g>
<g>
<title>[unknown] (3,008 samples, 5.76%)</title><rect x="349.7" y="723.0" width="68.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="352.7" y="734.0">[unknown]</text>
</g>
<g>
<title>[unknown] (3,008 samples, 5.76%)</title><rect x="349.7" y="707.0" width="68.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="352.7" y="718.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2,930 samples, 5.61%)</title><rect x="351.5" y="691.0" width="66.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="354.5" y="702.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2,917 samples, 5.59%)</title><rect x="351.8" y="675.0" width="65.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="354.8" y="686.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2,906 samples, 5.57%)</title><rect x="352.0" y="659.0" width="65.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="355.0" y="670.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2,873 samples, 5.50%)</title><rect x="352.7" y="643.0" width="65.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="355.7" y="654.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2,848 samples, 5.45%)</title><rect x="353.3" y="627.0" width="64.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="356.3" y="638.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2,830 samples, 5.42%)</title><rect x="353.7" y="611.0" width="64.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="356.7" y="622.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2,734 samples, 5.24%)</title><rect x="355.9" y="595.0" width="61.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="358.9" y="606.0">[unkno..</text>
</g>
<g>
<title>[unknown] (2,636 samples, 5.05%)</title><rect x="358.1" y="579.0" width="59.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="361.1" y="590.0">[unkno..</text>
</g>
<g>
<title>[unknown] (2,525 samples, 4.84%)</title><rect x="360.6" y="563.0" width="57.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="363.6" y="574.0">[unkno..</text>
</g>
<g>
<title>[unknown] (2,422 samples, 4.64%)</title><rect x="362.9" y="547.0" width="54.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="365.9" y="558.0">[unkn..</text>
</g>
<g>
<title>[unknown] (2,259 samples, 4.33%)</title><rect x="366.6" y="531.0" width="51.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="369.6" y="542.0">[unkn..</text>
</g>
<g>
<title>[unknown] (2,183 samples, 4.18%)</title><rect x="368.3" y="515.0" width="49.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="371.3" y="526.0">[unkn..</text>
</g>
<g>
<title>[unknown] (2,133 samples, 4.09%)</title><rect x="369.5" y="499.0" width="48.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="372.5" y="510.0">[unk..</text>
</g>
<g>
<title>[unknown] (2,092 samples, 4.01%)</title><rect x="370.4" y="483.0" width="47.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="373.4" y="494.0">[unk..</text>
</g>
<g>
<title>[unknown] (2,066 samples, 3.96%)</title><rect x="371.0" y="467.0" width="46.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="374.0" y="478.0">[unk..</text>
</g>
<g>
<title>[unknown] (2,036 samples, 3.90%)</title><rect x="371.7" y="451.0" width="46.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="374.7" y="462.0">[unk..</text>
</g>
<g>
<title>[unknown] (1,968 samples, 3.77%)</title><rect x="373.2" y="435.0" width="44.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="376.2" y="446.0">[unk..</text>
</g>
<g>
<title>[unknown] (1,958 samples, 3.75%)</title><rect x="373.4" y="419.0" width="44.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="376.4" y="430.0">[unk..</text>
</g>
<g>
<title>[unknown] (1,915 samples, 3.67%)</title><rect x="374.4" y="403.0" width="43.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="377.4" y="414.0">[unk..</text>
</g>
<g>
<title>[unknown] (1,884 samples, 3.61%)</title><rect x="375.1" y="387.0" width="42.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="378.1" y="398.0">[unk..</text>
</g>
<g>
<title>[unknown] (1,810 samples, 3.47%)</title><rect x="376.8" y="371.0" width="40.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="379.8" y="382.0">[un..</text>
</g>
<g>
<title>[unknown] (1,750 samples, 3.35%)</title><rect x="378.1" y="355.0" width="39.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="381.1" y="366.0">[un..</text>
</g>
<g>
<title>[unknown] (1,681 samples, 3.22%)</title><rect x="379.7" y="339.0" width="38.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="382.7" y="350.0">[un..</text>
</g>
<g>
<title>[unknown] (1,653 samples, 3.17%)</title><rect x="380.3" y="323.0" width="37.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="383.3" y="334.0">[un..</text>
</g>
<g>
<title>[unknown] (1,632 samples, 3.13%)</title><rect x="380.8" y="307.0" width="36.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="383.8" y="318.0">[un..</text>
</g>
<g>
<title>[unknown] (1,598 samples, 3.06%)</title><rect x="381.6" y="291.0" width="36.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="384.6" y="302.0">[un..</text>
</g>
<g>
<title>[unknown] (1,570 samples, 3.01%)</title><rect x="382.2" y="275.0" width="35.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="385.2" y="286.0">[un..</text>
</g>
<g>
<title>[unknown] (1,562 samples, 2.99%)</title><rect x="382.4" y="259.0" width="35.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="385.4" y="270.0">[un..</text>
</g>
<g>
<title>[unknown] (1,558 samples, 2.98%)</title><rect x="382.5" y="243.0" width="35.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="385.5" y="254.0">[un..</text>
</g>
<g>
<title>[unknown] (1,524 samples, 2.92%)</title><rect x="383.2" y="227.0" width="34.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="386.2" y="238.0">[u..</text>
</g>
<g>
<title>[unknown] (1,487 samples, 2.85%)</title><rect x="384.1" y="211.0" width="33.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="387.1" y="222.0">[u..</text>
</g>
<g>
<title>[unknown] (1,392 samples, 2.67%)</title><rect x="386.2" y="195.0" width="31.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="389.2" y="206.0">[u..</text>
</g>
<g>
<title>[unknown] (1,347 samples, 2.58%)</title><rect x="387.2" y="179.0" width="30.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="390.2" y="190.0">[u..</text>
</g>
<g>
<title>[unknown] (1,227 samples, 2.35%)</title><rect x="389.9" y="163.0" width="27.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="392.9" y="174.0">[..</text>
</g>
<g>
<title>[unknown] (1,077 samples, 2.06%)</title><rect x="393.3" y="147.0" width="24.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="396.3" y="158.0">[..</text>
</g>
<g>
<title>[unknown] (1,046 samples, 2.00%)</title><rect x="394.0" y="131.0" width="23.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="397.0" y="142.0">[..</text>
</g>
<g>
<title>[unknown] (1,016 samples, 1.95%)</title><rect x="394.7" y="115.0" width="23.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="397.7" y="126.0">[..</text>
</g>
<g>
<title>[unknown] (57 samples, 0.11%)</title><rect x="416.4" y="99.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="419.4" y="110.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.07%)</title><rect x="416.8" y="83.0" width="0.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="419.8" y="94.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.05%)</title><rect x="417.0" y="67.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="420.0" y="78.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (160 samples, 0.31%)</title><rect x="417.8" y="755.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="420.8" y="766.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (133 samples, 0.25%)</title><rect x="418.4" y="739.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="421.4" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (133 samples, 0.25%)</title><rect x="418.4" y="723.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="421.4" y="734.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (30 samples, 0.06%)</title><rect x="421.4" y="755.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="424.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/SimpleServer.sendResponse (10,673 samples, 20.44%)</title><rect x="422.2" y="835.0" width="241.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="425.2" y="846.0">ru/mail/polis/service/SimpleServ..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (10,667 samples, 20.43%)</title><rect x="422.3" y="819.0" width="241.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="425.3" y="830.0">one/nio/http/HttpSession.sendRes..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (113 samples, 0.22%)</title><rect x="425.6" y="803.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="428.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (110 samples, 0.21%)</title><rect x="425.7" y="787.0" width="2.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="428.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (110 samples, 0.21%)</title><rect x="425.7" y="771.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="428.7" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (10,290 samples, 19.71%)</title><rect x="428.4" y="803.0" width="232.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="431.4" y="814.0">one/nio/http/HttpSession.writeR..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (501 samples, 0.96%)</title><rect x="428.4" y="787.0" width="11.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="431.4" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (33 samples, 0.06%)</title><rect x="429.6" y="771.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="432.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (409 samples, 0.78%)</title><rect x="430.5" y="771.0" width="9.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="433.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (17 samples, 0.03%)</title><rect x="431.0" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="434.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (16 samples, 0.03%)</title><rect x="431.0" y="739.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="434.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (187 samples, 0.36%)</title><rect x="431.5" y="755.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="434.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (47 samples, 0.09%)</title><rect x="434.4" y="739.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="437.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (18 samples, 0.03%)</title><rect x="435.1" y="723.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="438.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.length (12 samples, 0.02%)</title><rect x="435.5" y="739.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="438.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (177 samples, 0.34%)</title><rect x="435.8" y="755.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="438.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (177 samples, 0.34%)</title><rect x="435.8" y="739.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="438.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (28 samples, 0.05%)</title><rect x="438.7" y="723.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="441.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (26 samples, 0.05%)</title><rect x="438.7" y="707.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="441.7" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (9,786 samples, 18.74%)</title><rect x="439.8" y="787.0" width="221.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="442.8" y="798.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (9,773 samples, 18.72%)</title><rect x="440.1" y="771.0" width="220.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="443.1" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (50 samples, 0.10%)</title><rect x="440.3" y="755.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="443.3" y="766.0"></text>
</g>
<g>
<title>gettimeofday (38 samples, 0.07%)</title><rect x="440.6" y="739.0" width="0.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="443.6" y="750.0"></text>
</g>
<g>
<title>[vdso] (34 samples, 0.07%)</title><rect x="440.7" y="723.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="443.7" y="734.0"></text>
</g>
<g>
<title>gettimeofday (30 samples, 0.06%)</title><rect x="441.5" y="755.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="444.5" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (9,677 samples, 18.53%)</title><rect x="442.2" y="755.0" width="218.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="445.2" y="766.0">one/nio/net/Session$ArrayQueu..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (9,652 samples, 18.49%)</title><rect x="442.8" y="739.0" width="218.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="445.8" y="750.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (18 samples, 0.03%)</title><rect x="444.4" y="723.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="447.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (221 samples, 0.42%)</title><rect x="444.8" y="723.0" width="5.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="447.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (220 samples, 0.42%)</title><rect x="444.8" y="707.0" width="5.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="447.8" y="718.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (175 samples, 0.34%)</title><rect x="445.0" y="691.0" width="4.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="448.0" y="702.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (144 samples, 0.28%)</title><rect x="445.5" y="675.0" width="3.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="448.5" y="686.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (110 samples, 0.21%)</title><rect x="446.3" y="659.0" width="2.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="449.3" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (24 samples, 0.05%)</title><rect x="448.2" y="643.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="451.2" y="654.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (18 samples, 0.03%)</title><rect x="449.0" y="691.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="452.0" y="702.0"></text>
</g>
<g>
<title>__send (14 samples, 0.03%)</title><rect x="449.4" y="691.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="452.4" y="702.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (31 samples, 0.06%)</title><rect x="449.8" y="723.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="452.8" y="734.0"></text>
</g>
<g>
<title>__send (9,310 samples, 17.83%)</title><rect x="450.5" y="723.0" width="210.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="453.5" y="734.0">__send</text>
</g>
<g>
<title>[unknown] (8,775 samples, 16.81%)</title><rect x="462.6" y="707.0" width="198.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="465.6" y="718.0">[unknown]</text>
</g>
<g>
<title>[unknown] (8,775 samples, 16.81%)</title><rect x="462.6" y="691.0" width="198.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="465.6" y="702.0">[unknown]</text>
</g>
<g>
<title>[unknown] (8,572 samples, 16.42%)</title><rect x="467.2" y="675.0" width="193.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="470.2" y="686.0">[unknown]</text>
</g>
<g>
<title>[unknown] (8,561 samples, 16.40%)</title><rect x="467.4" y="659.0" width="193.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="470.4" y="670.0">[unknown]</text>
</g>
<g>
<title>[unknown] (8,466 samples, 16.21%)</title><rect x="469.6" y="643.0" width="191.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="472.6" y="654.0">[unknown]</text>
</g>
<g>
<title>[unknown] (8,397 samples, 16.08%)</title><rect x="471.1" y="627.0" width="189.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="474.1" y="638.0">[unknown]</text>
</g>
<g>
<title>[unknown] (8,321 samples, 15.94%)</title><rect x="472.8" y="611.0" width="188.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="475.8" y="622.0">[unknown]</text>
</g>
<g>
<title>[unknown] (8,276 samples, 15.85%)</title><rect x="473.9" y="595.0" width="187.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="476.9" y="606.0">[unknown]</text>
</g>
<g>
<title>[unknown] (7,745 samples, 14.83%)</title><rect x="485.9" y="579.0" width="175.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="488.9" y="590.0">[unknown]</text>
</g>
<g>
<title>[unknown] (7,410 samples, 14.19%)</title><rect x="493.4" y="563.0" width="167.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="496.4" y="574.0">[unknown]</text>
</g>
<g>
<title>[unknown] (7,067 samples, 13.53%)</title><rect x="501.2" y="547.0" width="159.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="504.2" y="558.0">[unknown]</text>
</g>
<g>
<title>[unknown] (6,780 samples, 12.99%)</title><rect x="507.7" y="531.0" width="153.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="510.7" y="542.0">[unknown]</text>
</g>
<g>
<title>[unknown] (6,273 samples, 12.01%)</title><rect x="519.1" y="515.0" width="141.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="522.1" y="526.0">[unknown]</text>
</g>
<g>
<title>[unknown] (6,083 samples, 11.65%)</title><rect x="523.4" y="499.0" width="137.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="526.4" y="510.0">[unknown]</text>
</g>
<g>
<title>[unknown] (5,915 samples, 11.33%)</title><rect x="527.2" y="483.0" width="133.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="530.2" y="494.0">[unknown]</text>
</g>
<g>
<title>[unknown] (5,774 samples, 11.06%)</title><rect x="530.4" y="467.0" width="130.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="533.4" y="478.0">[unknown]</text>
</g>
<g>
<title>[unknown] (5,619 samples, 10.76%)</title><rect x="533.9" y="451.0" width="127.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="536.9" y="462.0">[unknown]</text>
</g>
<g>
<title>[unknown] (5,530 samples, 10.59%)</title><rect x="535.9" y="435.0" width="125.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="538.9" y="446.0">[unknown]</text>
</g>
<g>
<title>[unknown] (5,340 samples, 10.23%)</title><rect x="540.2" y="419.0" width="120.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="543.2" y="430.0">[unknown]</text>
</g>
<g>
<title>[unknown] (5,298 samples, 10.15%)</title><rect x="541.2" y="403.0" width="119.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="544.2" y="414.0">[unknown]</text>
</g>
<g>
<title>[unknown] (5,178 samples, 9.92%)</title><rect x="543.9" y="387.0" width="117.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="546.9" y="398.0">[unknown]</text>
</g>
<g>
<title>[unknown] (5,080 samples, 9.73%)</title><rect x="546.1" y="371.0" width="114.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="549.1" y="382.0">[unknown]</text>
</g>
<g>
<title>[unknown] (4,866 samples, 9.32%)</title><rect x="550.9" y="355.0" width="110.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="553.9" y="366.0">[unknown]</text>
</g>
<g>
<title>[unknown] (4,709 samples, 9.02%)</title><rect x="554.5" y="339.0" width="106.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="557.5" y="350.0">[unknown]</text>
</g>
<g>
<title>[unknown] (4,535 samples, 8.69%)</title><rect x="558.4" y="323.0" width="102.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="561.4" y="334.0">[unknown]</text>
</g>
<g>
<title>[unknown] (4,434 samples, 8.49%)</title><rect x="560.7" y="307.0" width="100.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="563.7" y="318.0">[unknown]</text>
</g>
<g>
<title>[unknown] (4,369 samples, 8.37%)</title><rect x="562.2" y="291.0" width="98.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="565.2" y="302.0">[unknown]</text>
</g>
<g>
<title>[unknown] (4,228 samples, 8.10%)</title><rect x="565.3" y="275.0" width="95.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="568.3" y="286.0">[unknown]</text>
</g>
<g>
<title>[unknown] (4,131 samples, 7.91%)</title><rect x="567.5" y="259.0" width="93.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="570.5" y="270.0">[unknown]</text>
</g>
<g>
<title>[unknown] (4,103 samples, 7.86%)</title><rect x="568.2" y="243.0" width="92.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="571.2" y="254.0">[unknown]</text>
</g>
<g>
<title>[unknown] (4,092 samples, 7.84%)</title><rect x="568.4" y="227.0" width="92.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="571.4" y="238.0">[unknown]</text>
</g>
<g>
<title>[unknown] (4,021 samples, 7.70%)</title><rect x="570.0" y="211.0" width="90.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="573.0" y="222.0">[unknown]</text>
</g>
<g>
<title>[unknown] (3,880 samples, 7.43%)</title><rect x="573.2" y="195.0" width="87.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="576.2" y="206.0">[unknown]</text>
</g>
<g>
<title>[unknown] (3,523 samples, 6.75%)</title><rect x="581.3" y="179.0" width="79.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="584.3" y="190.0">[unknown]</text>
</g>
<g>
<title>[unknown] (3,329 samples, 6.38%)</title><rect x="585.7" y="163.0" width="75.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="588.7" y="174.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2,770 samples, 5.31%)</title><rect x="598.3" y="147.0" width="62.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="601.3" y="158.0">[unkno..</text>
</g>
<g>
<title>[unknown] (2,155 samples, 4.13%)</title><rect x="612.2" y="131.0" width="48.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="615.2" y="142.0">[unk..</text>
</g>
<g>
<title>[unknown] (2,018 samples, 3.86%)</title><rect x="615.3" y="115.0" width="45.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="618.3" y="126.0">[unk..</text>
</g>
<g>
<title>[unknown] (1,978 samples, 3.79%)</title><rect x="616.2" y="99.0" width="44.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="619.2" y="110.0">[unk..</text>
</g>
<g>
<title>[unknown] (156 samples, 0.30%)</title><rect x="657.4" y="83.0" width="3.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="660.4" y="94.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 0.19%)</title><rect x="658.7" y="67.0" width="2.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="661.7" y="78.0"></text>
</g>
<g>
<title>[unknown] (74 samples, 0.14%)</title><rect x="659.2" y="51.0" width="1.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="662.2" y="62.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.04%)</title><rect x="660.5" y="35.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="663.5" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (98 samples, 0.19%)</title><rect x="660.9" y="803.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="663.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (74 samples, 0.14%)</title><rect x="661.5" y="787.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="664.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.length (39 samples, 0.07%)</title><rect x="661.5" y="771.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="664.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (35 samples, 0.07%)</title><rect x="662.3" y="771.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="665.3" y="782.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (10,989 samples, 21.05%)</title><rect x="663.5" y="915.0" width="248.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="666.5" y="926.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (28 samples, 0.05%)</title><rect x="664.6" y="899.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="667.6" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (66 samples, 0.13%)</title><rect x="665.2" y="899.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="668.2" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (66 samples, 0.13%)</title><rect x="665.2" y="883.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="668.2" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (22 samples, 0.04%)</title><rect x="666.2" y="867.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="669.2" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2,343 samples, 4.49%)</title><rect x="666.8" y="899.0" width="52.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="669.8" y="910.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (66 samples, 0.13%)</title><rect x="667.3" y="883.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="670.3" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (36 samples, 0.07%)</title><rect x="667.9" y="867.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="670.9" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2,256 samples, 4.32%)</title><rect x="668.8" y="883.0" width="50.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="671.8" y="894.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (25 samples, 0.05%)</title><rect x="670.1" y="867.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="673.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (2,066 samples, 3.96%)</title><rect x="670.7" y="867.0" width="46.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="673.7" y="878.0">[unk..</text>
</g>
<g>
<title>__libc_disable_asynccancel (26 samples, 0.05%)</title><rect x="670.7" y="851.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="673.7" y="862.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (16 samples, 0.03%)</title><rect x="671.3" y="851.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="674.3" y="862.0"></text>
</g>
<g>
<title>epoll_wait (2,021 samples, 3.87%)</title><rect x="671.7" y="851.0" width="45.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="674.7" y="862.0">epol..</text>
</g>
<g>
<title>[unknown] (1,422 samples, 2.72%)</title><rect x="685.2" y="835.0" width="32.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="688.2" y="846.0">[u..</text>
</g>
<g>
<title>[unknown] (1,422 samples, 2.72%)</title><rect x="685.2" y="819.0" width="32.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="688.2" y="830.0">[u..</text>
</g>
<g>
<title>[unknown] (1,282 samples, 2.46%)</title><rect x="688.4" y="803.0" width="28.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="691.4" y="814.0">[u..</text>
</g>
<g>
<title>[unknown] (1,270 samples, 2.43%)</title><rect x="688.6" y="787.0" width="28.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="691.6" y="798.0">[u..</text>
</g>
<g>
<title>[unknown] (1,246 samples, 2.39%)</title><rect x="689.2" y="771.0" width="28.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="692.2" y="782.0">[u..</text>
</g>
<g>
<title>[unknown] (1,058 samples, 2.03%)</title><rect x="693.4" y="755.0" width="23.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="696.4" y="766.0">[..</text>
</g>
<g>
<title>[unknown] (840 samples, 1.61%)</title><rect x="698.4" y="739.0" width="18.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="701.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (605 samples, 1.16%)</title><rect x="703.7" y="723.0" width="13.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="706.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (456 samples, 0.87%)</title><rect x="707.0" y="707.0" width="10.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="710.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (221 samples, 0.42%)</title><rect x="712.4" y="691.0" width="4.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="715.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.07%)</title><rect x="716.5" y="675.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="719.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.06%)</title><rect x="716.6" y="659.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="719.6" y="670.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.06%)</title><rect x="716.6" y="643.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="719.6" y="654.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.06%)</title><rect x="716.7" y="627.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="719.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.05%)</title><rect x="716.8" y="611.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="719.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.04%)</title><rect x="716.9" y="595.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="719.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.04%)</title><rect x="716.9" y="579.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="719.9" y="590.0"></text>
</g>
<g>
<title>_init (18 samples, 0.03%)</title><rect x="717.6" y="867.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="720.6" y="878.0"></text>
</g>
<g>
<title>clock_gettime (44 samples, 0.08%)</title><rect x="718.0" y="867.0" width="1.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="721.0" y="878.0"></text>
</g>
<g>
<title>[vdso] (17 samples, 0.03%)</title><rect x="718.6" y="851.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="721.6" y="862.0"></text>
</g>
<g>
<title>epoll_wait (29 samples, 0.06%)</title><rect x="719.0" y="867.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="722.0" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (8,502 samples, 16.28%)</title><rect x="719.7" y="899.0" width="192.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="722.7" y="910.0">one/nio/net/Session.process</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (69 samples, 0.13%)</title><rect x="720.5" y="883.0" width="1.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="723.5" y="894.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (15 samples, 0.03%)</title><rect x="720.8" y="867.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="723.8" y="878.0"></text>
</g>
<g>
<title>gettimeofday (39 samples, 0.07%)</title><rect x="721.2" y="867.0" width="0.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="724.2" y="878.0"></text>
</g>
<g>
<title>[vdso] (34 samples, 0.07%)</title><rect x="721.3" y="851.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="724.3" y="862.0"></text>
</g>
<g>
<title>gettimeofday (13 samples, 0.02%)</title><rect x="722.1" y="883.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="725.1" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (8,384 samples, 16.06%)</title><rect x="722.4" y="883.0" width="189.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="725.4" y="894.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6,296 samples, 12.06%)</title><rect x="723.0" y="867.0" width="142.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="726.0" y="878.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5,226 samples, 10.01%)</title><rect x="728.7" y="851.0" width="118.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="731.7" y="862.0">one/nio/http/H..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5,200 samples, 9.96%)</title><rect x="729.3" y="835.0" width="117.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="732.3" y="846.0">one/nio/http/H..</text>
</g>
<g>
<title>RequestHandler1_daoMethods.handleRequest (4,898 samples, 9.38%)</title><rect x="729.7" y="819.0" width="110.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="732.7" y="830.0">RequestHandle..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (234 samples, 0.45%)</title><rect x="729.8" y="803.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="732.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (50 samples, 0.10%)</title><rect x="730.3" y="787.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="733.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (49 samples, 0.09%)</title><rect x="730.3" y="771.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="733.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (14 samples, 0.03%)</title><rect x="731.4" y="787.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="734.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.length (12 samples, 0.02%)</title><rect x="731.5" y="771.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="734.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (118 samples, 0.23%)</title><rect x="731.7" y="787.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="734.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (114 samples, 0.22%)</title><rect x="731.8" y="771.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="734.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (56 samples, 0.11%)</title><rect x="732.0" y="755.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="735.0" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (32 samples, 0.06%)</title><rect x="733.3" y="755.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="736.3" y="766.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineUpdate (16 samples, 0.03%)</title><rect x="734.0" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="737.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (31 samples, 0.06%)</title><rect x="734.4" y="787.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="737.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (31 samples, 0.06%)</title><rect x="734.4" y="771.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="737.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (31 samples, 0.06%)</title><rect x="734.4" y="755.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="737.4" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (29 samples, 0.06%)</title><rect x="734.4" y="739.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="737.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/SimpleServer.daoMethods (4,660 samples, 8.92%)</title><rect x="735.1" y="803.0" width="105.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="738.1" y="814.0">ru/mail/polis..</text>
</g>
<g>
<title>java/lang/String.getBytes (31 samples, 0.06%)</title><rect x="747.5" y="787.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="750.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (31 samples, 0.06%)</title><rect x="747.5" y="771.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="750.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (18 samples, 0.03%)</title><rect x="747.8" y="755.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="750.8" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (53 samples, 0.10%)</title><rect x="748.7" y="787.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="751.7" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (53 samples, 0.10%)</title><rect x="748.7" y="771.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="751.7" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (31 samples, 0.06%)</title><rect x="749.2" y="755.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="752.2" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (18 samples, 0.03%)</title><rect x="749.4" y="739.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="752.4" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (18 samples, 0.03%)</title><rect x="749.4" y="723.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="752.4" y="734.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (92 samples, 0.18%)</title><rect x="750.3" y="787.0" width="2.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="753.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Node.isMe (26 samples, 0.05%)</title><rect x="752.7" y="787.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="755.7" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Node.isMe (26 samples, 0.05%)</title><rect x="752.7" y="771.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="755.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (26 samples, 0.05%)</title><rect x="752.7" y="755.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="755.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Node.primaryFor (2,328 samples, 4.46%)</title><rect x="753.3" y="787.0" width="52.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="756.3" y="798.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/Node.primaryFor (2,328 samples, 4.46%)</title><rect x="753.3" y="771.0" width="52.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="756.3" y="782.0">ru/ma..</text>
</g>
<g>
<title>java/util/Arrays.toString (388 samples, 0.74%)</title><rect x="754.3" y="755.0" width="8.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="757.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (27 samples, 0.05%)</title><rect x="754.6" y="739.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="757.6" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (25 samples, 0.05%)</title><rect x="754.7" y="723.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="757.7" y="734.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (21 samples, 0.04%)</title><rect x="754.8" y="707.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="757.8" y="718.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (276 samples, 0.53%)</title><rect x="755.2" y="739.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="758.2" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (273 samples, 0.52%)</title><rect x="755.3" y="723.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="758.3" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (172 samples, 0.33%)</title><rect x="756.2" y="707.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="759.2" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.newCapacity (48 samples, 0.09%)</title><rect x="757.9" y="691.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="760.9" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (19 samples, 0.04%)</title><rect x="758.6" y="675.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="761.6" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (38 samples, 0.07%)</title><rect x="759.0" y="691.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="762.0" y="702.0"></text>
</g>
<g>
<title>java/lang/Integer.getChars (22 samples, 0.04%)</title><rect x="760.3" y="707.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="763.3" y="718.0"></text>
</g>
<g>
<title>java/lang/Integer.stringSize (19 samples, 0.04%)</title><rect x="760.8" y="707.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="763.8" y="718.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (72 samples, 0.14%)</title><rect x="761.5" y="739.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="764.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (31 samples, 0.06%)</title><rect x="762.4" y="723.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="765.4" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.03%)</title><rect x="762.5" y="707.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="765.5" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.02%)</title><rect x="762.8" y="707.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="765.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/persistence/Bytes.toArray (298 samples, 0.57%)</title><rect x="763.2" y="755.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="766.2" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (176 samples, 0.34%)</title><rect x="763.7" y="739.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="766.7" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (149 samples, 0.29%)</title><rect x="764.2" y="723.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="767.2" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (130 samples, 0.25%)</title><rect x="764.7" y="707.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="767.7" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (130 samples, 0.25%)</title><rect x="764.7" y="691.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="767.7" y="702.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (13 samples, 0.02%)</title><rect x="767.0" y="675.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="770.0" y="686.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (13 samples, 0.02%)</title><rect x="767.0" y="659.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="770.0" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (13 samples, 0.02%)</title><rect x="767.0" y="643.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="770.0" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (90 samples, 0.17%)</title><rect x="767.7" y="739.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="770.7" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (75 samples, 0.14%)</title><rect x="768.0" y="723.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="771.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (75 samples, 0.14%)</title><rect x="768.0" y="707.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="771.0" y="718.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.hash (12 samples, 0.02%)</title><rect x="768.9" y="691.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="771.9" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (14 samples, 0.03%)</title><rect x="769.1" y="691.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="772.1" y="702.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (13 samples, 0.02%)</title><rect x="769.4" y="691.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="772.4" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Node.myHashCode (1,590 samples, 3.05%)</title><rect x="770.0" y="755.0" width="35.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="773.0" y="766.0">ru/..</text>
</g>
<g>
<title>com/google/common/hash/AbstractHasher.putString (259 samples, 0.50%)</title><rect x="770.3" y="739.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="773.3" y="750.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractByteHasher.putBytes (237 samples, 0.45%)</title><rect x="770.5" y="723.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="773.5" y="734.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractByteHasher.update (230 samples, 0.44%)</title><rect x="770.7" y="707.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="773.7" y="718.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.update (229 samples, 0.44%)</title><rect x="770.7" y="691.0" width="5.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="773.7" y="702.0"></text>
</g>
<g>
<title>java/security/MessageDigest.update (219 samples, 0.42%)</title><rect x="770.9" y="675.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="773.9" y="686.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineUpdate (212 samples, 0.41%)</title><rect x="771.0" y="659.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="774.0" y="670.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineUpdate (207 samples, 0.40%)</title><rect x="771.2" y="643.0" width="4.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="774.2" y="654.0"></text>
</g>
<g>
<title>jbyte_arraycopy (12 samples, 0.02%)</title><rect x="773.1" y="627.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="776.1" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (50 samples, 0.10%)</title><rect x="773.4" y="627.0" width="1.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="776.4" y="638.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompress (57 samples, 0.11%)</title><rect x="774.5" y="627.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="777.5" y="638.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompressCheck (48 samples, 0.09%)</title><rect x="774.8" y="611.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="777.8" y="622.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.b2iBig64 (44 samples, 0.08%)</title><rect x="774.8" y="595.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="777.8" y="606.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (14 samples, 0.03%)</title><rect x="775.9" y="723.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="778.9" y="734.0"></text>
</g>
<g>
<title>com/google/common/hash/HashCode$BytesHashCode.asLong (21 samples, 0.04%)</title><rect x="776.2" y="739.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="779.2" y="750.0"></text>
</g>
<g>
<title>com/google/common/hash/HashCode$BytesHashCode.padToLong (12 samples, 0.02%)</title><rect x="776.4" y="723.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="779.4" y="734.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.hash (612 samples, 1.17%)</title><rect x="776.7" y="739.0" width="13.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="779.7" y="750.0"></text>
</g>
<g>
<title>com/google/common/hash/HashCode.fromBytesNoCopy (12 samples, 0.02%)</title><rect x="776.7" y="723.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="779.7" y="734.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (582 samples, 1.11%)</title><rect x="777.1" y="723.0" width="13.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="780.1" y="734.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (582 samples, 1.11%)</title><rect x="777.1" y="707.0" width="13.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="780.1" y="718.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (582 samples, 1.11%)</title><rect x="777.1" y="691.0" width="13.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="780.1" y="702.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (568 samples, 1.09%)</title><rect x="777.4" y="675.0" width="12.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="780.4" y="686.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implDigest (565 samples, 1.08%)</title><rect x="777.5" y="659.0" width="12.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="780.5" y="670.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.i2bBig (119 samples, 0.23%)</title><rect x="778.1" y="643.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="781.1" y="654.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.i2bBig4 (18 samples, 0.03%)</title><rect x="780.8" y="643.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="783.8" y="654.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineUpdate (264 samples, 0.51%)</title><rect x="781.3" y="643.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="784.3" y="654.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (79 samples, 0.15%)</title><rect x="783.2" y="627.0" width="1.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="786.2" y="638.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompress (89 samples, 0.17%)</title><rect x="785.3" y="627.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="788.3" y="638.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.b2iBig64 (21 samples, 0.04%)</title><rect x="785.3" y="611.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="788.3" y="622.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompressCheck (68 samples, 0.13%)</title><rect x="785.7" y="611.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="788.7" y="622.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.b2iBig64 (61 samples, 0.12%)</title><rect x="785.9" y="595.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="788.9" y="606.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompress (132 samples, 0.25%)</title><rect x="787.3" y="643.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="790.3" y="654.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.b2iBig64 (14 samples, 0.03%)</title><rect x="787.4" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="790.4" y="638.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompressCheck (111 samples, 0.21%)</title><rect x="787.7" y="627.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="790.7" y="638.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (18 samples, 0.03%)</title><rect x="787.9" y="611.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="790.9" y="622.0"></text>
</g>
<g>
<title>sha256_implCompress (13 samples, 0.02%)</title><rect x="788.0" y="595.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="791.0" y="606.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.b2iBig64 (87 samples, 0.17%)</title><rect x="788.3" y="611.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="791.3" y="622.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction.newHasher (668 samples, 1.28%)</title><rect x="790.5" y="739.0" width="15.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="793.5" y="750.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (285 samples, 0.55%)</title><rect x="791.8" y="723.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="794.8" y="734.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (285 samples, 0.55%)</title><rect x="791.8" y="707.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="794.8" y="718.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractByteHasher.&lt;init&gt; (189 samples, 0.36%)</title><rect x="794.0" y="691.0" width="4.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="797.0" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (145 samples, 0.28%)</title><rect x="794.8" y="675.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="797.8" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (145 samples, 0.28%)</title><rect x="794.8" y="659.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="797.8" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (126 samples, 0.24%)</title><rect x="795.2" y="643.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="798.2" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (80 samples, 0.15%)</title><rect x="796.1" y="627.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="799.1" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (38 samples, 0.07%)</title><rect x="797.0" y="611.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="800.0" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (20 samples, 0.04%)</title><rect x="797.3" y="595.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="800.3" y="606.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.clone (300 samples, 0.57%)</title><rect x="798.3" y="723.0" width="6.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="801.3" y="734.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.&lt;init&gt; (28 samples, 0.05%)</title><rect x="799.3" y="707.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="802.3" y="718.0"></text>
</g>
<g>
<title>java/security/MessageDigest.&lt;init&gt; (17 samples, 0.03%)</title><rect x="799.6" y="691.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="802.6" y="702.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2$SHA256.clone (210 samples, 0.40%)</title><rect x="800.3" y="707.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="803.3" y="718.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.clone (196 samples, 0.38%)</title><rect x="800.6" y="691.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="803.6" y="702.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (19 samples, 0.04%)</title><rect x="802.4" y="675.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="805.4" y="686.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.clone (92 samples, 0.18%)</title><rect x="803.0" y="675.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="806.0" y="686.0"></text>
</g>
<g>
<title>java/security/MessageDigestSpi.clone (37 samples, 0.07%)</title><rect x="803.8" y="659.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="806.8" y="670.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (23 samples, 0.04%)</title><rect x="805.1" y="723.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="808.1" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (14 samples, 0.03%)</title><rect x="805.6" y="739.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="808.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/SimpleServer.executeAsync (1,482 samples, 2.84%)</title><rect x="805.9" y="787.0" width="33.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="808.9" y="798.0">ru..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (12 samples, 0.02%)</title><rect x="806.0" y="771.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="809.0" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (12 samples, 0.02%)</title><rect x="806.0" y="755.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="809.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/SimpleServer$$Lambda$67/1693143379.get$Lambda (12 samples, 0.02%)</title><rect x="806.0" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="809.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1,465 samples, 2.81%)</title><rect x="806.3" y="771.0" width="33.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="809.3" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1,455 samples, 2.79%)</title><rect x="806.5" y="755.0" width="32.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="809.5" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (27 samples, 0.05%)</title><rect x="806.7" y="739.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="809.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1,236 samples, 2.37%)</title><rect x="807.3" y="739.0" width="27.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="810.3" y="750.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1,220 samples, 2.34%)</title><rect x="807.7" y="723.0" width="27.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="810.7" y="734.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1,220 samples, 2.34%)</title><rect x="807.7" y="707.0" width="27.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="810.7" y="718.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1,218 samples, 2.33%)</title><rect x="807.7" y="691.0" width="27.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="810.7" y="702.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1,218 samples, 2.33%)</title><rect x="807.7" y="675.0" width="27.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="810.7" y="686.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1,217 samples, 2.33%)</title><rect x="807.7" y="659.0" width="27.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="810.7" y="670.0">j..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (166 samples, 0.32%)</title><rect x="807.8" y="643.0" width="3.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="810.8" y="654.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (77 samples, 0.15%)</title><rect x="808.7" y="627.0" width="1.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="811.7" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (23 samples, 0.04%)</title><rect x="810.5" y="627.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="813.5" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_lock (12 samples, 0.02%)</title><rect x="811.1" y="627.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="814.1" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (17 samples, 0.03%)</title><rect x="811.7" y="643.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="814.7" y="654.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1,023 samples, 1.96%)</title><rect x="812.1" y="643.0" width="23.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="815.1" y="654.0">p..</text>
</g>
<g>
<title>[unknown] (861 samples, 1.65%)</title><rect x="815.7" y="627.0" width="19.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="818.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (861 samples, 1.65%)</title><rect x="815.7" y="611.0" width="19.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="818.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (807 samples, 1.55%)</title><rect x="817.0" y="595.0" width="18.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="820.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (794 samples, 1.52%)</title><rect x="817.3" y="579.0" width="17.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="820.3" y="590.0"></text>
</g>
<g>
<title>[unknown] (786 samples, 1.51%)</title><rect x="817.4" y="563.0" width="17.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="820.4" y="574.0"></text>
</g>
<g>
<title>[unknown] (731 samples, 1.40%)</title><rect x="818.7" y="547.0" width="16.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="821.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (684 samples, 1.31%)</title><rect x="819.7" y="531.0" width="15.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="822.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (658 samples, 1.26%)</title><rect x="820.3" y="515.0" width="14.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="823.3" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (42 samples, 0.08%)</title><rect x="835.2" y="739.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="838.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (42 samples, 0.08%)</title><rect x="835.2" y="723.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="838.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (136 samples, 0.26%)</title><rect x="836.2" y="739.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="839.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (120 samples, 0.23%)</title><rect x="836.5" y="723.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="839.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (49 samples, 0.09%)</title><rect x="836.9" y="707.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="839.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (28 samples, 0.05%)</title><rect x="837.0" y="691.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="840.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (53 samples, 0.10%)</title><rect x="838.1" y="707.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="841.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (53 samples, 0.10%)</title><rect x="838.1" y="691.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="841.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (38 samples, 0.07%)</title><rect x="838.1" y="675.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="841.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (12 samples, 0.02%)</title><rect x="839.0" y="675.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="842.0" y="686.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.i2bBig (12 samples, 0.02%)</title><rect x="839.4" y="787.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="842.4" y="798.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineUpdate (13 samples, 0.02%)</title><rect x="839.8" y="787.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="842.8" y="798.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompress (12 samples, 0.02%)</title><rect x="840.1" y="787.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="843.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (26 samples, 0.05%)</title><rect x="840.4" y="819.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="843.4" y="830.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (219 samples, 0.42%)</title><rect x="841.0" y="819.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="844.0" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (219 samples, 0.42%)</title><rect x="841.0" y="803.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="844.0" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (183 samples, 0.35%)</title><rect x="841.0" y="787.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="844.0" y="798.0"></text>
</g>
<g>
<title>RequestHandler1_daoMethods.handleRequest (51 samples, 0.10%)</title><rect x="841.4" y="771.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="844.4" y="782.0"></text>
</g>
<g>
<title>itable stub (81 samples, 0.16%)</title><rect x="842.6" y="771.0" width="1.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="845.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (31 samples, 0.06%)</title><rect x="844.4" y="771.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="847.4" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (36 samples, 0.07%)</title><rect x="845.1" y="787.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="848.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (36 samples, 0.07%)</title><rect x="845.1" y="771.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="848.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (16 samples, 0.03%)</title><rect x="845.6" y="755.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="848.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (36 samples, 0.07%)</title><rect x="846.0" y="819.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="849.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (31 samples, 0.06%)</title><rect x="846.1" y="803.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="849.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (29 samples, 0.06%)</title><rect x="846.1" y="787.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="849.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (23 samples, 0.04%)</title><rect x="846.2" y="771.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="849.2" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (15 samples, 0.03%)</title><rect x="846.4" y="755.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="849.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (377 samples, 0.72%)</title><rect x="846.8" y="851.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="849.8" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (22 samples, 0.04%)</title><rect x="848.5" y="835.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="851.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (22 samples, 0.04%)</title><rect x="848.5" y="819.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="851.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (22 samples, 0.04%)</title><rect x="848.5" y="803.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="851.5" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (17 samples, 0.03%)</title><rect x="848.6" y="787.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="851.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (139 samples, 0.27%)</title><rect x="849.0" y="835.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="852.0" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (138 samples, 0.26%)</title><rect x="849.0" y="819.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="852.0" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (140 samples, 0.27%)</title><rect x="852.2" y="835.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="855.2" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 0.03%)</title><rect x="854.9" y="819.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="857.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (50 samples, 0.10%)</title><rect x="855.3" y="851.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="858.3" y="862.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (23 samples, 0.04%)</title><rect x="855.6" y="835.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="858.6" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (23 samples, 0.04%)</title><rect x="855.6" y="819.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="858.6" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.digit (15 samples, 0.03%)</title><rect x="855.8" y="803.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="858.8" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.digit (15 samples, 0.03%)</title><rect x="855.8" y="787.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="858.8" y="798.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (15 samples, 0.03%)</title><rect x="855.8" y="771.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="858.8" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (24 samples, 0.05%)</title><rect x="856.5" y="851.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="859.5" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 0.03%)</title><rect x="856.6" y="835.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="859.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (188 samples, 0.36%)</title><rect x="857.0" y="851.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="860.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (125 samples, 0.24%)</title><rect x="857.9" y="835.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="860.9" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (113 samples, 0.22%)</title><rect x="858.2" y="819.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="861.2" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (14 samples, 0.03%)</title><rect x="859.8" y="803.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="862.8" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (14 samples, 0.03%)</title><rect x="859.8" y="787.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="862.8" y="798.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (14 samples, 0.03%)</title><rect x="859.8" y="771.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="862.8" y="782.0"></text>
</g>
<g>
<title>jbyte_arraycopy (15 samples, 0.03%)</title><rect x="860.1" y="803.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="863.1" y="814.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (15 samples, 0.03%)</title><rect x="860.4" y="803.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="863.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (22 samples, 0.04%)</title><rect x="860.8" y="835.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="863.8" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (18 samples, 0.03%)</title><rect x="860.9" y="819.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="863.9" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (175 samples, 0.34%)</title><rect x="861.3" y="851.0" width="3.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="864.3" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (166 samples, 0.32%)</title><rect x="861.5" y="835.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="864.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.02%)</title><rect x="864.5" y="819.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="867.5" y="830.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (20 samples, 0.04%)</title><rect x="864.8" y="819.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="867.8" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2,063 samples, 3.95%)</title><rect x="865.3" y="867.0" width="46.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="868.3" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2,047 samples, 3.92%)</title><rect x="865.4" y="851.0" width="46.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="868.4" y="862.0">one/..</text>
</g>
<g>
<title>[unknown] (298 samples, 0.57%)</title><rect x="866.7" y="835.0" width="6.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="869.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (298 samples, 0.57%)</title><rect x="866.7" y="819.0" width="6.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="869.7" y="830.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (23 samples, 0.04%)</title><rect x="866.7" y="803.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="869.7" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (237 samples, 0.45%)</title><rect x="867.3" y="803.0" width="5.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="870.3" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (207 samples, 0.40%)</title><rect x="867.5" y="787.0" width="4.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="870.5" y="798.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (135 samples, 0.26%)</title><rect x="869.1" y="771.0" width="3.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="872.1" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (24 samples, 0.05%)</title><rect x="871.6" y="755.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="874.6" y="766.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (19 samples, 0.04%)</title><rect x="872.2" y="787.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="875.2" y="798.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (27 samples, 0.05%)</title><rect x="872.9" y="803.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="875.9" y="814.0"></text>
</g>
<g>
<title>__GI___recv (1,682 samples, 3.22%)</title><rect x="873.5" y="835.0" width="38.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="876.5" y="846.0">__G..</text>
</g>
<g>
<title>[unknown] (1,245 samples, 2.38%)</title><rect x="883.3" y="819.0" width="28.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="886.3" y="830.0">[u..</text>
</g>
<g>
<title>[unknown] (1,245 samples, 2.38%)</title><rect x="883.3" y="803.0" width="28.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="886.3" y="814.0">[u..</text>
</g>
<g>
<title>[unknown] (1,067 samples, 2.04%)</title><rect x="887.4" y="787.0" width="24.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="890.4" y="798.0">[..</text>
</g>
<g>
<title>[unknown] (1,058 samples, 2.03%)</title><rect x="887.6" y="771.0" width="23.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="890.6" y="782.0">[..</text>
</g>
<g>
<title>[unknown] (1,005 samples, 1.92%)</title><rect x="888.8" y="755.0" width="22.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="891.8" y="766.0">[..</text>
</g>
<g>
<title>[unknown] (955 samples, 1.83%)</title><rect x="889.9" y="739.0" width="21.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="892.9" y="750.0">[..</text>
</g>
<g>
<title>[unknown] (887 samples, 1.70%)</title><rect x="891.4" y="723.0" width="20.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="894.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (709 samples, 1.36%)</title><rect x="895.5" y="707.0" width="16.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="898.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (540 samples, 1.03%)</title><rect x="899.3" y="691.0" width="12.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="902.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (381 samples, 0.73%)</title><rect x="902.9" y="675.0" width="8.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="905.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (257 samples, 0.49%)</title><rect x="905.7" y="659.0" width="5.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="908.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (157 samples, 0.30%)</title><rect x="907.9" y="643.0" width="3.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="910.9" y="654.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.02%)</title><rect x="911.2" y="627.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="914.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.02%)</title><rect x="911.2" y="611.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="914.2" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/persistence/LSMDao$FlusherThread.run (2,013 samples, 3.86%)</title><rect x="912.2" y="915.0" width="45.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="915.2" y="926.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/persistence/LSMDao.flush (2,013 samples, 3.86%)</title><rect x="912.2" y="899.0" width="45.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="915.2" y="910.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/persistence/Table.write (2,011 samples, 3.85%)</title><rect x="912.2" y="883.0" width="45.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="915.2" y="894.0">ru/m..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (21 samples, 0.04%)</title><rect x="912.5" y="867.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="915.5" y="878.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (12 samples, 0.02%)</title><rect x="912.6" y="851.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="915.6" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/persistence/MemTable$$Lambda$70/672633248.apply (12 samples, 0.02%)</title><rect x="912.6" y="835.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="915.6" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/persistence/MemTable.lambda$iterator$0 (12 samples, 0.02%)</title><rect x="912.6" y="819.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="915.6" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (17 samples, 0.03%)</title><rect x="913.1" y="867.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="916.1" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (17 samples, 0.03%)</title><rect x="913.1" y="851.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="916.1" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/persistence/Bytes.fromInt (15 samples, 0.03%)</title><rect x="913.5" y="867.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="916.5" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (1,927 samples, 3.69%)</title><rect x="914.1" y="867.0" width="43.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="917.1" y="878.0">sun/..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (31 samples, 0.06%)</title><rect x="914.4" y="851.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="917.4" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (31 samples, 0.06%)</title><rect x="914.4" y="835.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="917.4" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (14 samples, 0.03%)</title><rect x="915.1" y="851.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="918.1" y="862.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (14 samples, 0.03%)</title><rect x="915.1" y="835.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="918.1" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (1,849 samples, 3.54%)</title><rect x="915.5" y="851.0" width="41.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="918.5" y="862.0">sun..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (19 samples, 0.04%)</title><rect x="915.6" y="835.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="918.6" y="846.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (17 samples, 0.03%)</title><rect x="915.6" y="819.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="918.6" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (1,746 samples, 3.34%)</title><rect x="916.0" y="835.0" width="39.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="919.0" y="846.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (1,746 samples, 3.34%)</title><rect x="916.0" y="819.0" width="39.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="919.0" y="830.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (1,746 samples, 3.34%)</title><rect x="916.0" y="803.0" width="39.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="919.0" y="814.0">sun..</text>
</g>
<g>
<title>[unknown] (1,712 samples, 3.28%)</title><rect x="916.8" y="787.0" width="38.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="919.8" y="798.0">[un..</text>
</g>
<g>
<title>__libc_disable_asynccancel (15 samples, 0.03%)</title><rect x="916.8" y="771.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="919.8" y="782.0"></text>
</g>
<g>
<title>write (1,691 samples, 3.24%)</title><rect x="917.2" y="771.0" width="38.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="920.2" y="782.0">write</text>
</g>
<g>
<title>[unknown] (1,391 samples, 2.66%)</title><rect x="924.0" y="755.0" width="31.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="927.0" y="766.0">[u..</text>
</g>
<g>
<title>[unknown] (1,391 samples, 2.66%)</title><rect x="924.0" y="739.0" width="31.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="927.0" y="750.0">[u..</text>
</g>
<g>
<title>[unknown] (1,284 samples, 2.46%)</title><rect x="926.4" y="723.0" width="29.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="929.4" y="734.0">[u..</text>
</g>
<g>
<title>[unknown] (1,282 samples, 2.46%)</title><rect x="926.5" y="707.0" width="29.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="929.5" y="718.0">[u..</text>
</g>
<g>
<title>[unknown] (1,274 samples, 2.44%)</title><rect x="926.7" y="691.0" width="28.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="929.7" y="702.0">[u..</text>
</g>
<g>
<title>[unknown] (1,252 samples, 2.40%)</title><rect x="927.2" y="675.0" width="28.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="930.2" y="686.0">[u..</text>
</g>
<g>
<title>[unknown] (1,211 samples, 2.32%)</title><rect x="928.1" y="659.0" width="27.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="931.1" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (1,156 samples, 2.21%)</title><rect x="929.3" y="643.0" width="26.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="932.3" y="654.0">[..</text>
</g>
<g>
<title>[unknown] (1,132 samples, 2.17%)</title><rect x="929.9" y="627.0" width="25.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="932.9" y="638.0">[..</text>
</g>
<g>
<title>[unknown] (1,089 samples, 2.09%)</title><rect x="930.8" y="611.0" width="24.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="933.8" y="622.0">[..</text>
</g>
<g>
<title>[unknown] (1,025 samples, 1.96%)</title><rect x="932.3" y="595.0" width="23.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="935.3" y="606.0">[..</text>
</g>
<g>
<title>[unknown] (939 samples, 1.80%)</title><rect x="934.2" y="579.0" width="21.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="937.2" y="590.0">[..</text>
</g>
<g>
<title>[unknown] (855 samples, 1.64%)</title><rect x="936.1" y="563.0" width="19.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="939.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (742 samples, 1.42%)</title><rect x="938.7" y="547.0" width="16.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="941.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (616 samples, 1.18%)</title><rect x="941.5" y="531.0" width="14.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="944.5" y="542.0"></text>
</g>
<g>
<title>[unknown] (532 samples, 1.02%)</title><rect x="943.4" y="515.0" width="12.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="946.4" y="526.0"></text>
</g>
<g>
<title>[unknown] (493 samples, 0.94%)</title><rect x="944.3" y="499.0" width="11.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="947.3" y="510.0"></text>
</g>
<g>
<title>[unknown] (439 samples, 0.84%)</title><rect x="945.5" y="483.0" width="10.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="948.5" y="494.0"></text>
</g>
<g>
<title>[unknown] (325 samples, 0.62%)</title><rect x="948.1" y="467.0" width="7.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="951.1" y="478.0"></text>
</g>
<g>
<title>[unknown] (252 samples, 0.48%)</title><rect x="949.8" y="451.0" width="5.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="952.8" y="462.0"></text>
</g>
<g>
<title>[unknown] (132 samples, 0.25%)</title><rect x="952.5" y="435.0" width="3.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="955.5" y="446.0"></text>
</g>
<g>
<title>[unknown] (67 samples, 0.13%)</title><rect x="953.9" y="419.0" width="1.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="956.9" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (78 samples, 0.15%)</title><rect x="955.5" y="835.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="958.5" y="846.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (19 samples, 0.04%)</title><rect x="955.6" y="819.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="958.6" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (55 samples, 0.11%)</title><rect x="956.0" y="819.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="959.0" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (14 samples, 0.03%)</title><rect x="957.3" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="960.3" y="862.0"></text>
</g>
<g>
<title>start_thread (10,281 samples, 19.69%)</title><rect x="957.7" y="915.0" width="232.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="960.7" y="926.0">start_thread</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (10,281 samples, 19.69%)</title><rect x="957.7" y="899.0" width="232.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="960.7" y="910.0">/usr/lib/jvm/java-11-openjdk-am..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (10,281 samples, 19.69%)</title><rect x="957.7" y="883.0" width="232.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="960.7" y="894.0">/usr/lib/jvm/java-11-openjdk-am..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (10,281 samples, 19.69%)</title><rect x="957.7" y="867.0" width="232.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="960.7" y="878.0">/usr/lib/jvm/java-11-openjdk-am..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (10,277 samples, 19.68%)</title><rect x="957.7" y="851.0" width="232.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="960.7" y="862.0">/usr/lib/jvm/java-11-openjdk-am..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (10,248 samples, 19.63%)</title><rect x="957.9" y="835.0" width="231.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="960.9" y="846.0">/usr/lib/jvm/java-11-openjdk-am..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (10,062 samples, 19.27%)</title><rect x="962.0" y="819.0" width="227.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="965.0" y="830.0">/usr/lib/jvm/java-11-openjdk-a..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7,498 samples, 14.36%)</title><rect x="1019.5" y="803.0" width="169.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1022.5" y="814.0">/usr/lib/jvm/java-11-o..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (6,168 samples, 11.81%)</title><rect x="1048.6" y="787.0" width="139.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1051.6" y="798.0">/usr/lib/jvm/java..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5,141 samples, 9.85%)</title><rect x="1071.1" y="771.0" width="116.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1074.1" y="782.0">/usr/lib/jvm/j..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (3,607 samples, 6.91%)</title><rect x="1105.6" y="755.0" width="81.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1108.6" y="766.0">/usr/lib/..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1,834 samples, 3.51%)</title><rect x="1145.3" y="739.0" width="41.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1148.3" y="750.0">/us..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (737 samples, 1.41%)</title><rect x="1169.6" y="723.0" width="16.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1172.6" y="734.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (178 samples, 0.34%)</title><rect x="1182.0" y="707.0" width="4.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1185.0" y="718.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (42 samples, 0.08%)</title><rect x="1184.9" y="691.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1187.9" y="702.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (14 samples, 0.03%)</title><rect x="1185.5" y="675.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1188.5" y="686.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (14 samples, 0.03%)</title><rect x="1185.5" y="659.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1188.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.02%)</title><rect x="1186.3" y="723.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1189.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.02%)</title><rect x="1186.3" y="707.0" width="0.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1189.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.02%)</title><rect x="1186.3" y="691.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1189.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.02%)</title><rect x="1186.7" y="739.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1189.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.02%)</title><rect x="1186.7" y="723.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1189.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.02%)</title><rect x="1186.7" y="707.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1189.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.02%)</title><rect x="1186.7" y="691.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1189.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.02%)</title><rect x="1186.7" y="675.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1189.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.02%)</title><rect x="1186.7" y="659.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1189.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.02%)</title><rect x="1186.7" y="643.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1189.7" y="654.0"></text>
</g>
<g>
<title>__GI_getrusage (18 samples, 0.03%)</title><rect x="1187.4" y="771.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1190.4" y="782.0"></text>
</g>
<g>
<title>__GI_getrusage (26 samples, 0.05%)</title><rect x="1188.2" y="787.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1191.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.02%)</title><rect x="1188.5" y="771.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1191.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.02%)</title><rect x="1188.5" y="755.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1191.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.03%)</title><rect x="1188.9" y="803.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1191.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.03%)</title><rect x="1188.9" y="787.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1191.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.03%)</title><rect x="1188.9" y="771.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1191.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.03%)</title><rect x="1189.0" y="755.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1192.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.03%)</title><rect x="1189.0" y="739.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1192.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.03%)</title><rect x="1189.0" y="723.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1192.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.03%)</title><rect x="1189.0" y="707.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1192.0" y="718.0"></text>
</g>
<g>
<title>__GI___sched_yield (17 samples, 0.03%)</title><rect x="1189.5" y="835.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1192.5" y="846.0"></text>
</g>
</g>
</svg>
