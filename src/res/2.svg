<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (6,133 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.03%)</title><rect x="10.2" y="883.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.2" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (6 samples, 0.10%)</title><rect x="10.8" y="883.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="13.8" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.07%)</title><rect x="11.0" y="867.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="14.0" y="878.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.07%)</title><rect x="11.0" y="851.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.0" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.07%)</title><rect x="11.0" y="835.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="14.0" y="846.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.10%)</title><rect x="11.9" y="883.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.9" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (5 samples, 0.08%)</title><rect x="12.1" y="867.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="15.1" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.05%)</title><rect x="12.1" y="851.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="15.1" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (3 samples, 0.05%)</title><rect x="12.1" y="835.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="15.1" y="846.0"></text>
</g>
<g>
<title>[not_walkable] (3 samples, 0.05%)</title><rect x="13.1" y="883.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="16.1" y="894.0"></text>
</g>
<g>
<title>[not_walkable_Java] (3 samples, 0.05%)</title><rect x="13.7" y="883.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="16.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="14.2" y="883.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="17.2" y="894.0"></text>
</g>
<g>
<title>[unknown_Java] (24 samples, 0.39%)</title><rect x="14.6" y="883.0" width="4.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="17.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.08%)</title><rect x="17.3" y="867.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="20.3" y="878.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.07%)</title><rect x="17.5" y="851.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="20.5" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="18.3" y="867.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="21.3" y="878.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.05%)</title><rect x="18.7" y="867.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="21.7" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (3 samples, 0.05%)</title><rect x="19.2" y="883.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="22.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="19.2" y="867.0" width="0.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="22.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="19.2" y="851.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="22.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="19.2" y="835.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="22.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="19.2" y="819.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="22.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="19.4" y="803.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="22.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="19.4" y="787.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="22.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="19.4" y="771.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="22.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="19.4" y="755.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="22.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="19.4" y="739.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="22.4" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,563 samples, 58.10%)</title><rect x="20.0" y="883.0" width="685.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.0" y="894.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,563 samples, 58.10%)</title><rect x="20.0" y="867.0" width="685.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.0" y="878.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,563 samples, 58.10%)</title><rect x="20.0" y="851.0" width="685.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="23.0" y="862.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (24 samples, 0.39%)</title><rect x="20.4" y="835.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (24 samples, 0.39%)</title><rect x="20.4" y="819.0" width="4.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="23.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (24 samples, 0.39%)</title><rect x="20.4" y="803.0" width="4.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="23.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.03%)</title><rect x="21.5" y="787.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="24.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 0.26%)</title><rect x="21.9" y="787.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.9" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/senyast/ServiceImpl$$Lambda$65/1732858621.run (2 samples, 0.03%)</title><rect x="24.6" y="771.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="27.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (690 samples, 11.25%)</title><rect x="25.0" y="835.0" width="132.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="28.0" y="846.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (684 samples, 11.15%)</title><rect x="26.2" y="819.0" width="131.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="29.2" y="830.0">java/util/concur..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="28.9" y="803.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="31.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="28.9" y="787.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="31.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="28.9" y="771.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="31.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (484 samples, 7.89%)</title><rect x="29.2" y="803.0" width="93.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="32.2" y="814.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.05%)</title><rect x="30.8" y="787.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="33.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (3 samples, 0.05%)</title><rect x="30.8" y="771.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="33.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.05%)</title><rect x="30.8" y="755.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="33.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (51 samples, 0.83%)</title><rect x="31.4" y="787.0" width="9.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="34.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (51 samples, 0.83%)</title><rect x="31.4" y="771.0" width="9.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="34.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (43 samples, 0.70%)</title><rect x="32.5" y="755.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="35.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (43 samples, 0.70%)</title><rect x="32.5" y="739.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="35.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (42 samples, 0.68%)</title><rect x="32.7" y="723.0" width="8.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="35.7" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.15%)</title><rect x="32.7" y="707.0" width="1.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="35.7" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (4 samples, 0.07%)</title><rect x="32.9" y="691.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="35.9" y="702.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="33.9" y="691.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="36.9" y="702.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (33 samples, 0.54%)</title><rect x="34.4" y="707.0" width="6.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="37.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.41%)</title><rect x="36.0" y="691.0" width="4.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="39.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.41%)</title><rect x="36.0" y="675.0" width="4.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="39.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.36%)</title><rect x="36.6" y="659.0" width="4.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="39.6" y="670.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.36%)</title><rect x="36.6" y="643.0" width="4.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="39.6" y="654.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.36%)</title><rect x="36.6" y="627.0" width="4.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="39.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.34%)</title><rect x="36.7" y="611.0" width="4.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="39.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.33%)</title><rect x="36.9" y="595.0" width="3.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="39.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.33%)</title><rect x="36.9" y="579.0" width="3.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="39.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="40.4" y="563.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="43.4" y="574.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="40.4" y="547.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="43.4" y="558.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="40.4" y="531.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="43.4" y="542.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="40.4" y="515.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="43.4" y="526.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="40.4" y="499.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="43.4" y="510.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="40.4" y="483.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="43.4" y="494.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="40.4" y="467.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="43.4" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.03%)</title><rect x="40.8" y="755.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="43.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (19 samples, 0.31%)</title><rect x="41.2" y="787.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="44.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (19 samples, 0.31%)</title><rect x="41.2" y="771.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="44.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (399 samples, 6.51%)</title><rect x="44.8" y="787.0" width="76.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.8" y="798.0">java/uti..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (398 samples, 6.49%)</title><rect x="45.0" y="771.0" width="76.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="48.0" y="782.0">jdk/inte..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (5 samples, 0.08%)</title><rect x="47.5" y="755.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="50.5" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (199 samples, 3.24%)</title><rect x="48.7" y="755.0" width="38.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="51.7" y="766.0">Uns..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.03%)</title><rect x="50.6" y="739.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="53.6" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (55 samples, 0.90%)</title><rect x="51.2" y="739.0" width="10.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="54.2" y="750.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (16 samples, 0.26%)</title><rect x="56.0" y="723.0" width="3.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="59.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="58.3" y="707.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="61.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="58.3" y="691.0" width="0.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="61.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="58.3" y="675.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="61.3" y="686.0"></text>
</g>
<g>
<title>Monitor::unlock() (3 samples, 0.05%)</title><rect x="59.1" y="723.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="62.1" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (9 samples, 0.15%)</title><rect x="59.8" y="723.0" width="1.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="62.8" y="734.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.05%)</title><rect x="61.8" y="739.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="64.8" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (4 samples, 0.07%)</title><rect x="62.3" y="739.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="65.3" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (101 samples, 1.65%)</title><rect x="63.1" y="739.0" width="19.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="66.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.75%)</title><rect x="73.7" y="723.0" width="8.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="76.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.75%)</title><rect x="73.7" y="707.0" width="8.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="76.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.31%)</title><rect x="78.9" y="691.0" width="3.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="81.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.29%)</title><rect x="79.1" y="675.0" width="3.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="82.1" y="686.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.26%)</title><rect x="79.5" y="659.0" width="3.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="82.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="82.0" y="643.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="85.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="82.2" y="627.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="85.2" y="638.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.05%)</title><rect x="82.5" y="739.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="85.5" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="83.3" y="739.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="86.3" y="750.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="83.9" y="739.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="86.9" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.03%)</title><rect x="84.5" y="739.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="87.5" y="750.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (3 samples, 0.05%)</title><rect x="84.8" y="739.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="87.8" y="750.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (8 samples, 0.13%)</title><rect x="85.4" y="739.0" width="1.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="88.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (178 samples, 2.90%)</title><rect x="87.0" y="755.0" width="34.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="90.0" y="766.0">[u..</text>
</g>
<g>
<title>__pthread_cond_wait (169 samples, 2.76%)</title><rect x="87.3" y="739.0" width="32.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="90.3" y="750.0">__..</text>
</g>
<g>
<title>[unknown] (123 samples, 2.01%)</title><rect x="96.2" y="723.0" width="23.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="99.2" y="734.0">[..</text>
</g>
<g>
<title>[unknown] (123 samples, 2.01%)</title><rect x="96.2" y="707.0" width="23.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="99.2" y="718.0">[..</text>
</g>
<g>
<title>[unknown] (97 samples, 1.58%)</title><rect x="101.2" y="691.0" width="18.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="104.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (94 samples, 1.53%)</title><rect x="101.8" y="675.0" width="18.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="104.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (90 samples, 1.47%)</title><rect x="102.5" y="659.0" width="17.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="105.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 1.37%)</title><rect x="103.7" y="643.0" width="16.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="106.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (74 samples, 1.21%)</title><rect x="105.6" y="627.0" width="14.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="108.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 1.04%)</title><rect x="107.5" y="611.0" width="12.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="110.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 0.93%)</title><rect x="108.9" y="595.0" width="11.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="111.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="119.1" y="579.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="122.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="119.1" y="563.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="122.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="119.1" y="547.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="122.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="119.3" y="531.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="122.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="119.5" y="515.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="122.5" y="526.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="119.5" y="499.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="122.5" y="510.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="119.5" y="483.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="122.5" y="494.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="119.5" y="467.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="122.5" y="478.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="119.9" y="739.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="122.9" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.03%)</title><rect x="120.2" y="739.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="123.2" y="750.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.03%)</title><rect x="120.8" y="739.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="123.8" y="750.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.03%)</title><rect x="121.2" y="755.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="124.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.07%)</title><rect x="121.6" y="787.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="124.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (15 samples, 0.24%)</title><rect x="122.4" y="803.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="125.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (15 samples, 0.24%)</title><rect x="122.4" y="787.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="125.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (15 samples, 0.24%)</title><rect x="122.4" y="771.0" width="2.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="125.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (13 samples, 0.21%)</title><rect x="122.7" y="755.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="125.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (13 samples, 0.21%)</title><rect x="122.7" y="739.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="125.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (13 samples, 0.21%)</title><rect x="122.7" y="723.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="125.7" y="734.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.10%)</title><rect x="122.7" y="707.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="125.7" y="718.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.03%)</title><rect x="122.7" y="691.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="125.7" y="702.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.05%)</title><rect x="123.3" y="691.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="126.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.11%)</title><rect x="123.9" y="707.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="126.9" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_wait (6 samples, 0.10%)</title><rect x="123.9" y="691.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="126.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.08%)</title><rect x="124.1" y="675.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="127.1" y="686.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.08%)</title><rect x="124.1" y="659.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="127.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.08%)</title><rect x="124.1" y="643.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="127.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.08%)</title><rect x="124.1" y="627.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="127.1" y="638.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.08%)</title><rect x="124.1" y="611.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="127.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="124.3" y="595.0" width="0.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="127.3" y="606.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="124.3" y="579.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="127.3" y="590.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="124.3" y="563.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="127.3" y="574.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="124.3" y="547.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="127.3" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (169 samples, 2.76%)</title><rect x="125.2" y="803.0" width="32.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.2" y="814.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (169 samples, 2.76%)</title><rect x="125.2" y="787.0" width="32.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="128.2" y="798.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (169 samples, 2.76%)</title><rect x="125.2" y="771.0" width="32.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="128.2" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (169 samples, 2.76%)</title><rect x="125.2" y="755.0" width="32.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="128.2" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.05%)</title><rect x="130.6" y="739.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="133.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (138 samples, 2.25%)</title><rect x="131.2" y="739.0" width="26.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="134.2" y="750.0">j..</text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.05%)</title><rect x="131.4" y="723.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="134.4" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (25 samples, 0.41%)</title><rect x="132.0" y="723.0" width="4.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="135.0" y="734.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (5 samples, 0.08%)</title><rect x="132.9" y="707.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="135.9" y="718.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (5 samples, 0.08%)</title><rect x="133.9" y="707.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="136.9" y="718.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (5 samples, 0.08%)</title><rect x="134.9" y="707.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="137.9" y="718.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.03%)</title><rect x="135.8" y="707.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="138.8" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="136.4" y="707.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="139.4" y="718.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (108 samples, 1.76%)</title><rect x="137.0" y="723.0" width="20.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="140.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (92 samples, 1.50%)</title><rect x="140.1" y="707.0" width="17.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="143.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (92 samples, 1.50%)</title><rect x="140.1" y="691.0" width="17.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="143.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (83 samples, 1.35%)</title><rect x="141.8" y="675.0" width="16.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="144.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (80 samples, 1.30%)</title><rect x="142.4" y="659.0" width="15.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="145.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (80 samples, 1.30%)</title><rect x="142.4" y="643.0" width="15.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="145.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (74 samples, 1.21%)</title><rect x="143.5" y="627.0" width="14.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="146.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 1.11%)</title><rect x="144.7" y="611.0" width="13.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="147.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (65 samples, 1.06%)</title><rect x="145.3" y="595.0" width="12.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="148.3" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/senyast/ServiceImpl$$Lambda$65/1732858621.run (2,847 samples, 46.42%)</title><rect x="157.8" y="835.0" width="547.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="160.8" y="846.0">ru/mail/polis/service/senyast/ServiceImpl$$Lambda$65/1732858621.run</text>
</g>
<g>
<title>ru/mail/polis/service/senyast/ServiceImpl.lambda$executeAsync$4 (2,847 samples, 46.42%)</title><rect x="157.8" y="819.0" width="547.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="160.8" y="830.0">ru/mail/polis/service/senyast/ServiceImpl.lambda$executeAsync$4</text>
</g>
<g>
<title>ru/mail/polis/service/senyast/ServiceImpl$$Lambda$64/1735781207.act (620 samples, 10.11%)</title><rect x="157.8" y="803.0" width="119.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="160.8" y="814.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/senyast/ServiceImpl.lambda$daoMethods$1 (619 samples, 10.09%)</title><rect x="158.0" y="787.0" width="119.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="161.0" y="798.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/senyast/ServiceImpl.putMethod (619 samples, 10.09%)</title><rect x="158.0" y="771.0" width="119.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="161.0" y="782.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (34 samples, 0.55%)</title><rect x="158.0" y="755.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="161.0" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (34 samples, 0.55%)</title><rect x="158.0" y="739.0" width="6.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="161.0" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (34 samples, 0.55%)</title><rect x="158.0" y="723.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="161.0" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (34 samples, 0.55%)</title><rect x="158.0" y="707.0" width="6.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="161.0" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (28 samples, 0.46%)</title><rect x="159.1" y="691.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="162.1" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (17 samples, 0.28%)</title><rect x="161.2" y="675.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="164.2" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (9 samples, 0.15%)</title><rect x="162.8" y="659.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="165.8" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (7 samples, 0.11%)</title><rect x="163.2" y="643.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="166.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (2 samples, 0.03%)</title><rect x="164.1" y="627.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="167.1" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/senyast/LSMDao.upsert (585 samples, 9.54%)</title><rect x="164.5" y="755.0" width="112.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="167.5" y="766.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/senyast/tables/MemTablePool.upsert (585 samples, 9.54%)</title><rect x="164.5" y="739.0" width="112.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="167.5" y="750.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/senyast/tables/MemTable.upsert (552 samples, 9.00%)</title><rect x="164.9" y="723.0" width="106.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="167.9" y="734.0">ru/mail/polis..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (546 samples, 8.90%)</title><rect x="164.9" y="707.0" width="105.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="167.9" y="718.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (537 samples, 8.76%)</title><rect x="165.3" y="691.0" width="103.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="168.3" y="702.0">java/util/co..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (40 samples, 0.65%)</title><rect x="175.3" y="675.0" width="7.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="178.3" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (40 samples, 0.65%)</title><rect x="175.3" y="659.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="178.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="182.2" y="643.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="185.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="182.2" y="627.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="185.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="182.2" y="611.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="185.2" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.05%)</title><rect x="183.0" y="675.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="186.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Index.&lt;init&gt; (216 samples, 3.52%)</title><rect x="183.5" y="675.0" width="41.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="186.5" y="686.0">jav..</text>
</g>
<g>
<title>[unknown] (18 samples, 0.29%)</title><rect x="221.4" y="659.0" width="3.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="224.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.29%)</title><rect x="221.4" y="643.0" width="3.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="224.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.29%)</title><rect x="221.4" y="627.0" width="3.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="224.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.15%)</title><rect x="223.2" y="611.0" width="1.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="226.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.15%)</title><rect x="223.2" y="595.0" width="1.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="226.2" y="606.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.13%)</title><rect x="223.4" y="579.0" width="1.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="226.4" y="590.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="224.1" y="563.0" width="0.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="227.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="224.1" y="547.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="227.1" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (43 samples, 0.70%)</title><rect x="225.1" y="675.0" width="8.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="228.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (6 samples, 0.10%)</title><rect x="226.8" y="659.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="229.8" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (28 samples, 0.46%)</title><rect x="228.0" y="659.0" width="5.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="231.0" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (28 samples, 0.46%)</title><rect x="228.0" y="643.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="231.0" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (16 samples, 0.26%)</title><rect x="230.3" y="627.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="233.3" y="638.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (16 samples, 0.26%)</title><rect x="230.3" y="611.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="233.3" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.05%)</title><rect x="231.3" y="595.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="234.3" y="606.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (3 samples, 0.05%)</title><rect x="231.3" y="579.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="234.3" y="590.0"></text>
</g>
<g>
<title>vectorizedMismatch (8 samples, 0.13%)</title><rect x="231.8" y="595.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="234.8" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (172 samples, 2.80%)</title><rect x="233.4" y="675.0" width="33.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="236.4" y="686.0">ja..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (161 samples, 2.63%)</title><rect x="235.5" y="659.0" width="31.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="238.5" y="670.0">ja..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="236.8" y="643.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="239.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="236.8" y="627.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="239.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="236.8" y="611.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="239.8" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (152 samples, 2.48%)</title><rect x="237.2" y="643.0" width="29.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="240.2" y="654.0">ja..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (152 samples, 2.48%)</title><rect x="237.2" y="627.0" width="29.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="240.2" y="638.0">ja..</text>
</g>
<g>
<title>[unknown] (7 samples, 0.11%)</title><rect x="252.8" y="611.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="255.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.11%)</title><rect x="252.8" y="595.0" width="1.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="255.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.11%)</title><rect x="252.8" y="579.0" width="1.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="255.8" y="590.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.08%)</title><rect x="253.2" y="563.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="256.2" y="574.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.08%)</title><rect x="253.2" y="547.0" width="1.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="256.2" y="558.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.08%)</title><rect x="253.2" y="531.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="256.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="253.8" y="515.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="256.8" y="526.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="253.8" y="499.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="256.8" y="510.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (32 samples, 0.52%)</title><rect x="254.2" y="611.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="257.2" y="622.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (32 samples, 0.52%)</title><rect x="254.2" y="595.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="257.2" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="259.9" y="579.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="262.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="259.9" y="563.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="262.9" y="574.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="259.9" y="547.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="262.9" y="558.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="259.9" y="531.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="262.9" y="542.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="259.9" y="515.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="262.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="259.9" y="499.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="262.9" y="510.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="259.9" y="483.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="262.9" y="494.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="259.9" y="467.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="262.9" y="478.0"></text>
</g>
<g>
<title>vectorizedMismatch (32 samples, 0.52%)</title><rect x="260.3" y="611.0" width="6.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="263.3" y="622.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="266.1" y="595.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="269.1" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="266.1" y="579.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="269.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="266.1" y="563.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="269.1" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (11 samples, 0.18%)</title><rect x="266.5" y="675.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="269.5" y="686.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (7 samples, 0.11%)</title><rect x="268.6" y="691.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="271.6" y="702.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.10%)</title><rect x="268.8" y="675.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="271.8" y="686.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.05%)</title><rect x="269.4" y="659.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="272.4" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/senyast/model/Value.getData (6 samples, 0.10%)</title><rect x="269.9" y="707.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="272.9" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (6 samples, 0.10%)</title><rect x="269.9" y="691.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="272.9" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (6 samples, 0.10%)</title><rect x="269.9" y="675.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="272.9" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.10%)</title><rect x="269.9" y="659.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="272.9" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.10%)</title><rect x="269.9" y="643.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="272.9" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="270.5" y="627.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="273.5" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="270.7" y="611.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="273.7" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="270.7" y="595.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="273.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/senyast/tables/MemTablePool.syncAddToFlush (31 samples, 0.51%)</title><rect x="271.1" y="723.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="274.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/senyast/tables/MemTable.&lt;init&gt; (4 samples, 0.07%)</title><rect x="271.5" y="707.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="274.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/senyast/tables/TableToFlush.&lt;init&gt; (25 samples, 0.41%)</title><rect x="272.2" y="707.0" width="4.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="275.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/senyast/tables/TableToFlush.&lt;init&gt; (25 samples, 0.41%)</title><rect x="272.2" y="691.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="275.2" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.07%)</title><rect x="274.4" y="675.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="277.4" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (10 samples, 0.16%)</title><rect x="275.1" y="675.0" width="2.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="278.1" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/senyast/ServiceImpl.sendResponse (2,227 samples, 36.31%)</title><rect x="277.1" y="803.0" width="428.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="280.1" y="814.0">ru/mail/polis/service/senyast/ServiceImpl.sendResponse</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2,222 samples, 36.23%)</title><rect x="277.4" y="787.0" width="427.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="280.4" y="798.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (16 samples, 0.26%)</title><rect x="283.6" y="771.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="286.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (16 samples, 0.26%)</title><rect x="283.6" y="755.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="286.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (16 samples, 0.26%)</title><rect x="283.6" y="739.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="286.6" y="750.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.07%)</title><rect x="284.9" y="723.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="287.9" y="734.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (5 samples, 0.08%)</title><rect x="285.7" y="723.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="288.7" y="734.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.08%)</title><rect x="285.7" y="707.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="288.7" y="718.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.05%)</title><rect x="286.1" y="691.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="289.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (2,158 samples, 35.19%)</title><rect x="286.7" y="771.0" width="415.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="289.7" y="782.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (84 samples, 1.37%)</title><rect x="286.9" y="755.0" width="16.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.9" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (48 samples, 0.78%)</title><rect x="293.8" y="739.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="296.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (48 samples, 0.78%)</title><rect x="293.8" y="723.0" width="9.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="296.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (48 samples, 0.78%)</title><rect x="293.8" y="707.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="296.8" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (12 samples, 0.20%)</title><rect x="300.7" y="691.0" width="2.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="303.7" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2,073 samples, 33.80%)</title><rect x="303.0" y="755.0" width="398.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="306.0" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (2,073 samples, 33.80%)</title><rect x="303.0" y="739.0" width="398.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="306.0" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.05%)</title><rect x="305.1" y="723.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="308.1" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (2,059 samples, 33.57%)</title><rect x="305.7" y="723.0" width="396.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="308.7" y="734.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (2,057 samples, 33.54%)</title><rect x="306.1" y="707.0" width="395.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="309.1" y="718.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.10%)</title><rect x="307.5" y="691.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="310.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.88%)</title><rect x="308.6" y="691.0" width="10.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="311.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.88%)</title><rect x="308.6" y="675.0" width="10.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="311.6" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (45 samples, 0.73%)</title><rect x="308.6" y="659.0" width="8.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="311.6" y="670.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="310.3" y="643.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="313.3" y="654.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.07%)</title><rect x="310.7" y="643.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="313.7" y="654.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.05%)</title><rect x="311.7" y="643.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="314.7" y="654.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (25 samples, 0.41%)</title><rect x="312.3" y="643.0" width="4.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="315.3" y="654.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (5 samples, 0.08%)</title><rect x="313.0" y="627.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="316.0" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (9 samples, 0.15%)</title><rect x="314.4" y="627.0" width="1.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="317.4" y="638.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.08%)</title><rect x="316.1" y="627.0" width="1.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="319.1" y="638.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.05%)</title><rect x="316.5" y="611.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="319.5" y="622.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.05%)</title><rect x="317.3" y="659.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="320.3" y="670.0"></text>
</g>
<g>
<title>__send (4 samples, 0.07%)</title><rect x="317.8" y="659.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="320.8" y="670.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (5 samples, 0.08%)</title><rect x="319.0" y="691.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="322.0" y="702.0"></text>
</g>
<g>
<title>__send (1,985 samples, 32.37%)</title><rect x="320.0" y="691.0" width="381.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="323.0" y="702.0">__send</text>
</g>
<g>
<title>[unknown] (1,906 samples, 31.08%)</title><rect x="335.2" y="675.0" width="366.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="338.2" y="686.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,906 samples, 31.08%)</title><rect x="335.2" y="659.0" width="366.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="338.2" y="670.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,850 samples, 30.16%)</title><rect x="345.9" y="643.0" width="356.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="348.9" y="654.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,847 samples, 30.12%)</title><rect x="346.5" y="627.0" width="355.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="349.5" y="638.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,829 samples, 29.82%)</title><rect x="350.0" y="611.0" width="351.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="353.0" y="622.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,810 samples, 29.51%)</title><rect x="353.6" y="595.0" width="348.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="356.6" y="606.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,794 samples, 29.25%)</title><rect x="356.7" y="579.0" width="345.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="359.7" y="590.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,787 samples, 29.14%)</title><rect x="358.1" y="563.0" width="343.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="361.1" y="574.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,713 samples, 27.93%)</title><rect x="372.3" y="547.0" width="329.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="375.3" y="558.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,663 samples, 27.12%)</title><rect x="381.9" y="531.0" width="320.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="384.9" y="542.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,589 samples, 25.91%)</title><rect x="396.2" y="515.0" width="305.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="399.2" y="526.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,530 samples, 24.95%)</title><rect x="407.5" y="499.0" width="294.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="410.5" y="510.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,417 samples, 23.10%)</title><rect x="429.2" y="483.0" width="272.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="432.2" y="494.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,362 samples, 22.21%)</title><rect x="439.8" y="467.0" width="262.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="442.8" y="478.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,320 samples, 21.52%)</title><rect x="447.9" y="451.0" width="254.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="450.9" y="462.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,306 samples, 21.29%)</title><rect x="450.6" y="435.0" width="251.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="453.6" y="446.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,227 samples, 20.01%)</title><rect x="465.8" y="419.0" width="236.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="468.8" y="430.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,157 samples, 18.87%)</title><rect x="479.3" y="403.0" width="222.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="482.3" y="414.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,068 samples, 17.41%)</title><rect x="496.4" y="387.0" width="205.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="499.4" y="398.0">[unknown]</text>
</g>
<g>
<title>[unknown] (897 samples, 14.63%)</title><rect x="529.3" y="371.0" width="172.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="532.3" y="382.0">[unknown]</text>
</g>
<g>
<title>[unknown] (817 samples, 13.32%)</title><rect x="544.7" y="355.0" width="157.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="547.7" y="366.0">[unknown]</text>
</g>
<g>
<title>[unknown] (759 samples, 12.38%)</title><rect x="555.8" y="339.0" width="146.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="558.8" y="350.0">[unknown]</text>
</g>
<g>
<title>[unknown] (725 samples, 11.82%)</title><rect x="562.4" y="323.0" width="139.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="565.4" y="334.0">[unknown]</text>
</g>
<g>
<title>[unknown] (698 samples, 11.38%)</title><rect x="567.6" y="307.0" width="134.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="570.6" y="318.0">[unknown]</text>
</g>
<g>
<title>[unknown] (682 samples, 11.12%)</title><rect x="570.7" y="291.0" width="131.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="573.7" y="302.0">[unknown]</text>
</g>
<g>
<title>[unknown] (646 samples, 10.53%)</title><rect x="577.6" y="275.0" width="124.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="580.6" y="286.0">[unknown]</text>
</g>
<g>
<title>[unknown] (631 samples, 10.29%)</title><rect x="580.5" y="259.0" width="121.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="583.5" y="270.0">[unknown]</text>
</g>
<g>
<title>[unknown] (582 samples, 9.49%)</title><rect x="589.9" y="243.0" width="112.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="592.9" y="254.0">[unknown]</text>
</g>
<g>
<title>[unknown] (571 samples, 9.31%)</title><rect x="592.0" y="227.0" width="109.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="595.0" y="238.0">[unknown]</text>
</g>
<g>
<title>[unknown] (528 samples, 8.61%)</title><rect x="600.3" y="211.0" width="101.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="603.3" y="222.0">[unknown]</text>
</g>
<g>
<title>[unknown] (484 samples, 7.89%)</title><rect x="608.8" y="195.0" width="93.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="611.8" y="206.0">[unknown]</text>
</g>
<g>
<title>[unknown] (394 samples, 6.42%)</title><rect x="626.1" y="179.0" width="75.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="629.1" y="190.0">[unknown]</text>
</g>
<g>
<title>[unknown] (348 samples, 5.67%)</title><rect x="634.9" y="163.0" width="67.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="637.9" y="174.0">[unknown]</text>
</g>
<g>
<title>[unknown] (263 samples, 4.29%)</title><rect x="651.3" y="147.0" width="50.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="654.3" y="158.0">[unkn..</text>
</g>
<g>
<title>[unknown] (185 samples, 3.02%)</title><rect x="666.3" y="131.0" width="35.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="669.3" y="142.0">[un..</text>
</g>
<g>
<title>[unknown] (164 samples, 2.67%)</title><rect x="670.3" y="115.0" width="31.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="673.3" y="126.0">[u..</text>
</g>
<g>
<title>[unknown] (156 samples, 2.54%)</title><rect x="671.9" y="99.0" width="30.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="674.9" y="110.0">[u..</text>
</g>
<g>
<title>[unknown] (41 samples, 0.67%)</title><rect x="694.0" y="83.0" width="7.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="697.0" y="94.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.62%)</title><rect x="694.6" y="67.0" width="7.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="697.6" y="78.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.31%)</title><rect x="698.2" y="51.0" width="3.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="701.2" y="62.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.21%)</title><rect x="699.4" y="35.0" width="2.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="702.4" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (16 samples, 0.26%)</title><rect x="701.9" y="771.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="704.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.11%)</title><rect x="703.6" y="755.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="706.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.11%)</title><rect x="703.6" y="739.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="706.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/senyast/ServiceImpl.putMethod (3 samples, 0.05%)</title><rect x="705.0" y="787.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="708.0" y="798.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,873 samples, 30.54%)</title><rect x="705.5" y="883.0" width="360.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="708.5" y="894.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (7 samples, 0.11%)</title><rect x="708.2" y="867.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.2" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (20 samples, 0.33%)</title><rect x="709.6" y="867.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="712.6" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (20 samples, 0.33%)</title><rect x="709.6" y="851.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="712.6" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (5 samples, 0.08%)</title><rect x="712.5" y="835.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="715.5" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (673 samples, 10.97%)</title><rect x="713.6" y="867.0" width="129.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="716.6" y="878.0">one/nio/net/Nati..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (30 samples, 0.49%)</title><rect x="715.9" y="851.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="718.9" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (20 samples, 0.33%)</title><rect x="717.8" y="835.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="720.8" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (631 samples, 10.29%)</title><rect x="721.7" y="851.0" width="121.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="724.7" y="862.0">one/nio/net/Nat..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (4 samples, 0.07%)</title><rect x="728.8" y="835.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="731.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (557 samples, 9.08%)</title><rect x="729.6" y="835.0" width="107.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="732.6" y="846.0">[unknown]</text>
</g>
<g>
<title>__libc_disable_asynccancel (14 samples, 0.23%)</title><rect x="729.6" y="819.0" width="2.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="732.6" y="830.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (3 samples, 0.05%)</title><rect x="732.3" y="819.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="735.3" y="830.0"></text>
</g>
<g>
<title>epoll_wait (540 samples, 8.80%)</title><rect x="732.9" y="819.0" width="103.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="735.9" y="830.0">epoll_wait</text>
</g>
<g>
<title>[unknown] (444 samples, 7.24%)</title><rect x="751.3" y="803.0" width="85.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="754.3" y="814.0">[unknown]</text>
</g>
<g>
<title>[unknown] (444 samples, 7.24%)</title><rect x="751.3" y="787.0" width="85.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="754.3" y="798.0">[unknown]</text>
</g>
<g>
<title>[unknown] (408 samples, 6.65%)</title><rect x="758.3" y="771.0" width="78.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="761.3" y="782.0">[unknown]</text>
</g>
<g>
<title>[unknown] (400 samples, 6.52%)</title><rect x="759.8" y="755.0" width="77.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="762.8" y="766.0">[unknown]</text>
</g>
<g>
<title>[unknown] (387 samples, 6.31%)</title><rect x="762.3" y="739.0" width="74.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="765.3" y="750.0">[unknown]</text>
</g>
<g>
<title>[unknown] (341 samples, 5.56%)</title><rect x="771.1" y="723.0" width="65.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="774.1" y="734.0">[unknown]</text>
</g>
<g>
<title>[unknown] (267 samples, 4.35%)</title><rect x="785.4" y="707.0" width="51.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="788.4" y="718.0">[unkn..</text>
</g>
<g>
<title>[unknown] (233 samples, 3.80%)</title><rect x="791.9" y="691.0" width="44.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="794.9" y="702.0">[unk..</text>
</g>
<g>
<title>[unknown] (175 samples, 2.85%)</title><rect x="803.1" y="675.0" width="33.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="806.1" y="686.0">[u..</text>
</g>
<g>
<title>[unknown] (23 samples, 0.38%)</title><rect x="832.3" y="659.0" width="4.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="835.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.34%)</title><rect x="832.7" y="643.0" width="4.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="835.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.33%)</title><rect x="832.9" y="627.0" width="3.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="835.9" y="638.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.31%)</title><rect x="833.1" y="611.0" width="3.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="836.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.29%)</title><rect x="833.3" y="595.0" width="3.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="836.3" y="606.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.26%)</title><rect x="833.7" y="579.0" width="3.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="836.7" y="590.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.24%)</title><rect x="833.9" y="563.0" width="2.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="836.9" y="574.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.23%)</title><rect x="834.1" y="547.0" width="2.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="837.1" y="558.0"></text>
</g>
<g>
<title>clock_gettime (9 samples, 0.15%)</title><rect x="836.9" y="835.0" width="1.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="839.9" y="846.0"></text>
</g>
<g>
<title>epoll_wait (8 samples, 0.13%)</title><rect x="838.7" y="835.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="841.7" y="846.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.10%)</title><rect x="840.2" y="835.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="843.2" y="846.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.10%)</title><rect x="840.2" y="819.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="843.2" y="830.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (6 samples, 0.10%)</title><rect x="840.2" y="803.0" width="1.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="843.2" y="814.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.08%)</title><rect x="840.4" y="787.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="843.4" y="798.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (9 samples, 0.15%)</title><rect x="841.4" y="835.0" width="1.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="844.4" y="846.0"></text>
</g>
<g>
<title>gettimeofday (9 samples, 0.15%)</title><rect x="841.4" y="819.0" width="1.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="844.4" y="830.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.05%)</title><rect x="841.4" y="803.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="844.4" y="814.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.10%)</title><rect x="841.9" y="803.0" width="1.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="844.9" y="814.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (4 samples, 0.07%)</title><rect x="842.3" y="787.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="845.3" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (1,158 samples, 18.88%)</title><rect x="843.1" y="867.0" width="222.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="846.1" y="878.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (1,138 samples, 18.56%)</title><rect x="845.4" y="851.0" width="219.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="848.4" y="862.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleSocketClosed (3 samples, 0.05%)</title><rect x="847.7" y="835.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="850.7" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.scheduleClose (2 samples, 0.03%)</title><rect x="847.9" y="819.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="850.9" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.close (2 samples, 0.03%)</title><rect x="847.9" y="803.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="850.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (550 samples, 8.97%)</title><rect x="848.3" y="835.0" width="105.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="851.3" y="846.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (328 samples, 5.35%)</title><rect x="849.6" y="819.0" width="63.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="852.6" y="830.0">one/nio..</text>
</g>
<g>
<title>java/util/LinkedList.addLast (22 samples, 0.36%)</title><rect x="851.4" y="803.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="854.4" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.08%)</title><rect x="853.1" y="787.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="856.1" y="798.0"></text>
</g>
<g>
<title>jbyte_arraycopy (6 samples, 0.10%)</title><rect x="854.1" y="787.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="857.1" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="855.2" y="787.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="858.2" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (297 samples, 4.84%)</title><rect x="855.6" y="803.0" width="57.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="858.6" y="814.0">one/ni..</text>
</g>
<g>
<title>RequestHandler1_daoMethods.handleRequest (272 samples, 4.44%)</title><rect x="855.8" y="787.0" width="52.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="858.8" y="798.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (31 samples, 0.51%)</title><rect x="856.4" y="771.0" width="5.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="859.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.07%)</title><rect x="858.3" y="755.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="861.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.07%)</title><rect x="858.3" y="739.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="861.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.05%)</title><rect x="859.1" y="755.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="862.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.05%)</title><rect x="859.1" y="739.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="862.1" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.05%)</title><rect x="859.1" y="723.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="862.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (12 samples, 0.20%)</title><rect x="860.0" y="755.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="863.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (11 samples, 0.18%)</title><rect x="860.2" y="739.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="863.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (11 samples, 0.18%)</title><rect x="860.2" y="723.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="863.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (11 samples, 0.18%)</title><rect x="860.2" y="707.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="863.2" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/senyast/ServiceImpl.daoMethods (238 samples, 3.88%)</title><rect x="862.3" y="771.0" width="45.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="865.3" y="782.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/senyast/ServiceImpl.executeAsync (232 samples, 3.78%)</title><rect x="863.5" y="755.0" width="44.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="866.5" y="766.0">ru/m..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (232 samples, 3.78%)</title><rect x="863.5" y="739.0" width="44.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="866.5" y="750.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (232 samples, 3.78%)</title><rect x="863.5" y="723.0" width="44.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="866.5" y="734.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (231 samples, 3.77%)</title><rect x="863.5" y="707.0" width="44.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="866.5" y="718.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.07%)</title><rect x="863.5" y="691.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="866.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.07%)</title><rect x="863.5" y="675.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="866.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.07%)</title><rect x="863.5" y="659.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="866.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (5 samples, 0.08%)</title><rect x="864.3" y="691.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="867.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (5 samples, 0.08%)</title><rect x="864.3" y="675.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="867.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.05%)</title><rect x="864.6" y="659.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="867.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.03%)</title><rect x="864.6" y="643.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="867.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.03%)</title><rect x="864.6" y="627.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="867.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.03%)</title><rect x="864.6" y="611.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="867.6" y="622.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.03%)</title><rect x="864.6" y="595.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="867.6" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (222 samples, 3.62%)</title><rect x="865.2" y="691.0" width="42.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="868.2" y="702.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (222 samples, 3.62%)</title><rect x="865.2" y="675.0" width="42.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="868.2" y="686.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (222 samples, 3.62%)</title><rect x="865.2" y="659.0" width="42.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="868.2" y="670.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (222 samples, 3.62%)</title><rect x="865.2" y="643.0" width="42.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="868.2" y="654.0">java..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="875.8" y="627.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="878.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="875.8" y="611.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="878.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="875.8" y="595.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="878.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="876.0" y="579.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="879.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="876.0" y="563.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="879.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="876.0" y="547.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="879.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="876.0" y="531.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="879.0" y="542.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="876.0" y="515.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="879.0" y="526.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (162 samples, 2.64%)</title><rect x="876.4" y="627.0" width="31.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="879.4" y="638.0">jd..</text>
</g>
<g>
<title>Unsafe_Unpark (21 samples, 0.34%)</title><rect x="877.2" y="611.0" width="4.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="880.2" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.05%)</title><rect x="878.3" y="595.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="881.3" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.05%)</title><rect x="878.9" y="595.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="881.9" y="606.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.03%)</title><rect x="879.5" y="595.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="882.5" y="606.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (5 samples, 0.08%)</title><rect x="879.8" y="595.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="882.8" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="881.2" y="611.0" width="0.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="884.2" y="622.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (134 samples, 2.18%)</title><rect x="881.8" y="611.0" width="25.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="884.8" y="622.0">p..</text>
</g>
<g>
<title>[unknown] (109 samples, 1.78%)</title><rect x="886.6" y="595.0" width="21.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="889.6" y="606.0"></text>
</g>
<g>
<title>[unknown] (109 samples, 1.78%)</title><rect x="886.6" y="579.0" width="21.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="889.6" y="590.0"></text>
</g>
<g>
<title>[unknown] (94 samples, 1.53%)</title><rect x="889.5" y="563.0" width="18.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="892.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (93 samples, 1.52%)</title><rect x="889.7" y="547.0" width="17.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="892.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (93 samples, 1.52%)</title><rect x="889.7" y="531.0" width="17.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="892.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 1.32%)</title><rect x="892.0" y="515.0" width="15.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="895.0" y="526.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 1.26%)</title><rect x="892.7" y="499.0" width="14.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="895.7" y="510.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 1.24%)</title><rect x="892.9" y="483.0" width="14.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="895.9" y="494.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="907.6" y="627.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="910.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (19 samples, 0.31%)</title><rect x="908.1" y="787.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="911.1" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (19 samples, 0.31%)</title><rect x="908.1" y="771.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="911.1" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (8 samples, 0.13%)</title><rect x="908.1" y="755.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="911.1" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (11 samples, 0.18%)</title><rect x="909.7" y="755.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="912.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (11 samples, 0.18%)</title><rect x="909.7" y="739.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="912.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (11 samples, 0.18%)</title><rect x="909.7" y="723.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="912.7" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (5 samples, 0.08%)</title><rect x="911.8" y="787.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="914.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.08%)</title><rect x="911.8" y="771.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="914.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.08%)</title><rect x="911.8" y="755.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="914.8" y="766.0"></text>
</g>
<g>
<title>RequestHandler1_daoMethods.handleRequest (5 samples, 0.08%)</title><rect x="911.8" y="739.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="914.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (69 samples, 1.13%)</title><rect x="912.7" y="819.0" width="13.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="915.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (15 samples, 0.24%)</title><rect x="913.3" y="803.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="916.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (15 samples, 0.24%)</title><rect x="913.3" y="787.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="916.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (15 samples, 0.24%)</title><rect x="913.3" y="771.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="916.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (15 samples, 0.24%)</title><rect x="913.3" y="755.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="916.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.11%)</title><rect x="914.9" y="739.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="917.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 0.42%)</title><rect x="916.2" y="803.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="919.2" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (26 samples, 0.42%)</title><rect x="916.2" y="787.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="919.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (25 samples, 0.41%)</title><rect x="921.2" y="803.0" width="4.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="924.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (20 samples, 0.33%)</title><rect x="926.0" y="819.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="929.0" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (20 samples, 0.33%)</title><rect x="926.0" y="803.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="929.0" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.07%)</title><rect x="928.1" y="787.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="931.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.07%)</title><rect x="928.1" y="771.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="931.1" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (5 samples, 0.08%)</title><rect x="928.9" y="787.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="931.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (32 samples, 0.52%)</title><rect x="929.9" y="819.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="932.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (13 samples, 0.21%)</title><rect x="932.6" y="803.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="935.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (13 samples, 0.21%)</title><rect x="932.6" y="787.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="935.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.07%)</title><rect x="935.1" y="803.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="938.1" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.07%)</title><rect x="935.1" y="787.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="938.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (4 samples, 0.07%)</title><rect x="935.1" y="771.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="938.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (94 samples, 1.53%)</title><rect x="936.0" y="819.0" width="18.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="939.0" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (28 samples, 0.46%)</title><rect x="948.7" y="803.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="951.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="953.7" y="787.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="956.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="953.7" y="771.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="956.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="953.7" y="755.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="956.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="953.7" y="739.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="956.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="953.7" y="723.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="956.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="953.7" y="707.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="956.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="953.7" y="691.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="956.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="953.7" y="675.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="956.7" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (573 samples, 9.34%)</title><rect x="954.1" y="835.0" width="110.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="957.1" y="846.0">one/nio/net/S..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (573 samples, 9.34%)</title><rect x="954.1" y="819.0" width="110.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="957.1" y="830.0">one/nio/net/N..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.05%)</title><rect x="958.5" y="803.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="961.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 1.08%)</title><rect x="959.1" y="803.0" width="12.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="962.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 1.08%)</title><rect x="959.1" y="787.0" width="12.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="962.1" y="798.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (46 samples, 0.75%)</title><rect x="959.1" y="771.0" width="8.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="962.1" y="782.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.05%)</title><rect x="959.1" y="755.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="962.1" y="766.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="959.7" y="755.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="962.7" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (35 samples, 0.57%)</title><rect x="960.7" y="755.0" width="6.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="963.7" y="766.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.05%)</title><rect x="962.0" y="739.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="965.0" y="750.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (5 samples, 0.08%)</title><rect x="962.6" y="739.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="965.6" y="750.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (5 samples, 0.08%)</title><rect x="963.5" y="739.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="966.5" y="750.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (15 samples, 0.24%)</title><rect x="964.5" y="739.0" width="2.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="967.5" y="750.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (7 samples, 0.11%)</title><rect x="966.0" y="723.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="969.0" y="734.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.03%)</title><rect x="967.6" y="755.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="970.6" y="766.0"></text>
</g>
<g>
<title>__GI___recv (6 samples, 0.10%)</title><rect x="968.0" y="771.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="971.0" y="782.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (6 samples, 0.10%)</title><rect x="969.1" y="771.0" width="1.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="972.1" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.13%)</title><rect x="970.3" y="771.0" width="1.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="973.3" y="782.0"></text>
</g>
<g>
<title>__GI___recv (474 samples, 7.73%)</title><rect x="971.8" y="803.0" width="91.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="974.8" y="814.0">__GI___recv</text>
</g>
<g>
<title>[unknown] (387 samples, 6.31%)</title><rect x="988.6" y="787.0" width="74.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="991.6" y="798.0">[unknown]</text>
</g>
<g>
<title>[unknown] (387 samples, 6.31%)</title><rect x="988.6" y="771.0" width="74.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="991.6" y="782.0">[unknown]</text>
</g>
<g>
<title>[unknown] (298 samples, 4.86%)</title><rect x="1005.7" y="755.0" width="57.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1008.7" y="766.0">[unkno..</text>
</g>
<g>
<title>[unknown] (296 samples, 4.83%)</title><rect x="1006.1" y="739.0" width="56.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1009.1" y="750.0">[unkno..</text>
</g>
<g>
<title>[unknown] (285 samples, 4.65%)</title><rect x="1008.2" y="723.0" width="54.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1011.2" y="734.0">[unkn..</text>
</g>
<g>
<title>[unknown] (261 samples, 4.26%)</title><rect x="1012.8" y="707.0" width="50.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1015.8" y="718.0">[unkn..</text>
</g>
<g>
<title>[unknown] (234 samples, 3.82%)</title><rect x="1018.0" y="691.0" width="45.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1021.0" y="702.0">[unk..</text>
</g>
<g>
<title>[unknown] (193 samples, 3.15%)</title><rect x="1025.9" y="675.0" width="37.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1028.9" y="686.0">[un..</text>
</g>
<g>
<title>[unknown] (141 samples, 2.30%)</title><rect x="1035.9" y="659.0" width="27.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1038.9" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (79 samples, 1.29%)</title><rect x="1047.8" y="643.0" width="15.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1050.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.29%)</title><rect x="1059.6" y="627.0" width="3.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1062.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="1061.9" y="611.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1064.9" y="622.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="1061.9" y="595.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1064.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="1061.9" y="579.0" width="1.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1064.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="1062.2" y="563.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1065.2" y="574.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="1062.2" y="547.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1065.2" y="558.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="1062.4" y="531.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1065.4" y="542.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (6 samples, 0.10%)</title><rect x="1063.0" y="803.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1066.0" y="814.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (8 samples, 0.13%)</title><rect x="1064.4" y="851.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1067.4" y="862.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.05%)</title><rect x="1065.3" y="835.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1068.3" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/senyast/LSMDao$FlusherThread.run (471 samples, 7.68%)</title><rect x="1065.9" y="883.0" width="90.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1068.9" y="894.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/senyast/LSMDao.flush (471 samples, 7.68%)</title><rect x="1065.9" y="867.0" width="90.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1068.9" y="878.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/dao/senyast/tables/FileTable.writeToFile (471 samples, 7.68%)</title><rect x="1065.9" y="851.0" width="90.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1068.9" y="862.0">ru/mail/po..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (2 samples, 0.03%)</title><rect x="1065.9" y="835.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1068.9" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.write (469 samples, 7.65%)</title><rect x="1066.3" y="835.0" width="90.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1069.3" y="846.0">sun/nio/ch..</text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.beginBlocking (5 samples, 0.08%)</title><rect x="1066.7" y="819.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1069.7" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.begin (5 samples, 0.08%)</title><rect x="1066.7" y="803.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1069.7" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/FileChannelImpl.endBlocking (4 samples, 0.07%)</title><rect x="1067.6" y="819.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1070.6" y="830.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.end (4 samples, 0.07%)</title><rect x="1067.6" y="803.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1070.6" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (452 samples, 7.37%)</title><rect x="1068.4" y="819.0" width="87.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1071.4" y="830.0">sun/nio/ch..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (5 samples, 0.08%)</title><rect x="1069.7" y="803.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1072.7" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="1069.7" y="787.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1072.7" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="1069.7" y="771.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1072.7" y="782.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (3 samples, 0.05%)</title><rect x="1070.1" y="787.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1073.1" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.put (3 samples, 0.05%)</title><rect x="1070.1" y="771.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1073.1" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.writeFromNativeBuffer (436 samples, 7.11%)</title><rect x="1070.7" y="803.0" width="83.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1073.7" y="814.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write (436 samples, 7.11%)</title><rect x="1070.7" y="787.0" width="83.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1073.7" y="798.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.write0 (436 samples, 7.11%)</title><rect x="1070.7" y="771.0" width="83.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1073.7" y="782.0">sun/nio/c..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_write0 (2 samples, 0.03%)</title><rect x="1072.1" y="755.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1075.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (425 samples, 6.93%)</title><rect x="1072.4" y="755.0" width="81.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1075.4" y="766.0">[unknown]</text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.03%)</title><rect x="1072.6" y="739.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1075.6" y="750.0"></text>
</g>
<g>
<title>write (422 samples, 6.88%)</title><rect x="1073.0" y="739.0" width="81.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1076.0" y="750.0">write</text>
</g>
<g>
<title>[unknown] (358 samples, 5.84%)</title><rect x="1085.3" y="723.0" width="68.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1088.3" y="734.0">[unknown]</text>
</g>
<g>
<title>[unknown] (358 samples, 5.84%)</title><rect x="1085.3" y="707.0" width="68.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1088.3" y="718.0">[unknown]</text>
</g>
<g>
<title>[unknown] (315 samples, 5.14%)</title><rect x="1093.6" y="691.0" width="60.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1096.6" y="702.0">[unkno..</text>
</g>
<g>
<title>[unknown] (312 samples, 5.09%)</title><rect x="1094.2" y="675.0" width="60.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1097.2" y="686.0">[unkno..</text>
</g>
<g>
<title>[unknown] (305 samples, 4.97%)</title><rect x="1095.5" y="659.0" width="58.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1098.5" y="670.0">[unkno..</text>
</g>
<g>
<title>[unknown] (288 samples, 4.70%)</title><rect x="1098.8" y="643.0" width="55.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1101.8" y="654.0">[unkn..</text>
</g>
<g>
<title>[unknown] (274 samples, 4.47%)</title><rect x="1101.5" y="627.0" width="52.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1104.5" y="638.0">[unkn..</text>
</g>
<g>
<title>[unknown] (268 samples, 4.37%)</title><rect x="1102.6" y="611.0" width="51.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1105.6" y="622.0">[unkn..</text>
</g>
<g>
<title>[unknown] (259 samples, 4.22%)</title><rect x="1104.4" y="595.0" width="49.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1107.4" y="606.0">[unkn..</text>
</g>
<g>
<title>[unknown] (247 samples, 4.03%)</title><rect x="1106.7" y="579.0" width="47.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1109.7" y="590.0">[unk..</text>
</g>
<g>
<title>[unknown] (226 samples, 3.68%)</title><rect x="1110.7" y="563.0" width="43.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1113.7" y="574.0">[unk..</text>
</g>
<g>
<title>[unknown] (202 samples, 3.29%)</title><rect x="1115.3" y="547.0" width="38.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1118.3" y="558.0">[un..</text>
</g>
<g>
<title>[unknown] (181 samples, 2.95%)</title><rect x="1119.4" y="531.0" width="34.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1122.4" y="542.0">[u..</text>
</g>
<g>
<title>[unknown] (139 samples, 2.27%)</title><rect x="1127.5" y="515.0" width="26.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1130.5" y="526.0">[..</text>
</g>
<g>
<title>[unknown] (120 samples, 1.96%)</title><rect x="1131.1" y="499.0" width="23.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1134.1" y="510.0">[..</text>
</g>
<g>
<title>[unknown] (106 samples, 1.73%)</title><rect x="1133.8" y="483.0" width="20.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1136.8" y="494.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 1.32%)</title><rect x="1138.6" y="467.0" width="15.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1141.6" y="478.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.99%)</title><rect x="1142.5" y="451.0" width="11.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1145.5" y="462.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.72%)</title><rect x="1145.7" y="435.0" width="8.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1148.7" y="446.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.29%)</title><rect x="1150.8" y="419.0" width="3.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1153.8" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (4 samples, 0.07%)</title><rect x="1154.6" y="803.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1157.6" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.07%)</title><rect x="1154.6" y="787.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1157.6" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (4 samples, 0.07%)</title><rect x="1154.6" y="771.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1157.6" y="782.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThreadSet.add (6 samples, 0.10%)</title><rect x="1155.4" y="819.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1158.4" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/NativeThread.current (6 samples, 0.10%)</title><rect x="1155.4" y="803.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1158.4" y="814.0"></text>
</g>
<g>
<title>start_thread (174 samples, 2.84%)</title><rect x="1156.5" y="883.0" width="33.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1159.5" y="894.0">st..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (174 samples, 2.84%)</title><rect x="1156.5" y="867.0" width="33.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1159.5" y="878.0">th..</text>
</g>
<g>
<title>Thread::call_run() (174 samples, 2.84%)</title><rect x="1156.5" y="851.0" width="33.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1159.5" y="862.0">Th..</text>
</g>
<g>
<title>ConcurrentGCThread::run() (9 samples, 0.15%)</title><rect x="1156.5" y="835.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1159.5" y="846.0"></text>
</g>
<g>
<title>G1ConcurrentRefineThread::run_service() (7 samples, 0.11%)</title><rect x="1156.5" y="819.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1159.5" y="830.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long) (6 samples, 0.10%)</title><rect x="1156.5" y="803.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1159.5" y="814.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_concurrently(signed char*, unsigned int) (6 samples, 0.10%)</title><rect x="1156.5" y="787.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1159.5" y="798.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;false, G1ConcurrentRefineOopClosure&gt;(MemRegion, G1ConcurrentRefineOopClosure*) (5 samples, 0.08%)</title><rect x="1156.5" y="771.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1159.5" y="782.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (4 samples, 0.07%)</title><rect x="1156.7" y="755.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1159.7" y="766.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (4 samples, 0.07%)</title><rect x="1156.7" y="739.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1159.7" y="750.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (2 samples, 0.03%)</title><rect x="1157.9" y="819.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1160.9" y="830.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (2 samples, 0.03%)</title><rect x="1157.9" y="803.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1160.9" y="814.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (2 samples, 0.03%)</title><rect x="1157.9" y="787.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1160.9" y="798.0"></text>
</g>
<g>
<title>GangWorker::loop() (154 samples, 2.51%)</title><rect x="1158.3" y="835.0" width="29.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1161.3" y="846.0">Ga..</text>
</g>
<g>
<title>G1CMConcurrentMarkingTask::work(unsigned int) (5 samples, 0.08%)</title><rect x="1158.3" y="819.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1161.3" y="830.0"></text>
</g>
<g>
<title>G1CMTask::do_marking_step(double, bool, bool) (5 samples, 0.08%)</title><rect x="1158.3" y="803.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1161.3" y="814.0"></text>
</g>
<g>
<title>G1CMBitMapClosure::do_addr(HeapWord*) (3 samples, 0.05%)</title><rect x="1158.4" y="787.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1161.4" y="798.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (147 samples, 2.40%)</title><rect x="1159.4" y="819.0" width="28.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1162.4" y="830.0">G1..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (106 samples, 1.73%)</title><rect x="1159.4" y="803.0" width="20.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1162.4" y="814.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (100 samples, 1.63%)</title><rect x="1159.8" y="787.0" width="19.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1162.8" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (68 samples, 1.11%)</title><rect x="1165.8" y="771.0" width="13.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1168.8" y="782.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (18 samples, 0.29%)</title><rect x="1175.4" y="755.0" width="3.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.4" y="766.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.07%)</title><rect x="1179.0" y="787.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1182.0" y="798.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (38 samples, 0.62%)</title><rect x="1179.8" y="803.0" width="7.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.8" y="814.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (38 samples, 0.62%)</title><rect x="1179.8" y="787.0" width="7.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1182.8" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (38 samples, 0.62%)</title><rect x="1179.8" y="771.0" width="7.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1182.8" y="782.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (38 samples, 0.62%)</title><rect x="1179.8" y="755.0" width="7.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.8" y="766.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (37 samples, 0.60%)</title><rect x="1179.8" y="739.0" width="7.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1182.8" y="750.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (23 samples, 0.38%)</title><rect x="1179.8" y="723.0" width="4.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.8" y="734.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (14 samples, 0.23%)</title><rect x="1181.5" y="707.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1184.5" y="718.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="1183.8" y="691.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.8" y="702.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (14 samples, 0.23%)</title><rect x="1184.2" y="723.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.2" y="734.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (13 samples, 0.21%)</title><rect x="1184.2" y="707.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.2" y="718.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (8 samples, 0.13%)</title><rect x="1184.4" y="691.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.4" y="702.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (6 samples, 0.10%)</title><rect x="1184.8" y="675.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.8" y="686.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (3 samples, 0.05%)</title><rect x="1186.2" y="691.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.2" y="702.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.03%)</title><rect x="1187.1" y="803.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.1" y="814.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (2 samples, 0.03%)</title><rect x="1187.1" y="787.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.1" y="798.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (2 samples, 0.03%)</title><rect x="1187.1" y="771.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.1" y="782.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (2 samples, 0.03%)</title><rect x="1187.1" y="755.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.1" y="766.0"></text>
</g>
<g>
<title>JavaThread::run() (6 samples, 0.10%)</title><rect x="1187.9" y="835.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.9" y="846.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (6 samples, 0.10%)</title><rect x="1187.9" y="819.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.9" y="830.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (6 samples, 0.10%)</title><rect x="1187.9" y="803.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.9" y="814.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (6 samples, 0.10%)</title><rect x="1187.9" y="787.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.9" y="798.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2 samples, 0.03%)</title><rect x="1187.9" y="771.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.9" y="782.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (2 samples, 0.03%)</title><rect x="1187.9" y="755.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.9" y="766.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (2 samples, 0.03%)</title><rect x="1187.9" y="739.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.9" y="750.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (4 samples, 0.07%)</title><rect x="1188.3" y="771.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.3" y="782.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (4 samples, 0.07%)</title><rect x="1188.3" y="755.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.3" y="766.0"></text>
</g>
<g>
<title>Compilation::compile_method() (4 samples, 0.07%)</title><rect x="1188.3" y="739.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.3" y="750.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (3 samples, 0.05%)</title><rect x="1188.3" y="723.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.3" y="734.0"></text>
</g>
<g>
<title>VMThread::run() (2 samples, 0.03%)</title><rect x="1189.0" y="835.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.0" y="846.0"></text>
</g>
<g>
<title>VMThread::loop() (2 samples, 0.03%)</title><rect x="1189.0" y="819.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.0" y="830.0"></text>
</g>
<g>
<title>WatcherThread::run() (3 samples, 0.05%)</title><rect x="1189.4" y="835.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.4" y="846.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (2 samples, 0.03%)</title><rect x="1189.4" y="819.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.4" y="830.0"></text>
</g>
</g>
</svg>
