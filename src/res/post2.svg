<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (15,920 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (360 samples, 2.26%)</title><rect x="10.0" y="899.0" width="26.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="13.0" y="910.0">/..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (332 samples, 2.09%)</title><rect x="12.1" y="883.0" width="24.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="15.1" y="894.0">/..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (322 samples, 2.02%)</title><rect x="12.8" y="867.0" width="23.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="15.8" y="878.0">/..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (304 samples, 1.91%)</title><rect x="13.7" y="851.0" width="22.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="16.7" y="862.0">/..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (155 samples, 0.97%)</title><rect x="22.4" y="835.0" width="11.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="25.4" y="846.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (47 samples, 0.30%)</title><rect x="29.9" y="819.0" width="3.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="32.9" y="830.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (22 samples, 0.14%)</title><rect x="31.6" y="803.0" width="1.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="34.6" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (15 samples, 0.09%)</title><rect x="32.1" y="787.0" width="1.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="35.1" y="798.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (12 samples, 0.08%)</title><rect x="32.3" y="771.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="35.3" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (11 samples, 0.07%)</title><rect x="32.4" y="755.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="35.4" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5 samples, 0.03%)</title><rect x="32.8" y="739.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="35.8" y="750.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (5 samples, 0.03%)</title><rect x="33.3" y="819.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="36.3" y="830.0"></text>
</g>
<g>
<title>__lll_unlock_wake (11 samples, 0.07%)</title><rect x="34.1" y="835.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="37.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.05%)</title><rect x="34.3" y="819.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="37.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.05%)</title><rect x="34.3" y="803.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="37.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.03%)</title><rect x="34.6" y="787.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="37.6" y="798.0"></text>
</g>
<g>
<title>__memset_avx2_erms (14 samples, 0.09%)</title><rect x="34.9" y="835.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="37.9" y="846.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.03%)</title><rect x="36.3" y="851.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="39.3" y="862.0"></text>
</g>
<g>
<title>[not_walkable] (46 samples, 0.29%)</title><rect x="36.8" y="899.0" width="3.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="39.8" y="910.0"></text>
</g>
<g>
<title>[not_walkable_Java] (28 samples, 0.18%)</title><rect x="40.2" y="899.0" width="2.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="43.2" y="910.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (28 samples, 0.18%)</title><rect x="40.2" y="883.0" width="2.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="43.2" y="894.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (20 samples, 0.13%)</title><rect x="40.8" y="867.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="43.8" y="878.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (18 samples, 0.11%)</title><rect x="40.9" y="851.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="43.9" y="862.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (17 samples, 0.11%)</title><rect x="40.9" y="835.0" width="1.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="43.9" y="846.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (9 samples, 0.06%)</title><rect x="41.5" y="819.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="44.5" y="830.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5 samples, 0.03%)</title><rect x="41.8" y="803.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="44.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.04%)</title><rect x="42.2" y="899.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="45.2" y="910.0"></text>
</g>
<g>
<title>[unknown_Java] (1,271 samples, 7.98%)</title><rect x="42.7" y="899.0" width="94.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="45.7" y="910.0">[unknown_Ja..</text>
</g>
<g>
<title>[unknown] (22 samples, 0.14%)</title><rect x="132.9" y="883.0" width="1.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="135.9" y="894.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.04%)</title><rect x="132.9" y="867.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="135.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.09%)</title><rect x="133.4" y="867.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="136.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.09%)</title><rect x="133.4" y="851.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="136.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.07%)</title><rect x="133.7" y="835.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="136.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.07%)</title><rect x="133.7" y="819.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="136.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.06%)</title><rect x="133.8" y="803.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="136.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.06%)</title><rect x="133.8" y="787.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="136.8" y="798.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (32 samples, 0.20%)</title><rect x="134.5" y="883.0" width="2.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="137.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.18%)</title><rect x="134.7" y="867.0" width="2.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="137.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.18%)</title><rect x="134.7" y="851.0" width="2.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="137.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.17%)</title><rect x="134.9" y="835.0" width="2.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="137.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.16%)</title><rect x="135.0" y="819.0" width="1.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="138.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.16%)</title><rect x="135.0" y="803.0" width="1.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="138.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.14%)</title><rect x="135.2" y="787.0" width="1.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="138.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.14%)</title><rect x="135.2" y="771.0" width="1.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="138.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.14%)</title><rect x="135.2" y="755.0" width="1.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="138.2" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (21 samples, 0.13%)</title><rect x="137.1" y="899.0" width="1.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="140.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.06%)</title><rect x="138.0" y="883.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="141.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.06%)</title><rect x="138.0" y="867.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="141.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.06%)</title><rect x="138.0" y="851.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="141.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.05%)</title><rect x="138.1" y="835.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="141.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.04%)</title><rect x="138.2" y="819.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="141.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.03%)</title><rect x="138.4" y="803.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="141.4" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.run (7,488 samples, 47.04%)</title><rect x="139.3" y="899.0" width="555.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.3" y="910.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (7,488 samples, 47.04%)</title><rect x="139.3" y="883.0" width="555.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="142.3" y="894.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (7,486 samples, 47.02%)</title><rect x="139.3" y="867.0" width="554.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="142.3" y="878.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (7 samples, 0.04%)</title><rect x="139.9" y="851.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="142.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.04%)</title><rect x="139.9" y="835.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="142.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (7 samples, 0.04%)</title><rect x="139.9" y="819.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="142.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (7 samples, 0.04%)</title><rect x="139.9" y="803.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="142.9" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (7 samples, 0.04%)</title><rect x="139.9" y="787.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="142.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (7 samples, 0.04%)</title><rect x="139.9" y="771.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="142.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (18 samples, 0.11%)</title><rect x="140.5" y="851.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (18 samples, 0.11%)</title><rect x="140.5" y="835.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="143.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (11 samples, 0.07%)</title><rect x="140.9" y="819.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="143.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (11 samples, 0.07%)</title><rect x="140.9" y="803.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="143.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1,280 samples, 8.04%)</title><rect x="141.8" y="851.0" width="94.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="144.8" y="862.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (1,262 samples, 7.93%)</title><rect x="142.7" y="835.0" width="93.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="145.7" y="846.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (915 samples, 5.75%)</title><rect x="143.6" y="819.0" width="67.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.6" y="830.0">java/ut..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (6 samples, 0.04%)</title><rect x="144.9" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="147.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (7 samples, 0.04%)</title><rect x="145.3" y="803.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="148.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (4 samples, 0.03%)</title><rect x="145.6" y="787.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="148.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (4 samples, 0.03%)</title><rect x="145.9" y="803.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="148.9" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (4 samples, 0.03%)</title><rect x="145.9" y="787.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="148.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (37 samples, 0.23%)</title><rect x="146.2" y="803.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="149.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.03%)</title><rect x="146.5" y="787.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.03%)</title><rect x="146.5" y="771.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (5 samples, 0.03%)</title><rect x="146.8" y="787.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="149.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (24 samples, 0.15%)</title><rect x="147.1" y="787.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="150.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (24 samples, 0.15%)</title><rect x="147.1" y="771.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="150.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.getExclusiveOwnerThread (5 samples, 0.03%)</title><rect x="147.8" y="755.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="150.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (10 samples, 0.06%)</title><rect x="148.2" y="755.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.2" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (10 samples, 0.06%)</title><rect x="148.2" y="739.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="151.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (10 samples, 0.06%)</title><rect x="148.2" y="723.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="151.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (89 samples, 0.56%)</title><rect x="148.9" y="803.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="151.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (89 samples, 0.56%)</title><rect x="148.9" y="787.0" width="6.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="151.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (86 samples, 0.54%)</title><rect x="148.9" y="771.0" width="6.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="151.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (83 samples, 0.52%)</title><rect x="149.1" y="755.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (83 samples, 0.52%)</title><rect x="149.1" y="739.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="152.1" y="750.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (11 samples, 0.07%)</title><rect x="149.2" y="723.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="152.2" y="734.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.03%)</title><rect x="149.4" y="707.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="152.4" y="718.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (71 samples, 0.45%)</title><rect x="150.0" y="723.0" width="5.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="153.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.39%)</title><rect x="150.7" y="707.0" width="4.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="153.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 0.39%)</title><rect x="150.7" y="691.0" width="4.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="153.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.38%)</title><rect x="150.8" y="675.0" width="4.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="153.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.38%)</title><rect x="150.8" y="659.0" width="4.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="153.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 0.38%)</title><rect x="150.8" y="643.0" width="4.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="153.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 0.36%)</title><rect x="151.0" y="627.0" width="4.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="154.0" y="638.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 0.35%)</title><rect x="151.1" y="611.0" width="4.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="154.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 0.35%)</title><rect x="151.1" y="595.0" width="4.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="154.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (754 samples, 4.74%)</title><rect x="155.5" y="803.0" width="55.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="158.5" y="814.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (754 samples, 4.74%)</title><rect x="155.5" y="787.0" width="55.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="158.5" y="798.0">jdk/i..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (364 samples, 2.29%)</title><rect x="155.8" y="771.0" width="27.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="158.8" y="782.0">/..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (92 samples, 0.58%)</title><rect x="158.2" y="755.0" width="6.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="161.2" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (18 samples, 0.11%)</title><rect x="163.4" y="739.0" width="1.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="166.4" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (202 samples, 1.27%)</title><rect x="165.0" y="755.0" width="15.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="168.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (123 samples, 0.77%)</title><rect x="170.8" y="739.0" width="9.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="173.8" y="750.0"></text>
</g>
<g>
<title>[unknown] (123 samples, 0.77%)</title><rect x="170.8" y="723.0" width="9.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="173.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.31%)</title><rect x="176.3" y="707.0" width="3.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="179.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.28%)</title><rect x="176.7" y="691.0" width="3.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="179.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.25%)</title><rect x="177.0" y="675.0" width="3.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="180.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.14%)</title><rect x="178.3" y="659.0" width="1.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="181.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.06%)</title><rect x="179.3" y="643.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="182.3" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_wait (9 samples, 0.06%)</title><rect x="180.0" y="755.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="183.0" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (5 samples, 0.03%)</title><rect x="180.6" y="755.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="183.6" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.04%)</title><rect x="181.0" y="755.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="184.0" y="766.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (18 samples, 0.11%)</title><rect x="181.4" y="755.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="184.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (386 samples, 2.42%)</title><rect x="182.8" y="771.0" width="28.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="185.8" y="782.0">[u..</text>
</g>
<g>
<title>__pthread_cleanup_pop (13 samples, 0.08%)</title><rect x="182.8" y="755.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="185.8" y="766.0"></text>
</g>
<g>
<title>__pthread_cond_wait (318 samples, 2.00%)</title><rect x="183.7" y="755.0" width="23.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="186.7" y="766.0">_..</text>
</g>
<g>
<title>[unknown] (145 samples, 0.91%)</title><rect x="196.6" y="739.0" width="10.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="199.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (145 samples, 0.91%)</title><rect x="196.6" y="723.0" width="10.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="199.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (110 samples, 0.69%)</title><rect x="199.2" y="707.0" width="8.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="202.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (107 samples, 0.67%)</title><rect x="199.4" y="691.0" width="7.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="202.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (101 samples, 0.63%)</title><rect x="199.8" y="675.0" width="7.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="202.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (97 samples, 0.61%)</title><rect x="200.1" y="659.0" width="7.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="203.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 0.38%)</title><rect x="202.9" y="643.0" width="4.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="205.9" y="654.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.14%)</title><rect x="205.7" y="627.0" width="1.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="208.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.09%)</title><rect x="206.2" y="611.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="209.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.06%)</title><rect x="206.6" y="595.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="209.6" y="606.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.06%)</title><rect x="206.6" y="579.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="209.6" y="590.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.06%)</title><rect x="206.6" y="563.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="209.6" y="574.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.06%)</title><rect x="206.6" y="547.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="209.6" y="558.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.06%)</title><rect x="206.6" y="531.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="209.6" y="542.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.04%)</title><rect x="206.8" y="515.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="209.8" y="526.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.04%)</title><rect x="206.8" y="499.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="209.8" y="510.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (30 samples, 0.19%)</title><rect x="207.3" y="755.0" width="2.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="210.3" y="766.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (4 samples, 0.03%)</title><rect x="209.5" y="755.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="212.5" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (12 samples, 0.08%)</title><rect x="209.8" y="755.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="212.8" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (5 samples, 0.03%)</title><rect x="210.7" y="755.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="213.7" y="766.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (4 samples, 0.03%)</title><rect x="211.1" y="755.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="214.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (101 samples, 0.63%)</title><rect x="211.4" y="819.0" width="7.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="214.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (100 samples, 0.63%)</title><rect x="211.5" y="803.0" width="7.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="214.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (84 samples, 0.53%)</title><rect x="211.8" y="787.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="214.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (37 samples, 0.23%)</title><rect x="212.9" y="771.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="215.9" y="782.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (9 samples, 0.06%)</title><rect x="212.9" y="755.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="215.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (28 samples, 0.18%)</title><rect x="213.5" y="755.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="216.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (13 samples, 0.08%)</title><rect x="213.5" y="739.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="216.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (15 samples, 0.09%)</title><rect x="214.5" y="739.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="217.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.08%)</title><rect x="214.7" y="723.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="217.7" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_wait (10 samples, 0.06%)</title><rect x="214.7" y="707.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="217.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="215.1" y="691.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="218.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="215.1" y="675.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="218.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (8 samples, 0.05%)</title><rect x="215.6" y="771.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="218.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (18 samples, 0.11%)</title><rect x="216.2" y="771.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="219.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (18 samples, 0.11%)</title><rect x="216.2" y="755.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="219.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (9 samples, 0.06%)</title><rect x="216.6" y="739.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="219.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (7 samples, 0.04%)</title><rect x="217.5" y="771.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="220.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (11 samples, 0.07%)</title><rect x="218.1" y="787.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="221.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (11 samples, 0.07%)</title><rect x="218.1" y="771.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="221.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.getExclusiveOwnerThread (9 samples, 0.06%)</title><rect x="218.1" y="755.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="221.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (235 samples, 1.48%)</title><rect x="218.9" y="819.0" width="17.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="221.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (235 samples, 1.48%)</title><rect x="218.9" y="803.0" width="17.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="221.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (235 samples, 1.48%)</title><rect x="218.9" y="787.0" width="17.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="221.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (235 samples, 1.48%)</title><rect x="218.9" y="771.0" width="17.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="221.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (235 samples, 1.48%)</title><rect x="218.9" y="755.0" width="17.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="221.9" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (27 samples, 0.17%)</title><rect x="218.9" y="739.0" width="2.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="221.9" y="750.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (14 samples, 0.09%)</title><rect x="219.2" y="723.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="222.2" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (4 samples, 0.03%)</title><rect x="220.4" y="723.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="223.4" y="734.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (208 samples, 1.31%)</title><rect x="220.9" y="739.0" width="15.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="223.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (176 samples, 1.11%)</title><rect x="223.2" y="723.0" width="13.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="226.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (176 samples, 1.11%)</title><rect x="223.2" y="707.0" width="13.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="226.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (164 samples, 1.03%)</title><rect x="224.1" y="691.0" width="12.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="227.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (163 samples, 1.02%)</title><rect x="224.2" y="675.0" width="12.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="227.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (163 samples, 1.02%)</title><rect x="224.2" y="659.0" width="12.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="227.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (159 samples, 1.00%)</title><rect x="224.5" y="643.0" width="11.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="227.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (151 samples, 0.95%)</title><rect x="225.1" y="627.0" width="11.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="228.1" y="638.0"></text>
</g>
<g>
<title>[unknown] (149 samples, 0.94%)</title><rect x="225.2" y="611.0" width="11.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="228.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="235.9" y="595.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="238.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="235.9" y="579.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="238.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="235.9" y="563.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="238.9" y="574.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="235.9" y="547.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="238.9" y="558.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="235.9" y="531.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="238.9" y="542.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="235.9" y="515.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="238.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="235.9" y="499.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="238.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (5 samples, 0.03%)</title><rect x="236.3" y="835.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="239.3" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/SimpleServer$$Lambda$67/1693143379.run (6,173 samples, 38.78%)</title><rect x="236.7" y="851.0" width="457.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="239.7" y="862.0">ru/mail/polis/service/SimpleServer$$Lambda$67/1693143379.run</text>
</g>
<g>
<title>ru/mail/polis/service/SimpleServer.lambda$executeAsync$4 (6,172 samples, 38.77%)</title><rect x="236.7" y="835.0" width="457.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="239.7" y="846.0">ru/mail/polis/service/SimpleServer.lambda$executeAsync$4</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (4 samples, 0.03%)</title><rect x="237.1" y="819.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="240.1" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/service/SimpleServer$$Lambda$64/1424917803.act (566 samples, 3.56%)</title><rect x="237.4" y="819.0" width="42.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="240.4" y="830.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/SimpleServer.lambda$daoMethods$2 (564 samples, 3.54%)</title><rect x="237.6" y="803.0" width="41.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="240.6" y="814.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/SimpleServer.putMethod (564 samples, 3.54%)</title><rect x="237.6" y="787.0" width="41.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="240.6" y="798.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (27 samples, 0.17%)</title><rect x="237.6" y="771.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="240.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (27 samples, 0.17%)</title><rect x="237.6" y="755.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="240.6" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (27 samples, 0.17%)</title><rect x="237.6" y="739.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="240.6" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (27 samples, 0.17%)</title><rect x="237.6" y="723.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="240.6" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.03%)</title><rect x="238.9" y="707.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="241.9" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/persistence/LSMDao.upsert (5 samples, 0.03%)</title><rect x="239.3" y="707.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="242.3" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/persistence/LSMDao.upsert (532 samples, 3.34%)</title><rect x="239.9" y="771.0" width="39.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="242.9" y="782.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/persistence/MemoryTablePool.upsert (532 samples, 3.34%)</title><rect x="239.9" y="755.0" width="39.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="242.9" y="766.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.get (9 samples, 0.06%)</title><rect x="240.1" y="739.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="243.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/persistence/MemTable.upsert (517 samples, 3.25%)</title><rect x="240.7" y="739.0" width="38.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="243.7" y="750.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (481 samples, 3.02%)</title><rect x="241.4" y="723.0" width="35.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="244.4" y="734.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (481 samples, 3.02%)</title><rect x="241.4" y="707.0" width="35.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="244.4" y="718.0">jav..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (12 samples, 0.08%)</title><rect x="252.9" y="691.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="255.9" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (4 samples, 0.03%)</title><rect x="253.2" y="675.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="256.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.03%)</title><rect x="253.5" y="675.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="256.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (123 samples, 0.77%)</title><rect x="253.9" y="691.0" width="9.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="256.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.04%)</title><rect x="262.5" y="675.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="265.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.04%)</title><rect x="262.5" y="659.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="265.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.04%)</title><rect x="262.5" y="643.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="265.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="262.6" y="627.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="265.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="262.6" y="611.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="265.6" y="622.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="262.6" y="595.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="265.6" y="606.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.03%)</title><rect x="262.7" y="579.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="265.7" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (11 samples, 0.07%)</title><rect x="263.0" y="691.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="266.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (9 samples, 0.06%)</title><rect x="263.0" y="675.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="266.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (178 samples, 1.12%)</title><rect x="263.8" y="691.0" width="13.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="266.8" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (160 samples, 1.01%)</title><rect x="265.1" y="675.0" width="11.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="268.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (159 samples, 1.00%)</title><rect x="265.2" y="659.0" width="11.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="268.2" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (56 samples, 0.35%)</title><rect x="265.3" y="643.0" width="4.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="268.3" y="654.0"></text>
</g>
<g>
<title>vectorizedMismatch (42 samples, 0.26%)</title><rect x="266.4" y="627.0" width="3.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="269.4" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (7 samples, 0.04%)</title><rect x="269.5" y="643.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="272.5" y="654.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (82 samples, 0.52%)</title><rect x="270.0" y="643.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="273.0" y="654.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (36 samples, 0.23%)</title><rect x="273.4" y="627.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="276.4" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (21 samples, 0.13%)</title><rect x="274.1" y="611.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="277.1" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (6 samples, 0.04%)</title><rect x="275.6" y="611.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="278.6" y="622.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (12 samples, 0.08%)</title><rect x="276.1" y="643.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="279.1" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (6 samples, 0.04%)</title><rect x="276.4" y="627.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="279.4" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/persistence/Value.of (22 samples, 0.14%)</title><rect x="277.4" y="723.0" width="1.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="280.4" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (9 samples, 0.06%)</title><rect x="277.4" y="707.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="280.4" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (9 samples, 0.06%)</title><rect x="277.4" y="691.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="280.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (9 samples, 0.06%)</title><rect x="277.4" y="675.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="280.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/persistence/Value.getMoment (13 samples, 0.08%)</title><rect x="278.1" y="707.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="281.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (5 samples, 0.03%)</title><rect x="278.1" y="691.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="281.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.incrementAndGet (8 samples, 0.05%)</title><rect x="278.5" y="691.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="281.5" y="702.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5 samples, 0.03%)</title><rect x="278.5" y="675.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="281.5" y="686.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.03%)</title><rect x="278.5" y="659.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="281.5" y="670.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.03%)</title><rect x="278.5" y="643.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="281.5" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/persistence/MemoryTablePool.syncAddToFlush (4 samples, 0.03%)</title><rect x="279.1" y="739.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="282.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/SimpleServer$$Lambda$65/1271384834.act (2,218 samples, 13.93%)</title><rect x="279.4" y="819.0" width="164.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="282.4" y="830.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/SimpleServer.lambda$daoMethods$0 (2,218 samples, 13.93%)</title><rect x="279.4" y="803.0" width="164.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="282.4" y="814.0">ru/mail/polis/service..</text>
</g>
<g>
<title>ru/mail/polis/service/SimpleServer.proxy (2,218 samples, 13.93%)</title><rect x="279.4" y="787.0" width="164.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="282.4" y="798.0">ru/mail/polis/service..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,206 samples, 13.86%)</title><rect x="280.2" y="771.0" width="163.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.2" y="782.0">one/nio/http/HttpClie..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2,205 samples, 13.85%)</title><rect x="280.3" y="755.0" width="163.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="283.3" y="766.0">one/nio/http/HttpClie..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (565 samples, 3.55%)</title><rect x="280.8" y="739.0" width="41.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.8" y="750.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (496 samples, 3.12%)</title><rect x="285.9" y="723.0" width="36.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="288.9" y="734.0">one..</text>
</g>
<g>
<title>[unknown] (57 samples, 0.36%)</title><rect x="287.4" y="707.0" width="4.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="290.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 0.35%)</title><rect x="287.4" y="691.0" width="4.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="290.4" y="702.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.03%)</title><rect x="287.4" y="675.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="290.4" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (42 samples, 0.26%)</title><rect x="287.7" y="675.0" width="3.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="290.7" y="686.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (35 samples, 0.22%)</title><rect x="288.1" y="659.0" width="2.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="291.1" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (20 samples, 0.13%)</title><rect x="289.2" y="643.0" width="1.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="292.2" y="654.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.03%)</title><rect x="290.4" y="627.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="293.4" y="638.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (8 samples, 0.05%)</title><rect x="290.9" y="675.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="293.9" y="686.0"></text>
</g>
<g>
<title>__GI___recv (415 samples, 2.61%)</title><rect x="291.6" y="707.0" width="30.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="294.6" y="718.0">__..</text>
</g>
<g>
<title>[unknown] (357 samples, 2.24%)</title><rect x="295.9" y="691.0" width="26.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="298.9" y="702.0">[..</text>
</g>
<g>
<title>[unknown] (357 samples, 2.24%)</title><rect x="295.9" y="675.0" width="26.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="298.9" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (337 samples, 2.12%)</title><rect x="297.4" y="659.0" width="24.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="300.4" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (336 samples, 2.11%)</title><rect x="297.4" y="643.0" width="24.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="300.4" y="654.0">[..</text>
</g>
<g>
<title>[unknown] (325 samples, 2.04%)</title><rect x="298.3" y="627.0" width="24.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="301.3" y="638.0">[..</text>
</g>
<g>
<title>[unknown] (314 samples, 1.97%)</title><rect x="299.1" y="611.0" width="23.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="302.1" y="622.0">[..</text>
</g>
<g>
<title>[unknown] (303 samples, 1.90%)</title><rect x="299.9" y="595.0" width="22.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="302.9" y="606.0">[..</text>
</g>
<g>
<title>[unknown] (262 samples, 1.65%)</title><rect x="302.9" y="579.0" width="19.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="305.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (212 samples, 1.33%)</title><rect x="306.6" y="563.0" width="15.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="309.6" y="574.0"></text>
</g>
<g>
<title>[unknown] (174 samples, 1.09%)</title><rect x="309.4" y="547.0" width="12.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="312.4" y="558.0"></text>
</g>
<g>
<title>[unknown] (127 samples, 0.80%)</title><rect x="312.9" y="531.0" width="9.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="315.9" y="542.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 0.40%)</title><rect x="317.7" y="515.0" width="4.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="320.7" y="526.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="322.0" y="499.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="325.0" y="510.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.03%)</title><rect x="322.0" y="483.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="325.0" y="494.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.03%)</title><rect x="322.0" y="467.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="325.0" y="478.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.03%)</title><rect x="322.0" y="451.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="325.0" y="462.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.03%)</title><rect x="322.0" y="435.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="325.0" y="446.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.03%)</title><rect x="322.0" y="419.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="325.0" y="430.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.03%)</title><rect x="322.0" y="403.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="325.0" y="414.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.03%)</title><rect x="322.0" y="387.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="325.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (117 samples, 0.73%)</title><rect x="322.6" y="739.0" width="8.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="325.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.07%)</title><rect x="322.8" y="723.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="325.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.04%)</title><rect x="323.1" y="707.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="326.1" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (7 samples, 0.04%)</title><rect x="323.6" y="723.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="326.6" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (56 samples, 0.35%)</title><rect x="324.1" y="723.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="327.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (42 samples, 0.26%)</title><rect x="325.2" y="707.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="328.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (38 samples, 0.24%)</title><rect x="325.5" y="691.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="328.5" y="702.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (4 samples, 0.03%)</title><rect x="328.0" y="675.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="331.0" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (17 samples, 0.11%)</title><rect x="328.3" y="723.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="331.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (20 samples, 0.13%)</title><rect x="329.6" y="723.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="332.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (15 samples, 0.09%)</title><rect x="329.8" y="707.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="332.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (4 samples, 0.03%)</title><rect x="329.8" y="691.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="332.8" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (11 samples, 0.07%)</title><rect x="330.1" y="691.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="333.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (95 samples, 0.60%)</title><rect x="331.3" y="739.0" width="7.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="334.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (10 samples, 0.06%)</title><rect x="332.5" y="723.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="335.5" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (61 samples, 0.38%)</title><rect x="333.2" y="723.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="336.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.04%)</title><rect x="333.9" y="707.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="336.9" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (12 samples, 0.08%)</title><rect x="334.4" y="707.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="337.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (8 samples, 0.05%)</title><rect x="334.5" y="691.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="337.5" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (34 samples, 0.21%)</title><rect x="335.2" y="707.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="338.2" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (30 samples, 0.19%)</title><rect x="335.5" y="691.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="338.5" y="702.0"></text>
</g>
<g>
<title>java/lang/String.length (17 samples, 0.11%)</title><rect x="336.5" y="675.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="339.5" y="686.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (8 samples, 0.05%)</title><rect x="337.8" y="723.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="340.8" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (17 samples, 0.11%)</title><rect x="338.4" y="739.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="341.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (11 samples, 0.07%)</title><rect x="338.7" y="723.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="341.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (10 samples, 0.06%)</title><rect x="338.7" y="707.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="341.7" y="718.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (4 samples, 0.03%)</title><rect x="339.1" y="691.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="342.1" y="702.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (262 samples, 1.65%)</title><rect x="339.6" y="739.0" width="19.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="342.6" y="750.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (6 samples, 0.04%)</title><rect x="340.1" y="723.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="343.1" y="734.0"></text>
</g>
<g>
<title>__GI___setsockopt (250 samples, 1.57%)</title><rect x="340.5" y="723.0" width="18.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="343.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (137 samples, 0.86%)</title><rect x="348.9" y="707.0" width="10.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="351.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (137 samples, 0.86%)</title><rect x="348.9" y="691.0" width="10.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="351.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 0.62%)</title><rect x="351.8" y="675.0" width="7.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="354.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (95 samples, 0.60%)</title><rect x="352.0" y="659.0" width="7.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="355.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 0.54%)</title><rect x="352.7" y="643.0" width="6.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="355.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (71 samples, 0.45%)</title><rect x="353.8" y="627.0" width="5.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="356.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.32%)</title><rect x="355.3" y="611.0" width="3.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="358.3" y="622.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.14%)</title><rect x="357.3" y="595.0" width="1.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="360.3" y="606.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (1,085 samples, 6.82%)</title><rect x="359.0" y="739.0" width="80.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="362.0" y="750.0">one/nio/n..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.03%)</title><rect x="359.7" y="723.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="362.7" y="734.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (28 samples, 0.18%)</title><rect x="360.0" y="723.0" width="2.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="363.0" y="734.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (18 samples, 0.11%)</title><rect x="360.6" y="707.0" width="1.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="363.6" y="718.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (14 samples, 0.09%)</title><rect x="360.9" y="691.0" width="1.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="363.9" y="702.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (5 samples, 0.03%)</title><rect x="361.5" y="675.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="364.5" y="686.0"></text>
</g>
<g>
<title>__send (1,040 samples, 6.53%)</title><rect x="362.4" y="723.0" width="77.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="365.4" y="734.0">__send</text>
</g>
<g>
<title>[unknown] (990 samples, 6.22%)</title><rect x="366.1" y="707.0" width="73.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="369.1" y="718.0">[unknown]</text>
</g>
<g>
<title>[unknown] (990 samples, 6.22%)</title><rect x="366.1" y="691.0" width="73.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="369.1" y="702.0">[unknown]</text>
</g>
<g>
<title>[unknown] (959 samples, 6.02%)</title><rect x="368.4" y="675.0" width="71.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="371.4" y="686.0">[unknown]</text>
</g>
<g>
<title>[unknown] (954 samples, 5.99%)</title><rect x="368.7" y="659.0" width="70.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="371.7" y="670.0">[unknown]</text>
</g>
<g>
<title>[unknown] (948 samples, 5.95%)</title><rect x="369.2" y="643.0" width="70.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="372.2" y="654.0">[unknown]</text>
</g>
<g>
<title>[unknown] (940 samples, 5.90%)</title><rect x="369.8" y="627.0" width="69.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="372.8" y="638.0">[unknown]</text>
</g>
<g>
<title>[unknown] (928 samples, 5.83%)</title><rect x="370.7" y="611.0" width="68.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="373.7" y="622.0">[unknown]</text>
</g>
<g>
<title>[unknown] (924 samples, 5.80%)</title><rect x="371.0" y="595.0" width="68.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="374.0" y="606.0">[unknown]</text>
</g>
<g>
<title>[unknown] (887 samples, 5.57%)</title><rect x="373.7" y="579.0" width="65.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="376.7" y="590.0">[unknown]</text>
</g>
<g>
<title>[unknown] (858 samples, 5.39%)</title><rect x="375.9" y="563.0" width="63.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="378.9" y="574.0">[unknown]</text>
</g>
<g>
<title>[unknown] (827 samples, 5.19%)</title><rect x="378.2" y="547.0" width="61.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="381.2" y="558.0">[unkno..</text>
</g>
<g>
<title>[unknown] (801 samples, 5.03%)</title><rect x="380.1" y="531.0" width="59.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="383.1" y="542.0">[unkno..</text>
</g>
<g>
<title>[unknown] (745 samples, 4.68%)</title><rect x="384.2" y="515.0" width="55.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="387.2" y="526.0">[unkn..</text>
</g>
<g>
<title>[unknown] (732 samples, 4.60%)</title><rect x="385.2" y="499.0" width="54.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="388.2" y="510.0">[unkn..</text>
</g>
<g>
<title>[unknown] (713 samples, 4.48%)</title><rect x="386.6" y="483.0" width="52.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="389.6" y="494.0">[unkn..</text>
</g>
<g>
<title>[unknown] (698 samples, 4.38%)</title><rect x="387.7" y="467.0" width="51.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="390.7" y="478.0">[unkn..</text>
</g>
<g>
<title>[unknown] (691 samples, 4.34%)</title><rect x="388.2" y="451.0" width="51.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="391.2" y="462.0">[unkn..</text>
</g>
<g>
<title>[unknown] (685 samples, 4.30%)</title><rect x="388.7" y="435.0" width="50.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="391.7" y="446.0">[unkn..</text>
</g>
<g>
<title>[unknown] (665 samples, 4.18%)</title><rect x="390.2" y="419.0" width="49.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="393.2" y="430.0">[unkn..</text>
</g>
<g>
<title>[unknown] (664 samples, 4.17%)</title><rect x="390.2" y="403.0" width="49.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="393.2" y="414.0">[unkn..</text>
</g>
<g>
<title>[unknown] (653 samples, 4.10%)</title><rect x="391.1" y="387.0" width="48.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="394.1" y="398.0">[unk..</text>
</g>
<g>
<title>[unknown] (640 samples, 4.02%)</title><rect x="392.0" y="371.0" width="47.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="395.0" y="382.0">[unk..</text>
</g>
<g>
<title>[unknown] (614 samples, 3.86%)</title><rect x="393.9" y="355.0" width="45.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="396.9" y="366.0">[unk..</text>
</g>
<g>
<title>[unknown] (599 samples, 3.76%)</title><rect x="395.1" y="339.0" width="44.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="398.1" y="350.0">[unk..</text>
</g>
<g>
<title>[unknown] (577 samples, 3.62%)</title><rect x="396.7" y="323.0" width="42.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="399.7" y="334.0">[unk..</text>
</g>
<g>
<title>[unknown] (563 samples, 3.54%)</title><rect x="397.7" y="307.0" width="41.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="400.7" y="318.0">[un..</text>
</g>
<g>
<title>[unknown] (554 samples, 3.48%)</title><rect x="398.4" y="291.0" width="41.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="401.4" y="302.0">[un..</text>
</g>
<g>
<title>[unknown] (537 samples, 3.37%)</title><rect x="399.7" y="275.0" width="39.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="402.7" y="286.0">[un..</text>
</g>
<g>
<title>[unknown] (525 samples, 3.30%)</title><rect x="400.5" y="259.0" width="39.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="403.5" y="270.0">[un..</text>
</g>
<g>
<title>[unknown] (521 samples, 3.27%)</title><rect x="400.8" y="243.0" width="38.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="403.8" y="254.0">[un..</text>
</g>
<g>
<title>[unknown] (520 samples, 3.27%)</title><rect x="400.9" y="227.0" width="38.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="403.9" y="238.0">[un..</text>
</g>
<g>
<title>[unknown] (509 samples, 3.20%)</title><rect x="401.7" y="211.0" width="37.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="404.7" y="222.0">[un..</text>
</g>
<g>
<title>[unknown] (503 samples, 3.16%)</title><rect x="402.2" y="195.0" width="37.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="405.2" y="206.0">[un..</text>
</g>
<g>
<title>[unknown] (461 samples, 2.90%)</title><rect x="405.3" y="179.0" width="34.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="408.3" y="190.0">[u..</text>
</g>
<g>
<title>[unknown] (450 samples, 2.83%)</title><rect x="406.1" y="163.0" width="33.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="409.1" y="174.0">[u..</text>
</g>
<g>
<title>[unknown] (408 samples, 2.56%)</title><rect x="409.2" y="147.0" width="30.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="412.2" y="158.0">[u..</text>
</g>
<g>
<title>[unknown] (354 samples, 2.22%)</title><rect x="413.2" y="131.0" width="26.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="416.2" y="142.0">[..</text>
</g>
<g>
<title>[unknown] (347 samples, 2.18%)</title><rect x="413.7" y="115.0" width="25.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="416.7" y="126.0">[..</text>
</g>
<g>
<title>[unknown] (339 samples, 2.13%)</title><rect x="414.3" y="99.0" width="25.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="417.3" y="110.0">[..</text>
</g>
<g>
<title>[unknown] (14 samples, 0.09%)</title><rect x="438.4" y="83.0" width="1.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="441.4" y="94.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.06%)</title><rect x="438.8" y="67.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="441.8" y="78.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.03%)</title><rect x="439.2" y="51.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="442.2" y="62.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (45 samples, 0.28%)</title><rect x="439.5" y="739.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="442.5" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (35 samples, 0.22%)</title><rect x="440.2" y="723.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="443.2" y="734.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (35 samples, 0.22%)</title><rect x="440.2" y="707.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="443.2" y="718.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (13 samples, 0.08%)</title><rect x="442.8" y="739.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="445.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/SimpleServer.sendResponse (3,379 samples, 21.22%)</title><rect x="443.8" y="819.0" width="250.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="446.8" y="830.0">ru/mail/polis/service/SimpleServe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3,376 samples, 21.21%)</title><rect x="444.0" y="803.0" width="250.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="447.0" y="814.0">one/nio/http/HttpSession.sendResp..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (33 samples, 0.21%)</title><rect x="447.5" y="787.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="450.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (33 samples, 0.21%)</title><rect x="447.5" y="771.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="450.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (33 samples, 0.21%)</title><rect x="447.5" y="755.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="450.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.04%)</title><rect x="449.5" y="739.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.5" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (5 samples, 0.03%)</title><rect x="450.0" y="787.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="453.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3,259 samples, 20.47%)</title><rect x="450.4" y="787.0" width="241.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="453.4" y="798.0">one/nio/http/HttpSession.writeRe..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (150 samples, 0.94%)</title><rect x="450.4" y="771.0" width="11.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="453.4" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (14 samples, 0.09%)</title><rect x="452.3" y="755.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="455.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (109 samples, 0.68%)</title><rect x="453.4" y="755.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="456.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.04%)</title><rect x="453.7" y="739.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="456.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (6 samples, 0.04%)</title><rect x="453.7" y="723.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="456.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (4 samples, 0.03%)</title><rect x="454.1" y="739.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="457.1" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (36 samples, 0.23%)</title><rect x="454.4" y="739.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="457.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.charAt (10 samples, 0.06%)</title><rect x="456.3" y="723.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="459.3" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (4 samples, 0.03%)</title><rect x="456.7" y="707.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="459.7" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (59 samples, 0.37%)</title><rect x="457.1" y="739.0" width="4.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="460.1" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (59 samples, 0.37%)</title><rect x="457.1" y="723.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="460.1" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (10 samples, 0.06%)</title><rect x="460.4" y="707.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="463.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (8 samples, 0.05%)</title><rect x="460.4" y="691.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="463.4" y="702.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (4 samples, 0.03%)</title><rect x="461.2" y="707.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="464.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3,109 samples, 19.53%)</title><rect x="461.5" y="771.0" width="230.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="464.5" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (3,101 samples, 19.48%)</title><rect x="462.1" y="755.0" width="229.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="465.1" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (15 samples, 0.09%)</title><rect x="462.1" y="739.0" width="1.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="465.1" y="750.0"></text>
</g>
<g>
<title>gettimeofday (12 samples, 0.08%)</title><rect x="462.4" y="723.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="465.4" y="734.0"></text>
</g>
<g>
<title>[vdso] (11 samples, 0.07%)</title><rect x="462.4" y="707.0" width="0.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="465.4" y="718.0"></text>
</g>
<g>
<title>gettimeofday (6 samples, 0.04%)</title><rect x="463.4" y="739.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="466.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3,077 samples, 19.33%)</title><rect x="463.8" y="739.0" width="228.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.8" y="750.0">one/nio/net/Session$ArrayQueue..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3,074 samples, 19.31%)</title><rect x="464.1" y="723.0" width="227.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="467.1" y="734.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (10 samples, 0.06%)</title><rect x="465.5" y="707.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="468.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (82 samples, 0.52%)</title><rect x="466.2" y="707.0" width="6.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="469.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (82 samples, 0.52%)</title><rect x="466.2" y="691.0" width="6.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="469.2" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (67 samples, 0.42%)</title><rect x="466.4" y="675.0" width="4.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="469.4" y="686.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (55 samples, 0.35%)</title><rect x="466.9" y="659.0" width="4.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="469.9" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (42 samples, 0.26%)</title><rect x="467.8" y="643.0" width="3.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="470.8" y="654.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (6 samples, 0.04%)</title><rect x="470.5" y="627.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="473.5" y="638.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (5 samples, 0.03%)</title><rect x="471.0" y="659.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="474.0" y="670.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (6 samples, 0.04%)</title><rect x="471.3" y="675.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="474.3" y="686.0"></text>
</g>
<g>
<title>__send (6 samples, 0.04%)</title><rect x="471.8" y="675.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="474.8" y="686.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (15 samples, 0.09%)</title><rect x="472.3" y="707.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="475.3" y="718.0"></text>
</g>
<g>
<title>__send (2,948 samples, 18.52%)</title><rect x="473.4" y="707.0" width="218.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="476.4" y="718.0">__send</text>
</g>
<g>
<title>[unknown] (2,770 samples, 17.40%)</title><rect x="486.6" y="691.0" width="205.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="489.6" y="702.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2,770 samples, 17.40%)</title><rect x="486.6" y="675.0" width="205.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="489.6" y="686.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2,706 samples, 17.00%)</title><rect x="491.3" y="659.0" width="200.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="494.3" y="670.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2,704 samples, 16.98%)</title><rect x="491.5" y="643.0" width="200.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="494.5" y="654.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2,683 samples, 16.85%)</title><rect x="493.0" y="627.0" width="198.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="496.0" y="638.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2,665 samples, 16.74%)</title><rect x="494.4" y="611.0" width="197.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="497.4" y="622.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2,646 samples, 16.62%)</title><rect x="495.8" y="595.0" width="196.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="498.8" y="606.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2,639 samples, 16.58%)</title><rect x="496.3" y="579.0" width="195.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="499.3" y="590.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2,465 samples, 15.48%)</title><rect x="509.2" y="563.0" width="182.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="512.2" y="574.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2,363 samples, 14.84%)</title><rect x="516.8" y="547.0" width="175.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="519.8" y="558.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2,252 samples, 14.15%)</title><rect x="525.0" y="531.0" width="166.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="528.0" y="542.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2,165 samples, 13.60%)</title><rect x="531.4" y="515.0" width="160.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="534.4" y="526.0">[unknown]</text>
</g>
<g>
<title>[unknown] (2,011 samples, 12.63%)</title><rect x="542.9" y="499.0" width="149.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="545.9" y="510.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,956 samples, 12.29%)</title><rect x="546.9" y="483.0" width="145.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="549.9" y="494.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,907 samples, 11.98%)</title><rect x="550.6" y="467.0" width="141.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="553.6" y="478.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,871 samples, 11.75%)</title><rect x="553.2" y="451.0" width="138.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="556.2" y="462.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,811 samples, 11.38%)</title><rect x="557.7" y="435.0" width="134.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="560.7" y="446.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,787 samples, 11.22%)</title><rect x="559.5" y="419.0" width="132.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="562.5" y="430.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,721 samples, 10.81%)</title><rect x="564.3" y="403.0" width="127.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="567.3" y="414.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,714 samples, 10.77%)</title><rect x="564.9" y="387.0" width="127.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="567.9" y="398.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,665 samples, 10.46%)</title><rect x="568.5" y="371.0" width="123.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="571.5" y="382.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,635 samples, 10.27%)</title><rect x="570.7" y="355.0" width="121.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="573.7" y="366.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,565 samples, 9.83%)</title><rect x="575.9" y="339.0" width="116.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="578.9" y="350.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,518 samples, 9.54%)</title><rect x="579.4" y="323.0" width="112.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="582.4" y="334.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,448 samples, 9.10%)</title><rect x="584.6" y="307.0" width="107.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="587.6" y="318.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,435 samples, 9.01%)</title><rect x="585.5" y="291.0" width="106.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="588.5" y="302.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,402 samples, 8.81%)</title><rect x="588.0" y="275.0" width="103.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="591.0" y="286.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,349 samples, 8.47%)</title><rect x="591.9" y="259.0" width="100.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="594.9" y="270.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,325 samples, 8.32%)</title><rect x="593.7" y="243.0" width="98.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="596.7" y="254.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,309 samples, 8.22%)</title><rect x="594.9" y="227.0" width="97.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="597.9" y="238.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,305 samples, 8.20%)</title><rect x="595.2" y="211.0" width="96.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="598.2" y="222.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,279 samples, 8.03%)</title><rect x="597.1" y="195.0" width="94.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="600.1" y="206.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,255 samples, 7.88%)</title><rect x="598.9" y="179.0" width="93.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="601.9" y="190.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,138 samples, 7.15%)</title><rect x="607.6" y="163.0" width="84.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="610.6" y="174.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1,078 samples, 6.77%)</title><rect x="612.0" y="147.0" width="79.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="615.0" y="158.0">[unknown]</text>
</g>
<g>
<title>[unknown] (924 samples, 5.80%)</title><rect x="623.4" y="131.0" width="68.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="626.4" y="142.0">[unknown]</text>
</g>
<g>
<title>[unknown] (743 samples, 4.67%)</title><rect x="636.8" y="115.0" width="55.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="639.8" y="126.0">[unkn..</text>
</g>
<g>
<title>[unknown] (699 samples, 4.39%)</title><rect x="640.1" y="99.0" width="51.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="643.1" y="110.0">[unkn..</text>
</g>
<g>
<title>[unknown] (679 samples, 4.27%)</title><rect x="641.6" y="83.0" width="50.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="644.6" y="94.0">[unkn..</text>
</g>
<g>
<title>[unknown] (50 samples, 0.31%)</title><rect x="688.2" y="67.0" width="3.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="691.2" y="78.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.18%)</title><rect x="689.8" y="51.0" width="2.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="692.8" y="62.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.10%)</title><rect x="690.7" y="35.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="693.7" y="46.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (25 samples, 0.16%)</title><rect x="691.9" y="787.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="694.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (14 samples, 0.09%)</title><rect x="692.7" y="771.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.03%)</title><rect x="692.8" y="755.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (8 samples, 0.05%)</title><rect x="693.2" y="755.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="696.2" y="766.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (3,685 samples, 23.15%)</title><rect x="694.4" y="899.0" width="273.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.4" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (5 samples, 0.03%)</title><rect x="695.8" y="883.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="698.8" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (26 samples, 0.16%)</title><rect x="696.1" y="883.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="699.1" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (26 samples, 0.16%)</title><rect x="696.1" y="867.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="699.1" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (10 samples, 0.06%)</title><rect x="697.3" y="851.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="700.3" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (807 samples, 5.07%)</title><rect x="698.3" y="883.0" width="59.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="701.3" y="894.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (31 samples, 0.19%)</title><rect x="699.0" y="867.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.0" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (16 samples, 0.10%)</title><rect x="700.1" y="851.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="703.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (766 samples, 4.81%)</title><rect x="701.3" y="867.0" width="56.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="704.3" y="878.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (7 samples, 0.04%)</title><rect x="702.2" y="851.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="705.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (713 samples, 4.48%)</title><rect x="702.7" y="851.0" width="52.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="705.7" y="862.0">[unkn..</text>
</g>
<g>
<title>__libc_disable_asynccancel (8 samples, 0.05%)</title><rect x="702.7" y="835.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="705.7" y="846.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (5 samples, 0.03%)</title><rect x="703.3" y="835.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="706.3" y="846.0"></text>
</g>
<g>
<title>epoll_wait (699 samples, 4.39%)</title><rect x="703.8" y="835.0" width="51.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="706.8" y="846.0">epoll..</text>
</g>
<g>
<title>[unknown] (514 samples, 3.23%)</title><rect x="717.5" y="819.0" width="38.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="720.5" y="830.0">[un..</text>
</g>
<g>
<title>[unknown] (514 samples, 3.23%)</title><rect x="717.5" y="803.0" width="38.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="720.5" y="814.0">[un..</text>
</g>
<g>
<title>[unknown] (461 samples, 2.90%)</title><rect x="721.4" y="787.0" width="34.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="724.4" y="798.0">[u..</text>
</g>
<g>
<title>[unknown] (456 samples, 2.86%)</title><rect x="721.8" y="771.0" width="33.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="724.8" y="782.0">[u..</text>
</g>
<g>
<title>[unknown] (447 samples, 2.81%)</title><rect x="722.4" y="755.0" width="33.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="725.4" y="766.0">[u..</text>
</g>
<g>
<title>[unknown] (387 samples, 2.43%)</title><rect x="726.9" y="739.0" width="28.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="729.9" y="750.0">[u..</text>
</g>
<g>
<title>[unknown] (296 samples, 1.86%)</title><rect x="733.6" y="723.0" width="22.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="736.6" y="734.0">[..</text>
</g>
<g>
<title>[unknown] (215 samples, 1.35%)</title><rect x="739.6" y="707.0" width="16.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="742.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (164 samples, 1.03%)</title><rect x="743.4" y="691.0" width="12.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="746.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (80 samples, 0.50%)</title><rect x="749.6" y="675.0" width="6.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="752.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.08%)</title><rect x="754.6" y="659.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="757.6" y="670.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.06%)</title><rect x="754.9" y="643.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="757.9" y="654.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.05%)</title><rect x="755.0" y="627.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="758.0" y="638.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.05%)</title><rect x="755.0" y="611.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="758.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.05%)</title><rect x="755.0" y="595.0" width="0.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="758.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.04%)</title><rect x="755.1" y="579.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="758.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.03%)</title><rect x="755.2" y="563.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="758.2" y="574.0"></text>
</g>
<g>
<title>clock_gettime (17 samples, 0.11%)</title><rect x="755.8" y="851.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="758.8" y="862.0"></text>
</g>
<g>
<title>[vdso] (7 samples, 0.04%)</title><rect x="756.5" y="835.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="759.5" y="846.0"></text>
</g>
<g>
<title>epoll_wait (13 samples, 0.08%)</title><rect x="757.1" y="851.0" width="0.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="760.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (2,824 samples, 17.74%)</title><rect x="758.1" y="883.0" width="209.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="761.1" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (31 samples, 0.19%)</title><rect x="759.1" y="867.0" width="2.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="762.1" y="878.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (9 samples, 0.06%)</title><rect x="759.5" y="851.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="762.5" y="862.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (6 samples, 0.04%)</title><rect x="759.7" y="835.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="762.7" y="846.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.03%)</title><rect x="760.2" y="851.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="763.2" y="862.0"></text>
</g>
<g>
<title>gettimeofday (12 samples, 0.08%)</title><rect x="760.5" y="851.0" width="0.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="763.5" y="862.0"></text>
</g>
<g>
<title>[vdso] (8 samples, 0.05%)</title><rect x="760.8" y="835.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="763.8" y="846.0"></text>
</g>
<g>
<title>gettimeofday (4 samples, 0.03%)</title><rect x="761.4" y="867.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="764.4" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (2,774 samples, 17.42%)</title><rect x="761.7" y="867.0" width="205.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="764.7" y="878.0">one/nio/http/HttpSession.pr..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2,091 samples, 13.13%)</title><rect x="762.5" y="851.0" width="155.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="765.5" y="862.0">one/nio/http/HttpSes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (1,790 samples, 11.24%)</title><rect x="767.2" y="835.0" width="132.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="770.2" y="846.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1,781 samples, 11.19%)</title><rect x="767.9" y="819.0" width="132.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="770.9" y="830.0">one/nio/http/Htt..</text>
</g>
<g>
<title>RequestHandler1_daoMethods.handleRequest (1,685 samples, 10.58%)</title><rect x="768.3" y="803.0" width="124.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="771.3" y="814.0">RequestHandler1..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (61 samples, 0.38%)</title><rect x="768.3" y="787.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="771.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (11 samples, 0.07%)</title><rect x="768.5" y="771.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="771.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (11 samples, 0.07%)</title><rect x="768.5" y="755.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="771.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (36 samples, 0.23%)</title><rect x="769.5" y="771.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="772.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (36 samples, 0.23%)</title><rect x="769.5" y="755.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="772.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (15 samples, 0.09%)</title><rect x="769.7" y="739.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="772.7" y="750.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineUpdate (4 samples, 0.03%)</title><rect x="770.6" y="723.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="773.6" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (13 samples, 0.08%)</title><rect x="770.8" y="739.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="773.8" y="750.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineUpdate (5 samples, 0.03%)</title><rect x="771.8" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="774.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (8 samples, 0.05%)</title><rect x="772.2" y="771.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="775.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.05%)</title><rect x="772.2" y="755.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="775.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.05%)</title><rect x="772.2" y="739.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="775.2" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (8 samples, 0.05%)</title><rect x="772.2" y="723.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="775.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/SimpleServer.daoMethods (1,624 samples, 10.20%)</title><rect x="772.8" y="787.0" width="120.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="775.8" y="798.0">ru/mail/polis/s..</text>
</g>
<g>
<title>java/lang/String.getBytes (9 samples, 0.06%)</title><rect x="786.0" y="771.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="789.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (9 samples, 0.06%)</title><rect x="786.0" y="755.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="789.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (7 samples, 0.04%)</title><rect x="786.1" y="739.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="789.1" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (7 samples, 0.04%)</title><rect x="786.1" y="723.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="789.1" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (5 samples, 0.03%)</title><rect x="786.7" y="771.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="789.7" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.04%)</title><rect x="787.1" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="790.1" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (18 samples, 0.11%)</title><rect x="787.5" y="771.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="790.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (18 samples, 0.11%)</title><rect x="787.5" y="755.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="790.5" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (12 samples, 0.08%)</title><rect x="788.0" y="739.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="791.0" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.03%)</title><rect x="788.3" y="723.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="791.3" y="734.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (30 samples, 0.19%)</title><rect x="789.4" y="771.0" width="2.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="792.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.03%)</title><rect x="791.8" y="771.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Node.isMe (5 samples, 0.03%)</title><rect x="792.1" y="771.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="795.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Node.isMe (5 samples, 0.03%)</title><rect x="792.1" y="755.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="795.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equals (5 samples, 0.03%)</title><rect x="792.1" y="739.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="795.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Node.primaryFor (745 samples, 4.68%)</title><rect x="792.5" y="771.0" width="55.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="795.5" y="782.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/Node.primaryFor (745 samples, 4.68%)</title><rect x="792.5" y="755.0" width="55.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="795.5" y="766.0">ru/ma..</text>
</g>
<g>
<title>java/util/Arrays.toString (126 samples, 0.79%)</title><rect x="793.2" y="739.0" width="9.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="796.2" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (11 samples, 0.07%)</title><rect x="793.5" y="723.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="796.5" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (11 samples, 0.07%)</title><rect x="793.5" y="707.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="796.5" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (8 samples, 0.05%)</title><rect x="793.7" y="691.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="796.7" y="702.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (100 samples, 0.63%)</title><rect x="794.3" y="723.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="797.3" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (100 samples, 0.63%)</title><rect x="794.3" y="707.0" width="7.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="797.3" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (54 samples, 0.34%)</title><rect x="795.8" y="691.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="798.8" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.newCapacity (24 samples, 0.15%)</title><rect x="797.3" y="675.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="800.3" y="686.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (6 samples, 0.04%)</title><rect x="799.1" y="675.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="802.1" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.03%)</title><rect x="799.5" y="675.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="802.5" y="686.0"></text>
</g>
<g>
<title>java/lang/Integer.getChars (8 samples, 0.05%)</title><rect x="800.2" y="691.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="803.2" y="702.0"></text>
</g>
<g>
<title>java/lang/Integer.stringSize (8 samples, 0.05%)</title><rect x="800.8" y="691.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="803.8" y="702.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.03%)</title><rect x="801.4" y="691.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="804.4" y="702.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (11 samples, 0.07%)</title><rect x="801.7" y="723.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="804.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.05%)</title><rect x="801.9" y="707.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="804.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.03%)</title><rect x="802.0" y="691.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="805.0" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (5 samples, 0.03%)</title><rect x="802.6" y="739.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="805.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/persistence/Bytes.toArray (106 samples, 0.67%)</title><rect x="802.9" y="739.0" width="7.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="805.9" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (52 samples, 0.33%)</title><rect x="803.3" y="723.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="806.3" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (48 samples, 0.30%)</title><rect x="803.5" y="707.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="806.5" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (44 samples, 0.28%)</title><rect x="803.8" y="691.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="806.8" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (44 samples, 0.28%)</title><rect x="803.8" y="675.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="806.8" y="686.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.03%)</title><rect x="806.4" y="659.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="809.4" y="670.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.03%)</title><rect x="806.4" y="643.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="809.4" y="654.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (4 samples, 0.03%)</title><rect x="806.4" y="627.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="809.4" y="638.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (42 samples, 0.26%)</title><rect x="807.2" y="723.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="810.2" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (35 samples, 0.22%)</title><rect x="807.7" y="707.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="810.7" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (34 samples, 0.21%)</title><rect x="807.8" y="691.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="810.8" y="702.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.hash (5 samples, 0.03%)</title><rect x="809.0" y="675.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="812.0" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (8 samples, 0.05%)</title><rect x="809.4" y="675.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="812.4" y="686.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.03%)</title><rect x="810.0" y="675.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="813.0" y="686.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (7 samples, 0.04%)</title><rect x="810.3" y="723.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="813.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/Node.myHashCode (498 samples, 3.13%)</title><rect x="810.8" y="739.0" width="36.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="813.8" y="750.0">ru/..</text>
</g>
<g>
<title>com/google/common/hash/AbstractHasher.putString (50 samples, 0.31%)</title><rect x="810.9" y="723.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="813.9" y="734.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractByteHasher.putBytes (46 samples, 0.29%)</title><rect x="810.9" y="707.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="813.9" y="718.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractByteHasher.update (46 samples, 0.29%)</title><rect x="810.9" y="691.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="813.9" y="702.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.update (46 samples, 0.29%)</title><rect x="810.9" y="675.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="813.9" y="686.0"></text>
</g>
<g>
<title>java/security/MessageDigest.update (43 samples, 0.27%)</title><rect x="811.2" y="659.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="814.2" y="670.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineUpdate (41 samples, 0.26%)</title><rect x="811.3" y="643.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="814.3" y="654.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineUpdate (40 samples, 0.25%)</title><rect x="811.4" y="627.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="814.4" y="638.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (18 samples, 0.11%)</title><rect x="813.0" y="611.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="816.0" y="622.0"></text>
</g>
<g>
<title>com/google/common/hash/HashCode$BytesHashCode.asLong (7 samples, 0.04%)</title><rect x="814.6" y="723.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="817.6" y="734.0"></text>
</g>
<g>
<title>com/google/common/hash/HashCode$BytesHashCode.padToLong (4 samples, 0.03%)</title><rect x="814.8" y="707.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="817.8" y="718.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.hash (248 samples, 1.56%)</title><rect x="815.1" y="723.0" width="18.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="818.1" y="734.0"></text>
</g>
<g>
<title>java/security/MessageDigest.digest (237 samples, 1.49%)</title><rect x="815.6" y="707.0" width="17.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="818.6" y="718.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineDigest (237 samples, 1.49%)</title><rect x="815.6" y="691.0" width="17.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="818.6" y="702.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (237 samples, 1.49%)</title><rect x="815.6" y="675.0" width="17.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="818.6" y="686.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineDigest (234 samples, 1.47%)</title><rect x="815.8" y="659.0" width="17.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="818.8" y="670.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implDigest (231 samples, 1.45%)</title><rect x="816.1" y="643.0" width="17.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="819.1" y="654.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.i2bBig (27 samples, 0.17%)</title><rect x="817.4" y="627.0" width="2.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="820.4" y="638.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.i2bBig4 (8 samples, 0.05%)</title><rect x="819.4" y="627.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="822.4" y="638.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.engineUpdate (139 samples, 0.87%)</title><rect x="820.0" y="627.0" width="10.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="823.0" y="638.0"></text>
</g>
<g>
<title>jbyte_arraycopy (8 samples, 0.05%)</title><rect x="822.4" y="611.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="825.4" y="622.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (37 samples, 0.23%)</title><rect x="823.0" y="611.0" width="2.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="826.0" y="622.0"></text>
</g>
<g>
<title>sha256_implCompress (8 samples, 0.05%)</title><rect x="825.7" y="611.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="828.7" y="622.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompress (54 samples, 0.34%)</title><rect x="826.3" y="611.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="829.3" y="622.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.b2iBig64 (8 samples, 0.05%)</title><rect x="826.4" y="595.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="829.4" y="606.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompressCheck (44 samples, 0.28%)</title><rect x="827.0" y="595.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="830.0" y="606.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.b2iBig64 (35 samples, 0.22%)</title><rect x="827.7" y="579.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="830.7" y="590.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompress (39 samples, 0.24%)</title><rect x="830.3" y="627.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="833.3" y="638.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.b2iBig64 (4 samples, 0.03%)</title><rect x="830.5" y="611.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="833.5" y="622.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompressCheck (32 samples, 0.20%)</title><rect x="830.8" y="611.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="833.8" y="622.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (5 samples, 0.03%)</title><rect x="831.0" y="595.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="834.0" y="606.0"></text>
</g>
<g>
<title>sha256_implCompress (4 samples, 0.03%)</title><rect x="831.0" y="579.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="834.0" y="590.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.b2iBig64 (25 samples, 0.16%)</title><rect x="831.3" y="595.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="834.3" y="606.0"></text>
</g>
<g>
<title>java/security/MessageDigest.getDigestLength (4 samples, 0.03%)</title><rect x="833.2" y="707.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="836.2" y="718.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.engineGetDigestLength (4 samples, 0.03%)</title><rect x="833.2" y="691.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="836.2" y="702.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction.newHasher (188 samples, 1.18%)</title><rect x="833.5" y="723.0" width="13.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="836.5" y="734.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (87 samples, 0.55%)</title><rect x="834.4" y="707.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="837.4" y="718.0"></text>
</g>
<g>
<title>com/google/common/hash/MessageDigestHashFunction$MessageDigestHasher.&lt;init&gt; (87 samples, 0.55%)</title><rect x="834.4" y="691.0" width="6.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="837.4" y="702.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractByteHasher.&lt;init&gt; (54 samples, 0.34%)</title><rect x="836.8" y="675.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="839.8" y="686.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHasher.&lt;init&gt; (6 samples, 0.04%)</title><rect x="837.1" y="659.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="840.1" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (38 samples, 0.24%)</title><rect x="837.6" y="659.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="840.6" y="670.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (38 samples, 0.24%)</title><rect x="837.6" y="643.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="840.6" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (33 samples, 0.21%)</title><rect x="837.9" y="627.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="840.9" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (22 samples, 0.14%)</title><rect x="838.7" y="611.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="841.7" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (4 samples, 0.03%)</title><rect x="839.4" y="595.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="842.4" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (9 samples, 0.06%)</title><rect x="839.7" y="595.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="842.7" y="606.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (4 samples, 0.03%)</title><rect x="840.1" y="579.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="843.1" y="590.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.03%)</title><rect x="840.1" y="563.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="843.1" y="574.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.order (6 samples, 0.04%)</title><rect x="840.4" y="659.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="843.4" y="670.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.clone (87 samples, 0.55%)</title><rect x="840.8" y="707.0" width="6.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="843.8" y="718.0"></text>
</g>
<g>
<title>java/security/MessageDigest$Delegate.&lt;init&gt; (10 samples, 0.06%)</title><rect x="841.7" y="691.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="844.7" y="702.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2$SHA256.clone (61 samples, 0.38%)</title><rect x="842.7" y="691.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="845.7" y="702.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.clone (57 samples, 0.36%)</title><rect x="843.0" y="675.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="846.0" y="686.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (6 samples, 0.04%)</title><rect x="844.8" y="659.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="847.8" y="670.0"></text>
</g>
<g>
<title>sun/security/provider/DigestBase.clone (24 samples, 0.15%)</title><rect x="845.5" y="659.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="848.5" y="670.0"></text>
</g>
<g>
<title>java/security/MessageDigestSpi.clone (10 samples, 0.06%)</title><rect x="845.7" y="643.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="848.7" y="654.0"></text>
</g>
<g>
<title>java/util/Arrays.toString (6 samples, 0.04%)</title><rect x="846.5" y="643.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="849.5" y="654.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.03%)</title><rect x="846.9" y="643.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="849.9" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/SimpleServer.executeAsync (598 samples, 3.76%)</title><rect x="847.7" y="771.0" width="44.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="850.7" y="782.0">ru/m..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.03%)</title><rect x="847.9" y="755.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="850.9" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.03%)</title><rect x="847.9" y="739.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="850.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/SimpleServer$$Lambda$67/1693143379.get$Lambda (4 samples, 0.03%)</title><rect x="847.9" y="723.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="850.9" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/SimpleServer$$Lambda$67/1693143379.&lt;init&gt; (4 samples, 0.03%)</title><rect x="847.9" y="707.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="850.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (592 samples, 3.72%)</title><rect x="848.2" y="755.0" width="43.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="851.2" y="766.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (591 samples, 3.71%)</title><rect x="848.2" y="739.0" width="43.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="851.2" y="750.0">java..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (5 samples, 0.03%)</title><rect x="848.4" y="723.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="851.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (529 samples, 3.32%)</title><rect x="848.7" y="723.0" width="39.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="851.7" y="734.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.03%)</title><rect x="849.0" y="707.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="852.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.03%)</title><rect x="849.0" y="691.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="852.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.03%)</title><rect x="849.0" y="675.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="852.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (4 samples, 0.03%)</title><rect x="849.0" y="659.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="852.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (4 samples, 0.03%)</title><rect x="849.0" y="643.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="852.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (4 samples, 0.03%)</title><rect x="849.0" y="627.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="852.0" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (522 samples, 3.28%)</title><rect x="849.3" y="707.0" width="38.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="852.3" y="718.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (522 samples, 3.28%)</title><rect x="849.3" y="691.0" width="38.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="852.3" y="702.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (522 samples, 3.28%)</title><rect x="849.3" y="675.0" width="38.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="852.3" y="686.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (522 samples, 3.28%)</title><rect x="849.3" y="659.0" width="38.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="852.3" y="670.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (522 samples, 3.28%)</title><rect x="849.3" y="643.0" width="38.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="852.3" y="654.0">jdk..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (82 samples, 0.52%)</title><rect x="849.3" y="627.0" width="6.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="852.3" y="638.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (39 samples, 0.24%)</title><rect x="851.0" y="611.0" width="2.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="854.0" y="622.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (15 samples, 0.09%)</title><rect x="854.0" y="611.0" width="1.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="857.0" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (6 samples, 0.04%)</title><rect x="855.6" y="627.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="858.6" y="638.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (430 samples, 2.70%)</title><rect x="856.1" y="627.0" width="31.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="859.1" y="638.0">pt..</text>
</g>
<g>
<title>[unknown] (356 samples, 2.24%)</title><rect x="861.6" y="611.0" width="26.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="864.6" y="622.0">[..</text>
</g>
<g>
<title>[unknown] (356 samples, 2.24%)</title><rect x="861.6" y="595.0" width="26.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="864.6" y="606.0">[..</text>
</g>
<g>
<title>[unknown] (330 samples, 2.07%)</title><rect x="863.5" y="579.0" width="24.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="866.5" y="590.0">[..</text>
</g>
<g>
<title>[unknown] (326 samples, 2.05%)</title><rect x="863.8" y="563.0" width="24.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="866.8" y="574.0">[..</text>
</g>
<g>
<title>[unknown] (324 samples, 2.04%)</title><rect x="863.9" y="547.0" width="24.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="866.9" y="558.0">[..</text>
</g>
<g>
<title>[unknown] (306 samples, 1.92%)</title><rect x="865.3" y="531.0" width="22.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="868.3" y="542.0">[..</text>
</g>
<g>
<title>[unknown] (285 samples, 1.79%)</title><rect x="866.8" y="515.0" width="21.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="869.8" y="526.0">[..</text>
</g>
<g>
<title>[unknown] (279 samples, 1.75%)</title><rect x="867.3" y="499.0" width="20.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="870.3" y="510.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.06%)</title><rect x="887.3" y="483.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="890.3" y="494.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.05%)</title><rect x="887.4" y="467.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="890.4" y="478.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.05%)</title><rect x="887.4" y="451.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="890.4" y="462.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.05%)</title><rect x="887.4" y="435.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="890.4" y="446.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.04%)</title><rect x="887.4" y="419.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="890.4" y="430.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.04%)</title><rect x="887.5" y="403.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="890.5" y="414.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.04%)</title><rect x="887.5" y="387.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="890.5" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (12 samples, 0.08%)</title><rect x="888.0" y="723.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="891.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (12 samples, 0.08%)</title><rect x="888.0" y="707.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="891.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (41 samples, 0.26%)</title><rect x="888.8" y="723.0" width="3.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="891.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (37 samples, 0.23%)</title><rect x="889.1" y="707.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="892.1" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (15 samples, 0.09%)</title><rect x="889.7" y="691.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="892.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (10 samples, 0.06%)</title><rect x="889.9" y="675.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="892.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (14 samples, 0.09%)</title><rect x="890.8" y="691.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="893.8" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (14 samples, 0.09%)</title><rect x="890.8" y="675.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="893.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (13 samples, 0.08%)</title><rect x="890.9" y="659.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="893.9" y="670.0"></text>
</g>
<g>
<title>sun/security/provider/ByteArrayAccess.i2bBig (5 samples, 0.03%)</title><rect x="892.0" y="771.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="895.0" y="782.0"></text>
</g>
<g>
<title>sun/security/provider/SHA2.implCompress (7 samples, 0.04%)</title><rect x="892.6" y="771.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="895.6" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (9 samples, 0.06%)</title><rect x="893.1" y="803.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="896.1" y="814.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (67 samples, 0.42%)</title><rect x="893.8" y="803.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="896.8" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (67 samples, 0.42%)</title><rect x="893.8" y="787.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="896.8" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (56 samples, 0.35%)</title><rect x="893.8" y="771.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="896.8" y="782.0"></text>
</g>
<g>
<title>RequestHandler1_daoMethods.handleRequest (14 samples, 0.09%)</title><rect x="894.2" y="755.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="897.2" y="766.0"></text>
</g>
<g>
<title>itable stub (31 samples, 0.19%)</title><rect x="895.2" y="755.0" width="2.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="898.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equals (6 samples, 0.04%)</title><rect x="897.5" y="755.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="900.5" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (11 samples, 0.07%)</title><rect x="898.0" y="771.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="901.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (11 samples, 0.07%)</title><rect x="898.0" y="755.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="901.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (5 samples, 0.03%)</title><rect x="898.4" y="739.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="901.4" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (15 samples, 0.09%)</title><rect x="898.8" y="803.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="901.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (13 samples, 0.08%)</title><rect x="898.9" y="787.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="901.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.08%)</title><rect x="899.0" y="771.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="902.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (12 samples, 0.08%)</title><rect x="899.0" y="755.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="902.0" y="766.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (9 samples, 0.06%)</title><rect x="899.2" y="739.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="902.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (107 samples, 0.67%)</title><rect x="899.9" y="835.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="902.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.04%)</title><rect x="901.4" y="819.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="904.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.04%)</title><rect x="901.4" y="803.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="904.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.04%)</title><rect x="901.4" y="787.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="904.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (6 samples, 0.04%)</title><rect x="901.4" y="771.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="904.4" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (39 samples, 0.24%)</title><rect x="901.9" y="819.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="904.9" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (38 samples, 0.24%)</title><rect x="902.0" y="803.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="905.0" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (41 samples, 0.26%)</title><rect x="904.8" y="819.0" width="3.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="907.8" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.03%)</title><rect x="907.5" y="803.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="910.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (22 samples, 0.14%)</title><rect x="907.8" y="835.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="910.8" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (12 samples, 0.08%)</title><rect x="908.1" y="819.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="911.1" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (12 samples, 0.08%)</title><rect x="908.1" y="803.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="911.1" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.digit (7 samples, 0.04%)</title><rect x="908.3" y="787.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="911.3" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.digit (7 samples, 0.04%)</title><rect x="908.3" y="771.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="911.3" y="782.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (7 samples, 0.04%)</title><rect x="908.3" y="755.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="911.3" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.03%)</title><rect x="909.2" y="819.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="912.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (5 samples, 0.03%)</title><rect x="909.5" y="835.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="912.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (59 samples, 0.37%)</title><rect x="909.8" y="835.0" width="4.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="912.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (41 samples, 0.26%)</title><rect x="910.8" y="819.0" width="3.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="913.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (39 samples, 0.24%)</title><rect x="910.9" y="803.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="913.9" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (5 samples, 0.03%)</title><rect x="912.4" y="787.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="915.4" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (5 samples, 0.03%)</title><rect x="912.4" y="771.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="915.4" y="782.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (4 samples, 0.03%)</title><rect x="912.5" y="755.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="915.5" y="766.0"></text>
</g>
<g>
<title>jbyte_arraycopy (5 samples, 0.03%)</title><rect x="912.9" y="787.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="915.9" y="798.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (8 samples, 0.05%)</title><rect x="913.2" y="787.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="916.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.03%)</title><rect x="913.8" y="819.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="916.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.03%)</title><rect x="913.9" y="803.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="916.9" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (43 samples, 0.27%)</title><rect x="914.3" y="835.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="917.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (37 samples, 0.23%)</title><rect x="914.7" y="819.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="917.7" y="830.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (6 samples, 0.04%)</title><rect x="917.0" y="803.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="920.0" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (673 samples, 4.23%)</title><rect x="917.5" y="851.0" width="49.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="920.5" y="862.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (669 samples, 4.20%)</title><rect x="917.7" y="835.0" width="49.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="920.7" y="846.0">one/n..</text>
</g>
<g>
<title>[unknown] (111 samples, 0.70%)</title><rect x="919.9" y="819.0" width="8.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="922.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (111 samples, 0.70%)</title><rect x="919.9" y="803.0" width="8.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="922.9" y="814.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (7 samples, 0.04%)</title><rect x="919.9" y="787.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="922.9" y="798.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (92 samples, 0.58%)</title><rect x="920.4" y="787.0" width="6.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="923.4" y="798.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (73 samples, 0.46%)</title><rect x="920.8" y="771.0" width="5.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="923.8" y="782.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (44 samples, 0.28%)</title><rect x="922.9" y="755.0" width="3.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="925.9" y="766.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (8 samples, 0.05%)</title><rect x="925.6" y="739.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="928.6" y="750.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (14 samples, 0.09%)</title><rect x="926.2" y="771.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="929.2" y="782.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (9 samples, 0.06%)</title><rect x="927.5" y="787.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="930.5" y="798.0"></text>
</g>
<g>
<title>__GI___recv (527 samples, 3.31%)</title><rect x="928.1" y="819.0" width="39.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="931.1" y="830.0">__G..</text>
</g>
<g>
<title>[unknown] (394 samples, 2.47%)</title><rect x="938.0" y="803.0" width="29.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="941.0" y="814.0">[u..</text>
</g>
<g>
<title>[unknown] (394 samples, 2.47%)</title><rect x="938.0" y="787.0" width="29.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="941.0" y="798.0">[u..</text>
</g>
<g>
<title>[unknown] (332 samples, 2.09%)</title><rect x="942.6" y="771.0" width="24.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="945.6" y="782.0">[..</text>
</g>
<g>
<title>[unknown] (330 samples, 2.07%)</title><rect x="942.7" y="755.0" width="24.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="945.7" y="766.0">[..</text>
</g>
<g>
<title>[unknown] (319 samples, 2.00%)</title><rect x="943.5" y="739.0" width="23.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="946.5" y="750.0">[..</text>
</g>
<g>
<title>[unknown] (304 samples, 1.91%)</title><rect x="944.7" y="723.0" width="22.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="947.7" y="734.0">[..</text>
</g>
<g>
<title>[unknown] (281 samples, 1.77%)</title><rect x="946.4" y="707.0" width="20.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="949.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (217 samples, 1.36%)</title><rect x="951.1" y="691.0" width="16.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="954.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (159 samples, 1.00%)</title><rect x="955.4" y="675.0" width="11.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="958.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (114 samples, 0.72%)</title><rect x="958.7" y="659.0" width="8.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="961.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 0.54%)</title><rect x="960.8" y="643.0" width="6.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="963.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.26%)</title><rect x="964.1" y="627.0" width="3.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="967.1" y="638.0"></text>
</g>
<g>
<title>start_thread (2,998 samples, 18.83%)</title><rect x="967.7" y="899.0" width="222.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="970.7" y="910.0">start_thread</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2,998 samples, 18.83%)</title><rect x="967.7" y="883.0" width="222.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="970.7" y="894.0">/usr/lib/jvm/java-11-openjdk-..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2,998 samples, 18.83%)</title><rect x="967.7" y="867.0" width="222.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="970.7" y="878.0">/usr/lib/jvm/java-11-openjdk-..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2,998 samples, 18.83%)</title><rect x="967.7" y="851.0" width="222.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="970.7" y="862.0">/usr/lib/jvm/java-11-openjdk-..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2,998 samples, 18.83%)</title><rect x="967.7" y="835.0" width="222.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="970.7" y="846.0">/usr/lib/jvm/java-11-openjdk-..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2,984 samples, 18.74%)</title><rect x="968.4" y="819.0" width="221.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="971.4" y="830.0">/usr/lib/jvm/java-11-openjdk-..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2,945 samples, 18.50%)</title><rect x="971.1" y="803.0" width="218.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="974.1" y="814.0">/usr/lib/jvm/java-11-openjdk-..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (2,218 samples, 13.93%)</title><rect x="1024.6" y="787.0" width="164.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1027.6" y="798.0">/usr/lib/jvm/java-11-..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1,791 samples, 11.25%)</title><rect x="1055.4" y="771.0" width="132.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1058.4" y="782.0">/usr/lib/jvm/jav..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (1,431 samples, 8.99%)</title><rect x="1081.5" y="755.0" width="106.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1084.5" y="766.0">/usr/lib/jvm/..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (898 samples, 5.64%)</title><rect x="1120.8" y="739.0" width="66.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1123.8" y="750.0">/usr/li..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (412 samples, 2.59%)</title><rect x="1156.7" y="723.0" width="30.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1159.7" y="734.0">/u..</text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (156 samples, 0.98%)</title><rect x="1174.7" y="707.0" width="11.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1177.7" y="718.0"></text>
</g>
<g>
<title>/usr/lib/jvm/java-11-openjdk-amd64/lib/server/libjvm.so (36 samples, 0.23%)</title><rect x="1183.4" y="691.0" width="2.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1186.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.04%)</title><rect x="1186.3" y="707.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1189.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.04%)</title><rect x="1186.3" y="691.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1189.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.04%)</title><rect x="1186.3" y="675.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1189.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.04%)</title><rect x="1186.3" y="659.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1189.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.04%)</title><rect x="1186.3" y="643.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1189.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.04%)</title><rect x="1186.3" y="627.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1189.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.04%)</title><rect x="1186.3" y="611.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1189.3" y="622.0"></text>
</g>
<g>
<title>__GI_getrusage (5 samples, 0.03%)</title><rect x="1186.7" y="707.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1189.7" y="718.0"></text>
</g>
<g>
<title>__GI_getrusage (5 samples, 0.03%)</title><rect x="1187.6" y="755.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1190.6" y="766.0"></text>
</g>
<g>
<title>__GI_getrusage (7 samples, 0.04%)</title><rect x="1188.1" y="771.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1191.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.03%)</title><rect x="1188.4" y="755.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1191.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.03%)</title><rect x="1188.4" y="739.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1191.4" y="750.0"></text>
</g>
<g>
<title>__memset_avx2_erms (5 samples, 0.03%)</title><rect x="1188.7" y="771.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1191.7" y="782.0"></text>
</g>
<g>
<title>__GI___sched_yield (4 samples, 0.03%)</title><rect x="1189.6" y="819.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1192.6" y="830.0"></text>
</g>
</g>
</svg>
